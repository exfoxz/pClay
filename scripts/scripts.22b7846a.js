!function(a,b){function c(b){var c=a.URL||a.webkitURL,d=a.Blob,e=a.Worker;if(!(c&&d&&e&&b))return null;var f=new d([b]),g=new e(c.createObjectURL(f));return g}function d(a,b){function c(a){for(var b=[],c=a.clipboardData||{},e=c.items||[],f=0;f<e.length;f++){var g=e[f].getAsFile();if(g){var h=new RegExp("/(.*)").exec(g.type);if(!g.name&&h){var j=h[1];g.name="clipboard"+f+"."+j}b.push(g)}}b.length&&(i(a,b,d),a.preventDefault(),a.stopPropagation())}if(w.enabled){var d=l(l({},w.opts),b);a.addEventListener("paste",c,!1)}}function e(a,b){function c(b){i(b,a.files,e)}function d(a){a.stopPropagation(),a.preventDefault(),i(a,a.dataTransfer.files,e)}if(w.enabled){var e=l(l({},w.opts),b);a.addEventListener("change",c,!1),a.addEventListener("drop",d,!1)}}function f(a,c){function d(a){r=!1}function e(a){r=!0}function f(a){a.dataTransfer.files&&a.dataTransfer.files.length&&(a.stopPropagation(),a.preventDefault())}function g(a){return function(){r||a.apply(this,arguments)}}function h(b){b.stopPropagation(),b.preventDefault(),q&&o(a,q),i(b,b.dataTransfer.files,p)}function j(b){b.stopPropagation(),b.preventDefault(),q&&n(a,q)}function k(b){q&&o(a,q)}function m(b){b.stopPropagation(),b.preventDefault(),q&&n(a,q)}if(w.enabled){var p=l(l({},w.opts),c),q=p.dragClass,r=!1;a.addEventListener("dragenter",g(j),!1),a.addEventListener("dragleave",g(k),!1),a.addEventListener("dragover",g(m),!1),a.addEventListener("drop",g(h),!1),b.body.addEventListener("dragstart",e,!0),b.body.addEventListener("dragend",d,!0),b.body.addEventListener("drop",f,!1)}}function g(a,b){for(var c=0;c<a.length;c++){var d=a[c];d.extra={nameNoExtension:d.name.substring(0,d.name.lastIndexOf(".")),extension:d.name.substring(d.name.lastIndexOf(".")+1),fileID:c,uniqueID:y(),groupID:b,prettySize:p(d.size)}}}function h(a,b,c){for(var d in b)if(a.match(new RegExp(d)))return"readAs"+b[d];return"readAs"+c}function i(a,b,d){function e(){j.ended=new Date,d.on.groupend(j)}function f(){0===--i&&e()}var i=b.length,j={groupID:x(),files:b,started:new Date};if(w.output.push(j),g(b,j.groupID),d.on.groupstart(j),!b.length)return void e();var k,l=v&&r;l&&(k=c(s),k.onmessage=function(a){var b=a.data.file,c=a.data.result;b.extra||(b.extra=a.data.extra),b.extra.ended=new Date,d.on["error"===c?"error":"load"]({target:{result:c}},b),f()}),Array.prototype.forEach.call(b,function(b){if(b.extra.started=new Date,d.accept&&!b.type.match(new RegExp(d.accept)))return d.on.skip(b),void f();if(d.on.beforestart(b)===!1)return d.on.skip(b),void f();var c=h(b.type,d.readAsMap,d.readAsDefault);if(k)k.postMessage({file:b,extra:b.extra,readAs:c});else{var e=new q;e.originalEvent=a,u.forEach(function(a){e["on"+a]=function(c){("load"==a||"error"==a)&&(b.extra.ended=new Date),d.on[a](c,b),"loadend"==a&&f()}}),e[c](b)}})}function j(){var a=c(t);a&&(a.onmessage=function(a){r=a.data},a.postMessage({}))}function k(){}function l(a,b){for(var c in b)b[c]&&b[c].constructor&&b[c].constructor===Object?(a[c]=a[c]||{},arguments.callee(a[c],b[c])):a[c]=b[c];return a}function m(a,b){return new RegExp("(?:^|\\s+)"+b+"(?:\\s+|$)").test(a.className)}function n(a,b){m(a,b)||(a.className=a.className?[a.className,b].join(" "):b)}function o(a,b){if(m(a,b)){var c=a.className;a.className=c.replace(new RegExp("(?:^|\\s+)"+b+"(?:\\s+|$)","g")," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}}function p(a){var b=["bytes","kb","MB","GB","TB","PB"],c=Math.floor(Math.log(a)/Math.log(1024));return(a/Math.pow(1024,Math.floor(c))).toFixed(2)+" "+b[c]}var q=a.FileReader,r=!1,s="self.addEventListener('message', function(e) { var data=e.data; try { var reader = new FileReaderSync; postMessage({ result: reader[data.readAs](data.file), extra: data.extra, file: data.file})} catch(e){ postMessage({ result:'error', extra:data.extra, file:data.file}); } }, false);",t="onmessage = function(e) { postMessage(!!FileReaderSync); };",u=["loadstart","progress","load","abort","error","loadend"],v=!1,w=a.FileReaderJS={enabled:!1,setupInput:e,setupDrop:f,setupClipboard:d,setSync:function(a){v=a,v&&!r&&j()},getSync:function(){return v&&r},output:[],opts:{dragClass:"drag",accept:!1,readAsDefault:"DataURL",readAsMap:{},on:{loadstart:k,progress:k,load:k,abort:k,error:k,loadend:k,skip:k,groupstart:k,groupend:k,beforestart:k}}};if("undefined"!=typeof jQuery&&(jQuery.fn.fileReaderJS=function(a){return this.each(function(){jQuery(this).is("input")?e(this,a):f(this,a)})},jQuery.fn.fileClipboard=function(a){return this.each(function(){d(this,a)})}),q){var x=function(a){return function(){return a++}}(0),y=function(a){return function(){return a++}}(0);w.enabled=!0}}(this,document);var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array),function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b){var c=Date.now(),d=Math.max(0,16-(c-a)),e=window.setTimeout(function(){b(c+d)},d);return a=c+d,e}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)})}(),THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime=this.elapsedTime+this.getDelta()},THREE.Clock.prototype.getDelta=function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=Date.now(),a=.001*(b-this.oldTime);this.oldTime=b,this.elapsedTime=this.elapsedTime+a}return a},THREE.Color=function(a){return void 0!==a&&this.setHex(a),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSV:function(a,b,c){var d,e,f;if(0===c)this.r=this.g=this.b=0;else switch(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),d){case 1:this.r=f,this.g=c,this.b=a;break;case 2:this.r=a,this.g=c,this.b=b;break;case 3:this.r=a,this.g=f,this.b=c;break;case 4:this.r=b,this.g=a,this.b=c;break;case 5:this.r=c,this.g=a,this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},lerpSelf:function(a,b){return this.r=this.r+(a.r-this.r)*b,this.g=this.g+(a.g-this.g)*b,this.b=this.b+(a.b-this.b)*b,this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return"rgb("+Math.floor(255*this.r)+","+Math.floor(255*this.g)+","+Math.floor(255*this.b)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addSelf:function(a){return this.x=this.x+a.x,this.y=this.y+a.y,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},subSelf:function(a){return this.x=this.x-a.x,this.y=this.y-a.y,this},multiplyScalar:function(a){return this.x=this.x*a,this.y=this.y*a,this},divideScalar:function(a){return a?(this.x=this.x/a,this.y=this.y/a):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){return this.x=this.x+(a.x-this.x)*b,this.y=this.y+(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Quaternion=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(a){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a,this._updateEuler()},get y(){return this._y},set y(a){this._y=a,this._updateEuler()},get z(){return this._z},set z(a){this._z=a,this._updateEuler()},get w(){return this._w},set w(a){this._w=a,this._updateEuler()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._updateEuler(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._w=a._w,this._updateEuler(),this},setFromEuler:function(a,b){if(a instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);return"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h),b!==!1&&this._updateEuler(),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._updateEuler(),this},setFromRotationMatrix:function(a){var b,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[1],h=c[5],i=c[9],j=c[2],k=c[6],l=c[10],m=d+h+l;return m>0?(b=.5/Math.sqrt(m+1),this._w=.25/b,this._x=(k-i)*b,this._y=(f-j)*b,this._z=(g-e)*b):d>h&&d>l?(b=2*Math.sqrt(1+d-h-l),this._w=(k-i)/b,this._x=.25*b,this._y=(e+g)/b,this._z=(f+j)/b):h>l?(b=2*Math.sqrt(1+h-d-l),this._w=(f-j)/b,this._x=(e+g)/b,this._y=.25*b,this._z=(i+k)/b):(b=2*Math.sqrt(1+l-d-h),this._w=(g-e)/b,this._x=(f+j)/b,this._y=(i+k)/b,this._z=.25*b),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._updateEuler(),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<.001)return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var j=Math.sin((1-b)*h)/i,k=Math.sin(b*h)/i;return this._w=f*j+this._w*k,this._x=c*j+this._x*k,this._y=d*j+this._y*k,this._z=e*j+this._z*k,this._updateEuler(),this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],this._w=a[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(a){return this.x+=a,this.y+=a,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b}else this.x=0,this.y=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){return this.x=a[0],this.y=a[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addSelf:function(a){return this.x=this.x+a.x,this.y=this.y+a.y,this.z=this.z+a.z,this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;return this.x=c*a.z-d*a.y,this.y=d*a.x-b*a.z,this.z=b*a.y-c*a.x,this},isZero:function(){return this.lengthSq()<1e-4},subSelf:function(a){return this.x=this.x-a.x,this.y=this.y-a.y,this.z=this.z-a.z,this.w=this.w-a.w,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?this.subVectors(a,b):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b}else this.x=0,this.y=0,this.z=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},cross:function(a,b){if(void 0!==b)return this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this},angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d},setEulerFromRotationMatrix:function(a,b){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(a,b){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getRotationFromMatrix:function(a,b){var c=b?b.x:1,d=b?b.y:1,e=b?b.z:1,f=a.elements[0]/c,g=a.elements[4]/d,c=a.elements[1]/c,d=a.elements[5]/d,h=a.elements[9]/e,i=a.elements[10]/e;return this.y=Math.asin(a.elements[8]/e),e=Math.cos(this.y),Math.abs(e)>1e-5?(this.x=Math.atan2(-h/e,i/e),this.z=Math.atan2(-g/e,f/e)):(this.x=0,this.z=Math.atan2(c,d)),this},getPositionFromMatrix:function(a){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),d=this.set(a.elements[8],a.elements[9],a.elements[10]).length();return this.x=b,this.y=c,this.z=d,this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},addSelf:function(a){return this.x=this.x+a.x,this.y=this.y+a.y,this.z=this.z+a.z,this.w=this.w+a.w,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},subSelf:function(a){return this.x=this.x-a.x,this.y=this.y-a.y,this.z=this.z-a.z,this.w=this.w-a.w,this},multiplyScalar:function(a){return this.x=this.x*a,this.y=this.y*a,this.z=this.z*a,this.w=this.w*a,this},divideScalar:function(a){return a?(this.x=this.x/a,this.y=this.y/a,this.z=this.z/a,this.w=this.w/a):(this.z=this.y=this.x=0,this.w=1),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){return this.x=this.x+(a.x-this.x)*b,this.y=this.y+(a.y-this.y)*b,this.z=this.z+(a.z-this.z)*b,this.w=this.w+(a.w-this.w)*b,this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(a){var b,c=this.planes,d=a.elements,a=d[0];b=d[1];var e=d[2],f=d[3],g=d[4],h=d[5],i=d[6],j=d[7],k=d[8],l=d[9],m=d[10],n=d[11],o=d[12],p=d[13],q=d[14],d=d[15];for(c[0].set(f-a,j-g,n-k,d-o),c[1].set(f+a,j+g,n+k,d+o),c[2].set(f+b,j+h,n+l,d+p),c[3].set(f-b,j-h,n-l,d-p),c[4].set(f-e,j-i,n-m,d-q),c[5].set(f+e,j+i,n+m,d+q),a=0;6>a;a++)b=c[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))},THREE.Frustum.prototype.contains=function(a){for(var b=this.planes,c=a.matrixWorld,d=c.elements,c=-a.geometry.boundingSphere.radius*c.getMaxScaleOnAxis(),e=0;6>e;e++)if(a=b[e].x*d[12]+b[e].y*d[13]+b[e].z*d[14]+b[e].w,c>=a)return!1;return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Ray=function(a,b){function c(a,b,c){return z.sub(c,a),o=z.dot(b),p=A.add(a,B.copy(b).multiplyScalar(o)),q=c.distanceTo(p)}function d(a,b,c,d){return z.sub(d,b),A.sub(c,b),B.sub(a,b),r=z.dot(z),s=z.dot(A),t=z.dot(B),u=A.dot(A),v=A.dot(B),w=1/(r*u-s*s),x=(u*t-s*v)*w,y=(r*v-s*t)*w,x>=0&&y>=0&&1>x+y}this.origin=a||new THREE.Vector3,this.direction=b||new THREE.Vector3;var e=1e-4;this.setPrecision=function(a){e=a};var f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,n=new THREE.Vector3;this.intersectObject=function(a){var b,o=[];if(a instanceof THREE.Particle){var p=c(this.origin,this.direction,a.matrixWorld.getPosition());if(p>a.scale.x)return[];b={distance:p,point:a.position,face:null,object:a},o.push(b)}else if(a instanceof THREE.Mesh){var p=c(this.origin,this.direction,a.matrixWorld.getPosition()),q=THREE.Frustum.__v1.set(a.matrixWorld.getColumnX().length(),a.matrixWorld.getColumnY().length(),a.matrixWorld.getColumnZ().length());if(p>a.geometry.boundingSphere.radius*Math.max(q.x,Math.max(q.y,q.z)))return o;var r,s,t,u=a.geometry,v=u.vertices;for(a.matrixRotationWorld.extractRotation(a.matrixWorld),p=0,q=u.faces.length;q>p;p++)b=u.faces[p],j.copy(this.origin),k.copy(this.direction),t=a.matrixWorld,l=t.multiplyVector3(l.copy(b.centroid)).subSelf(j),m=a.matrixRotationWorld.multiplyVector3(m.copy(b.normal)),r=k.dot(m),Math.abs(r)<e||(s=m.dot(l)/r,0>s||!a.doubleSided&&!(a.flipSided?r>0:0>r)||(n.add(j,k.multiplyScalar(s)),b instanceof THREE.Face3?(f=t.multiplyVector3(f.copy(v[b.a])),g=t.multiplyVector3(g.copy(v[b.b])),h=t.multiplyVector3(h.copy(v[b.c])),d(n,f,g,h)&&(b={distance:j.distanceTo(n),point:n.clone(),face:b,object:a},o.push(b))):b instanceof THREE.Face4&&(f=t.multiplyVector3(f.copy(v[b.a])),g=t.multiplyVector3(g.copy(v[b.b])),h=t.multiplyVector3(h.copy(v[b.c])),i=t.multiplyVector3(i.copy(v[b.d])),(d(n,f,g,i)||d(n,g,h,i))&&(b={distance:j.distanceTo(n),point:n.clone(),face:b,object:a},o.push(b)))))}return o},this.intersectObjects=function(a){for(var b=[],c=0,d=a.length;d>c;c++)Array.prototype.push.apply(b,this.intersectObject(a[c]));return b.sort(function(a,b){return a.distance-b.distance}),b};var o,p,q,r,s,t,u,v,w,x,y,z=new THREE.Vector3,A=new THREE.Vector3,B=new THREE.Vector3},THREE.Rectangle=function(){function a(){f=d-b,g=e-c}var b,c,d,e,f,g,h=!0;this.getX=function(){return b},this.getY=function(){return c},this.getWidth=function(){return f},this.getHeight=function(){return g},this.getLeft=function(){return b},this.getTop=function(){return c},this.getRight=function(){return d},this.getBottom=function(){return e},this.set=function(f,g,i,j){h=!1,b=f,c=g,d=i,e=j,a()},this.addPoint=function(f,g){h?(h=!1,b=f,c=g,d=f,e=g):(b=f>b?b:f,c=g>c?c:g,d=d>f?d:f,e=e>g?e:g),a()},this.add3Points=function(f,g,i,j,k,l){h?(h=!1,b=i>f?k>f?f:k:k>i?i:k,c=j>g?l>g?g:l:l>j?j:l,d=f>i?f>k?f:k:i>k?i:k,e=g>j?g>l?g:l:j>l?j:l):(b=i>f?k>f?b>f?f:b:b>k?k:b:k>i?b>i?i:b:b>k?k:b,c=j>g?l>g?c>g?g:c:c>l?l:c:l>j?c>j?j:c:c>l?l:c,d=f>i?f>k?f>d?f:d:k>d?k:d:i>k?i>d?i:d:k>d?k:d,e=g>j?g>l?g>e?g:e:l>e?l:e:j>l?j>e?j:e:l>e?l:e),a()},this.addRectangle=function(f){h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom()),a()},this.inflate=function(f){b-=f,c-=f,d+=f,e+=f,a()},this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft(),c=c>f.getTop()?c:f.getTop(),d=d<f.getRight()?d:f.getRight(),e=e<f.getBottom()?e:f.getBottom(),a()},this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0},this.empty=function(){h=!0,e=d=c=b=0,a()},this.isEmpty=function(){return h}},THREE.Math={clamp:function(a,b,c){return b>a?b:a>c?c:a},clampBottom:function(a,b){return b>a?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return 0>a?-1:a>0?1:0}},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],j=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,k=this.elements;return k[0]=b*a,k[1]=b*c,k[2]=b*d,k[3]=b*e,k[4]=b*f,k[5]=b*g,k[6]=b*h,k[7]=b*i,k[8]=b*j,this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},transposeIntoArray:function(a){var b=this.m;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.elements=new Float32Array(16),this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,i||0,j||0,void 0!==k?k:1,l||0,m||0,n||0,o||0,void 0!==p?p:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return a=a.elements,this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]),this},lookAt:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;return g.sub(a,b).normalize(),0===g.length()&&(g.z=1),e.cross(c,g).normalize(),0===e.length()&&(g.x=g.x+1e-4,e.cross(c,g).normalize()),f.cross(g,e),d[0]=e.x,d[4]=f.x,d[8]=g.x,d[1]=e.y,d[5]=f.y,d[9]=g.y,d[2]=e.z,d[6]=f.z,d[10]=g.z,this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],c=c[15],u=d[0],v=d[4],w=d[8],x=d[12],y=d[1],z=d[5],A=d[9],B=d[13],C=d[2],D=d[6],E=d[10],F=d[14],G=d[3],H=d[7],I=d[11],d=d[15];return e[0]=f*u+g*y+h*C+i*G,e[4]=f*v+g*z+h*D+i*H,e[8]=f*w+g*A+h*E+i*I,e[12]=f*x+g*B+h*F+i*d,e[1]=j*u+k*y+l*C+m*G,e[5]=j*v+k*z+l*D+m*H,e[9]=j*w+k*A+l*E+m*I,e[13]=j*x+k*B+l*F+m*d,e[2]=n*u+o*y+p*C+q*G,e[6]=n*v+o*z+p*D+q*H,e[10]=n*w+o*A+p*E+q*I,e[14]=n*x+o*B+p*F+q*d,e[3]=r*u+s*y+t*C+c*G,e[7]=r*v+s*z+t*D+c*H,e[11]=r*w+s*A+t*E+c*I,e[15]=r*x+s*B+t*F+c*d,this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiply(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]=b[0]*a,b[4]=b[4]*a,b[8]=b[8]*a,b[12]=b[12]*a,b[1]=b[1]*a,
b[5]=b[5]*a,b[9]=b[9]*a,b[13]=b[13]*a,b[2]=b[2]*a,b[6]=b[6]*a,b[10]=b[10]*a,b[14]=b[14]*a,b[3]=b[3]*a,b[7]=b[7]*a,b[11]=b[11]*a,b[15]=b[15]*a,this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);return a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f,a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f,a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f,a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;return a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f,a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f,a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f,a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f,a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return a.x=c*b[0]+d*b[4]+e*b[8],a.y=c*b[1]+d*b[5]+e*b[9],a.z=c*b[2]+d*b[6]+e*b[10],a.normalize(),a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;return c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w,c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w,c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w,c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1,c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],a=a[15];return e*h*k*n-d*i*k*n-e*g*l*n+c*i*l*n+d*g*m*n-c*h*m*n-e*h*j*o+d*i*j*o+e*f*l*o-b*i*l*o-d*f*m*o+b*h*m*o+e*g*j*p-c*i*j*p-e*f*k*p+b*i*k*p+c*f*m*p-b*g*m*p-d*g*j*a+c*h*j*a+d*f*k*a-b*h*k*a-c*f*l*a+b*g*l*a},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],j=c[9],k=c[13],l=c[2],m=c[6],n=c[10],o=c[14],p=c[3],q=c[7],r=c[11],c=c[15];return b[0]=j*o*q-k*n*q+k*m*r-i*o*r-j*m*c+i*n*c,b[4]=g*n*q-f*o*q-g*m*r+e*o*r+f*m*c-e*n*c,b[8]=f*k*q-g*j*q+g*i*r-e*k*r-f*i*c+e*j*c,b[12]=g*j*m-f*k*m-g*i*n+e*k*n+f*i*o-e*j*o,b[1]=k*n*p-j*o*p-k*l*r+h*o*r+j*l*c-h*n*c,b[5]=f*o*p-g*n*p+g*l*r-d*o*r-f*l*c+d*n*c,b[9]=g*j*p-f*k*p-g*h*r+d*k*r+f*h*c-d*j*c,b[13]=f*k*l-g*j*l+g*h*n-d*k*n-f*h*o+d*j*o,b[2]=i*o*p-k*m*p+k*l*q-h*o*q-i*l*c+h*m*c,b[6]=g*m*p-e*o*p-g*l*q+d*o*q+e*l*c-d*m*c,b[10]=e*k*p-g*i*p+g*h*q-d*k*q-e*h*c+d*i*c,b[14]=g*i*l-e*k*l-g*h*m+d*k*m+e*h*o-d*i*o,b[3]=j*m*p-i*n*p-j*l*q+h*n*q+i*l*r-h*m*r,b[7]=e*n*p-f*m*p+f*l*q-d*n*q-e*l*r+d*m*r,b[11]=f*i*p-e*j*p-f*h*q+d*j*q+e*h*r-d*i*r,b[15]=e*j*l-f*i*l+f*h*m-d*j*m-e*h*n+d*i*n,this.multiplyScalar(1/a.determinant()),this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=Math.sin(f);switch(b){case"YXZ":var j=h*i,k=h*f,l=e*i,m=e*f;c[0]=j+m*d,c[4]=l*d-k,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=k*d-l,c[6]=m+j*d,c[10]=g*h;break;case"ZXY":j=h*i,k=h*f,l=e*i,m=e*f,c[0]=j-m*d,c[4]=-g*f,c[8]=l+k*d,c[1]=k+l*d,c[5]=g*i,c[9]=m-j*d,c[2]=-g*e,c[6]=d,c[10]=g*h;break;case"ZYX":j=g*i,k=g*f,l=d*i,m=d*f,c[0]=h*i,c[4]=l*e-k,c[8]=j*e+m,c[1]=h*f,c[5]=m*e+j,c[9]=k*e-l,c[2]=-e,c[6]=d*h,c[10]=g*h;break;case"YZX":j=g*h,k=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=m-j*f,c[8]=l*f+k,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=k*f+l,c[10]=j-m*f;break;case"XZY":j=g*h,k=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=j*f+m,c[5]=g*i,c[9]=k*f-l,c[2]=l*f-k,c[6]=d*i,c[10]=m*f+j;break;default:j=g*i,k=g*f,l=d*i,m=d*f,c[0]=h*i,c[4]=-h*f,c[8]=e,c[1]=k+l*e,c[5]=j-m*e,c[9]=-d*h,c[2]=m-j*e,c[6]=l+k*e,c[10]=g*h}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,j=c*h,c=c*i,k=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;return b[0]=1-(k+e),b[4]=j-f,b[8]=c+h,b[1]=j+f,b[5]=1-(a+e),b[9]=d-g,b[2]=c-h,b[6]=d+g,b[10]=1-(a+k),this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;return e.identity(),e.setRotationFromQuaternion(b),f.makeScale(c.x,c.y,c.z),this.multiply(e,f),d[12]=a.x,d[13]=a.y,d[14]=a.z,this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;return e.set(d[0],d[1],d[2]),f.set(d[4],d[5],d[6]),g.set(d[8],d[9],d[10]),a=a instanceof THREE.Vector3?a:new THREE.Vector3,b=b instanceof THREE.Quaternion?b:new THREE.Quaternion,c=c instanceof THREE.Vector3?c:new THREE.Vector3,c.x=e.length(),c.y=f.length(),c.z=g.length(),a.x=d[12],a.y=d[13],a.z=d[14],d=THREE.Matrix4.__m1,d.copy(this),d.elements[0]=d.elements[0]/c.x,d.elements[1]=d.elements[1]/c.x,d.elements[2]=d.elements[2]/c.x,d.elements[4]=d.elements[4]/c.y,d.elements[5]=d.elements[5]/c.y,d.elements[6]=d.elements[6]/c.y,d.elements[8]=d.elements[8]/c.z,d.elements[9]=d.elements[9]/c.z,d.elements[10]=d.elements[10]/c.z,b.setFromRotationMatrix(d),[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;return b[12]=a[12],b[13]=a[13],b[14]=a[14],this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();return b[0]=a[0]*d,b[1]=a[1]*d,b[2]=a[2]*d,b[4]=a[4]*e,b[5]=a[5]*e,b[6]=a[6]*e,b[8]=a[8]*c,b[9]=a[9]*c,b[10]=a[10]*c,this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;return b[12]=b[0]*c+b[4]*d+b[8]*a+b[12],b[13]=b[1]*c+b[5]*d+b[9]*a+b[13],b[14]=b[2]*c+b[6]*d+b[10]*a+b[14],b[15]=b[3]*c+b[7]*d+b[11]*a+b[15],this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);return b[4]=k*c+a*g,b[5]=k*d+a*h,b[6]=k*e+a*i,b[7]=k*f+a*j,b[8]=k*g-a*c,b[9]=k*h-a*d,b[10]=k*i-a*e,b[11]=k*j-a*f,this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);return b[0]=k*c-a*g,b[1]=k*d-a*h,b[2]=k*e-a*i,b[3]=k*f-a*j,b[8]=k*g+a*c,b[9]=k*h+a*d,b[10]=k*i+a*e,b[11]=k*j+a*f,this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=Math.cos(a),a=Math.sin(a);return b[0]=k*c+a*g,b[1]=k*d+a*h,b[2]=k*e+a*i,b[3]=k*f+a*j,b[4]=k*g-a*c,b[5]=k*h-a*d,b[6]=k*i-a*e,b[7]=k*j-a*f,this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,j=Math.cos(b),k=Math.sin(b),l=1-j,m=d*e*l,n=d*f*l,l=e*f*l,d=d*k,o=e*k,k=f*k,f=g+(1-g)*j,g=m+k,e=n-o,m=m-k,h=h+(1-h)*j,k=l+d,n=n+o,l=l-d,i=i+(1-i)*j,j=c[0],d=c[1],o=c[2],p=c[3],q=c[4],r=c[5],s=c[6],t=c[7],u=c[8],v=c[9],w=c[10],x=c[11];return c[0]=f*j+g*q+e*u,c[1]=f*d+g*r+e*v,c[2]=f*o+g*s+e*w,c[3]=f*p+g*t+e*x,c[4]=m*j+h*q+k*u,c[5]=m*d+h*r+k*v,c[6]=m*o+h*s+k*w,c[7]=m*p+h*t+k*x,c[8]=n*j+l*q+i*u,c[9]=n*d+l*r+i*v,c[10]=n*o+l*s+i*w,c[11]=n*p+l*t+i*x,this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;return b[0]=b[0]*c,b[4]=b[4]*d,b[8]=b[8]*a,b[1]=b[1]*c,b[5]=b[5]*d,b[9]=b[9]*a,b[2]=b[2]*c,b[6]=b[6]*d,b[10]=b[10]*a,b[3]=b[3]*c,b[7]=b[7]*d,b[11]=b[11]*a,this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);return this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);return this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);return this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(d-c),g[9]=(d+c)/(d-c),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-((b+a)/h),g[1]=0,g[5]=2/i,g[9]=0,g[13]=-((c+d)/i),g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-((f+e)/j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Object3D=function(){this.id=THREE.Object3DCount++,this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder="XYZ",this.scale=new THREE.Vector3(1,1,1),this.flipSided=this.doubleSided=!1,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix),this.scale.getScaleFromMatrix(this.matrix),this.rotation.getRotationFromMatrix(this.matrix,this.scale),this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b),this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){for(a.parent=void 0,this.children.splice(b,1),b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,e;for(c=0,d=this.children.length;d>c;c++){if(e=this.children[c],e.name===a)return e;if(b&&(e=e.getChildByName(a,b),void 0!==e))return e}},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)}},THREE.Euler=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._order=d||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a,this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a,this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a,this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a,this._updateQuaternion()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this._updateQuaternion(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._updateQuaternion(),this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];return b=b||this._order,"XYZ"===b?(this._y=Math.asin(c(g)),Math.abs(g)<.99999?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(j)),Math.abs(j)<.99999?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(l)),Math.abs(l)<.99999?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(k)),Math.abs(k)<.99999?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i))):"YZX"===b?(this._z=Math.asin(c(h)),Math.abs(h)<.99999?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m))):"XZY"===b?(this._z=Math.asin(-c(f)),Math.abs(f)<.99999?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b),this._order=b,this._updateQuaternion(),this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;return b=b||this._order,"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+b),this._order=b,c!==!1&&this._updateQuaternion(),this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this),this.setFromQuaternion(a,b)}}(),fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Object3DCount=0,THREE.Projector=function(){function a(){var a=p[g]=p[g]||new THREE.RenderableVertex;return g++,a}function b(a,b){return b.z-a.z}function c(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0?!0:0>e&&0>f||0>g&&0>h?!1:(0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f))),0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h))),c>d?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-d),!0))}var d,e,f,g,h,i,j,k,l,m,n,o=[],p=[],q=[],r=[],s=[],t=[],u={objects:[],sprites:[],lights:[],elements:[]},v=new THREE.Vector3,w=new THREE.Vector4,x=new THREE.Matrix4,y=new THREE.Matrix4,z=new THREE.Frustum,A=new THREE.Vector4,B=new THREE.Vector4;this.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),x.multiply(b.projectionMatrix,b.matrixWorldInverse),x.multiplyVector3(a),a},this.unprojectVector=function(a,b){return b.projectionMatrixInverse.getInverse(b.projectionMatrix),x.multiply(b.matrixWorld,b.projectionMatrixInverse),x.multiplyVector3(a),a},this.pickingRay=function(a,b){var c;return a.z=-1,c=new THREE.Vector3(a.x,a.y,1),this.unprojectVector(a,b),this.unprojectVector(c,b),c.subSelf(a).normalize(),new THREE.Ray(a,c)},this.projectGraph=function(a,c){e=0,u.objects.length=0,u.sprites.length=0,u.lights.length=0;var f=function(a){if(a.visible!==!1){if((a instanceof THREE.Mesh||a instanceof THREE.Line)&&(a.frustumCulled===!1||z.contains(a))){v.copy(a.matrixWorld.getPosition()),x.multiplyVector3(v);var b=o[e]=o[e]||new THREE.RenderableObject;e++,d=b,d.object=a,d.z=v.z,u.objects.push(d)}else a instanceof THREE.Light&&u.lights.push(a);for(var b=0,c=a.children.length;c>b;b++)f(a.children[b])}};return f(a),c&&u.objects.sort(b),u},this.projectScene=function(d,e,o){var v,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q=e.near,R=e.far,S=!1;for(n=l=j=i=0,u.elements.length=0,void 0===e.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),d.add(e)),d.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),x.multiply(e.projectionMatrix,e.matrixWorldInverse),z.setFromMatrix(x),u=this.projectGraph(d,!1),d=0,v=u.objects.length;v>d;d++)if(J=u.objects[d].object,K=J.matrixWorld,g=0,J instanceof THREE.Mesh){for(L=J.geometry,M=J.geometry.materials,E=L.vertices,N=L.faces,O=L.faceVertexUvs,L=J.matrixRotationWorld.extractRotation(K),C=0,D=E.length;D>C;C++)f=a(),f.positionWorld.copy(E[C]),K.multiplyVector3(f.positionWorld),f.positionScreen.copy(f.positionWorld),x.multiplyVector4(f.positionScreen),f.positionScreen.x=f.positionScreen.x/f.positionScreen.w,f.positionScreen.y=f.positionScreen.y/f.positionScreen.w,f.visible=f.positionScreen.z>Q&&f.positionScreen.z<R;for(E=0,C=N.length;C>E;E++){if(D=N[E],D instanceof THREE.Face3){if(F=p[D.a],G=p[D.b],H=p[D.c],!(F.visible&&G.visible&&H.visible))continue;if(S=(H.positionScreen.x-F.positionScreen.x)*(G.positionScreen.y-F.positionScreen.y)-(H.positionScreen.y-F.positionScreen.y)*(G.positionScreen.x-F.positionScreen.x)<0,!J.doubleSided&&S==J.flipSided)continue;I=q[i]=q[i]||new THREE.RenderableFace3,i++,h=I,h.v1.copy(F),h.v2.copy(G),h.v3.copy(H)}else if(D instanceof THREE.Face4){if(F=p[D.a],G=p[D.b],H=p[D.c],I=p[D.d],!(F.visible&&G.visible&&H.visible&&I.visible))continue;if(S=(I.positionScreen.x-F.positionScreen.x)*(G.positionScreen.y-F.positionScreen.y)-(I.positionScreen.y-F.positionScreen.y)*(G.positionScreen.x-F.positionScreen.x)<0||(G.positionScreen.x-H.positionScreen.x)*(I.positionScreen.y-H.positionScreen.y)-(G.positionScreen.y-H.positionScreen.y)*(I.positionScreen.x-H.positionScreen.x)<0,!J.doubleSided&&S==J.flipSided)continue;P=r[j]=r[j]||new THREE.RenderableFace4,j++,h=P,h.v1.copy(F),h.v2.copy(G),h.v3.copy(H),h.v4.copy(I)}for(h.normalWorld.copy(D.normal),!S&&(J.flipSided||J.doubleSided)&&h.normalWorld.negate(),L.multiplyVector3(h.normalWorld),h.centroidWorld.copy(D.centroid),K.multiplyVector3(h.centroidWorld),h.centroidScreen.copy(h.centroidWorld),x.multiplyVector3(h.centroidScreen),H=D.vertexNormals,F=0,G=H.length;G>F;F++)I=h.vertexNormalsWorld[F],I.copy(H[F]),!S&&(J.flipSided||J.doubleSided)&&I.negate(),L.multiplyVector3(I);for(F=0,G=O.length;G>F;F++)if(P=O[F][E])for(H=0,I=P.length;I>H;H++)h.uvs[F][H]=P[H];h.material=J.material,h.faceMaterial=null!==D.materialIndex?M[D.materialIndex]:null,h.z=h.centroidScreen.z,u.elements.push(h)}}else if(J instanceof THREE.Line)for(y.multiply(x,K),E=J.geometry.vertices,F=a(),F.positionScreen.copy(E[0]),y.multiplyVector4(F.positionScreen),K=J.type===THREE.LinePieces?2:1,C=1,D=E.length;D>C;C++)F=a(),F.positionScreen.copy(E[C]),y.multiplyVector4(F.positionScreen),(C+1)%K>0||(G=p[g-2],A.copy(F.positionScreen),B.copy(G.positionScreen),c(A,B)&&(A.multiplyScalar(1/A.w),B.multiplyScalar(1/B.w),M=s[l]=s[l]||new THREE.RenderableLine,l++,k=M,k.v1.positionScreen.copy(A),k.v2.positionScreen.copy(B),k.z=Math.max(A.z,B.z),k.material=J.material,u.elements.push(k)));for(d=0,v=u.sprites.length;v>d;d++)J=u.sprites[d].object,K=J.matrixWorld,J instanceof THREE.Particle&&(w.set(K.elements[12],K.elements[13],K.elements[14],1),x.multiplyVector4(w),w.z=w.z/w.w,w.z>0&&w.z<1&&(Q=t[n]=t[n]||new THREE.RenderableParticle,n++,m=Q,m.x=w.x/w.w,m.y=w.y/w.w,m.z=w.z,m.rotation=J.rotation.z,m.scale.x=J.scale.x*Math.abs(m.x-(w.x+e.projectionMatrix.elements[0])/(w.w+e.projectionMatrix.elements[12])),m.scale.y=J.scale.y*Math.abs(m.y-(w.y+e.projectionMatrix.elements[5])/(w.w+e.projectionMatrix.elements[13])),m.material=J.material,u.elements.push(m)));return o&&u.elements.sort(b),u}},THREE.Quaternion=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=a.w,this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,e=a.z*b,a=Math.cos(d),d=Math.sin(d),b=Math.cos(-e),e=Math.sin(-e),f=Math.cos(c),c=Math.sin(c),g=a*b,h=d*e;return this.w=g*f-h*c,this.x=g*c+h*f,this.y=d*b*f+a*e*c,this.z=a*e*f-d*b*c,this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this.x=a.x*d,this.y=a.y*d,this.z=a.z*d,this.w=Math.cos(c),this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);return this.w=Math.sqrt(Math.max(0,b+a.elements[0]+a.elements[5]+a.elements[10]))/2,this.x=Math.sqrt(Math.max(0,b+a.elements[0]-a.elements[5]-a.elements[10]))/2,this.y=Math.sqrt(Math.max(0,b-a.elements[0]+a.elements[5]-a.elements[10]))/2,this.z=Math.sqrt(Math.max(0,b-a.elements[0]-a.elements[5]+a.elements[10]))/2,this.x=a.elements[6]-a.elements[9]<0?-Math.abs(this.x):Math.abs(this.x),this.y=a.elements[8]-a.elements[2]<0?-Math.abs(this.y):Math.abs(this.y),this.z=a.elements[1]-a.elements[4]<0?-Math.abs(this.z):Math.abs(this.z),this.normalize(),this},calculateW:function(){return this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z)),this},inverse:function(){return this.x=-1*this.x,this.y=-1*this.y,this.z=-1*this.z,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x=this.x*a,this.y=this.y*a,this.z=this.z*a,this.w=this.w*a),this},multiply:function(a,b){return this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x,this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y,this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z,this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w,this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z,a=a.w;return this.x=b*a+e*f+c*h-d*g,this.y=c*a+e*g+d*f-b*h,this.z=d*a+e*h+b*g-c*f,this.w=e*a-b*f-c*g-d*h,this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,i=this.w,j=i*c+g*e-h*d,k=i*d+h*c-f*e,l=i*e+f*d-g*c,c=-f*c-g*d-h*e;return b.x=j*i+c*-f+k*-h-l*-g,b.y=k*i+c*-g+l*-f-j*-h,b.z=l*i+c*-h+j*-g-k*-f,b},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;if(0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b),Math.abs(e)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(e),e=Math.sqrt(1-e*e);return Math.abs(e)<.001?(c.w=.5*(a.w+b.w),c.x=.5*(a.x+b.x),c.y=.5*(a.y+b.y),c.z=.5*(a.z+b.z),c):(b=Math.sin((1-d)*f)/e,d=Math.sin(d*f)/e,c.w=a.w*b+c.w*d,c.x=a.x*b+c.x*d,c.y=a.y*b+c.y*d,c.z=a.z*b+c.z*d,c)},THREE.Vertex=function(){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.")},THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=f,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;c>b;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;c>b;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;c>b;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){this.a=a,this.b=b,this.c=c,this.d=d,this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3,this.vertexNormals=e instanceof Array?e:[],this.color=f instanceof THREE.Color?f:new THREE.Color,this.vertexColors=f instanceof Array?f:[],this.vertexTangents=[],this.materialIndex=g,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;c>b;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;c>b;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;c>b;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.UV=function(a,b){this.u=a||0,this.v=b||0},THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){return this.u=a,this.v=b,this},copy:function(a){return this.u=a.u,this.v=a.v,this},lerpSelf:function(a,b){return this.u=this.u+(a.u-this.u)*b,this.v=this.v+(a.v-this.v)*b,this},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){this.id=THREE.GeometryCount++,this.vertices=[],this.colors=[],this.materials=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.dynamic=this.hasTangents=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;d>c;c++)a.multiplyVector3(this.vertices[c]);for(c=0,d=this.faces.length;d>c;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;g>f;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){for(d=this.__tmpVertices=Array(this.vertices.length),a=0,b=this.vertices.length;b>a;a++)d[a]=new THREE.Vector3;for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(d=this.__tmpVertices,a=0,b=this.vertices.length;b>a;a++)d[a].set(0,0,0);for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));for(a=0,b=this.vertices.length;b>a;a++)d[a].normalize();for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;d>c;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;b>a;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;for(f.faces=this.faces,a=0,b=this.morphTargets.length;b>a;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var g,h,i=this.morphNormals[a].faceNormals,j=this.morphNormals[a].vertexNormals;for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],g=new THREE.Vector3,h=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},i.push(g),j.push(h)}for(i=this.morphNormals[a],f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals(),c=0,d=this.faces.length;d>c;c++)e=this.faces[c],g=i.faceNormals[c],h=i.vertexNormals[c],g.copy(e.normal),e instanceof THREE.Face3?(h.a.copy(e.vertexNormals[0]),h.b.copy(e.vertexNormals[1]),h.c.copy(e.vertexNormals[2])):(h.a.copy(e.vertexNormals[0]),h.b.copy(e.vertexNormals[1]),h.c.copy(e.vertexNormals[2]),h.d.copy(e.vertexNormals[3]))}for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,y){h=a.vertices[b],i=a.vertices[c],j=a.vertices[d],k=g[e],l=g[f],m=g[y],n=i.x-h.x,o=j.x-h.x,p=i.y-h.y,q=j.y-h.y,r=i.z-h.z,s=j.z-h.z,t=l.u-k.u,u=m.u-k.u,v=l.v-k.v,w=m.v-k.v,x=1/(t*w-u*v),B.set((w*n-v*o)*x,(w*p-v*q)*x,(w*r-v*s)*x),C.set((t*o-u*n)*x,(t*q-u*p)*x,(t*s-u*r)*x),z[b].addSelf(B),z[c].addSelf(B),z[d].addSelf(B),A[b].addSelf(C),A[c].addSelf(C),A[d].addSelf(C)}var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z=[],A=[],B=new THREE.Vector3,C=new THREE.Vector3,D=new THREE.Vector3,E=new THREE.Vector3,F=new THREE.Vector3;for(b=0,c=this.vertices.length;c>b;b++)z[b]=new THREE.Vector3,A[b]=new THREE.Vector3;for(b=0,c=this.faces.length;c>b;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),
a(this,f.b,f.c,f.d,1,2,3));var G=["a","b","c","d"];for(b=0,c=this.faces.length;c>b;b++)for(f=this.faces[b],d=0;d<f.vertexNormals.length;d++)F.copy(f.vertexNormals[d]),e=f[G[d]],y=z[e],D.copy(y),D.subSelf(F.multiplyScalar(F.dot(y))).normalize(),E.cross(f.vertexNormals[d],y),e=E.dot(A[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(D.x,D.y,D.z,e);this.hasTangents=!0},computeBoundingBox:function(){if(this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3}),this.vertices.length>0){var a;a=this.vertices[0],this.boundingBox.min.copy(a),this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;e>d;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});for(var a,b=0,c=0,d=this.vertices.length;d>c;c++)a=this.vertices[c].length(),a>b&&(b=a);this.boundingSphere.radius=b},mergeVertices:function(){var a,b,c,d,e={},f=[],g=[],h=Math.pow(10,4);for(b=0,c=this.vertices.length;c>b;b++)a=this.vertices[b],a=[Math.round(a.x*h),Math.round(a.y*h),Math.round(a.z*h)].join("_"),void 0===e[a]?(e[a]=b,f.push(this.vertices[b]),g[b]=f.length-1):g[b]=g[e[a]];for(b=0,c=this.faces.length;c>b;b++)if(h=this.faces[b],h instanceof THREE.Face3)h.a=g[h.a],h.b=g[h.b],h.c=g[h.c];else if(h instanceof THREE.Face4)for(h.a=g[h.a],h.b=g[h.b],h.c=g[h.c],h.d=g[h.d],a=[h.a,h.b,h.c,h.d],e=3;e>0;e--)if(a.indexOf(h["abcd"[e]])!=e){for(a.splice(e,1),this.faces[b]=new THREE.Face3(a[0],a[1],a[2]),h=0,a=this.faceVertexUvs.length;a>h;h++)(d=this.faceVertexUvs[h][b])&&d.splice(e,1);break}return g=this.vertices.length-f.length,this.vertices=f,g}},THREE.GeometryCount=0,THREE.Spline=function(a){function b(a,b,c,d,e,f,g){return a=.5*(c-a),d=.5*(d-b),(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c,d,e,f,g,h,i,j,k,l=[],m={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return c=(this.points.length-1)*a,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>this.points.length-2?this.points.length-1:d+1,l[3]=d>this.points.length-3?this.points.length-1:d+2,h=this.points[l[0]],i=this.points[l[1]],j=this.points[l[2]],k=this.points[l[3]],f=e*e,g=e*f,m.x=b(h.x,i.x,j.x,k.x,e,f,g),m.y=b(h.y,i.y,j.y,k.y,e,f,g),m.z=b(h.z,i.z,j.z,k.z,e,f,g),m},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;c>a;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;for(h[0]=0,a||(a=100),c=this.points.length*a,f.copy(this.points[0]),a=1;c>a;a++)b=a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b=(this.points.length-1)*b,b=Math.floor(b),b!=e&&(h[b]=i,e=b);return h[h.length]=i,{chunks:h,total:i}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,j=this.getLength();for(h.push(i.copy(this.points[0]).clone()),b=1;b<this.points.length;b++){for(c=j.chunks[b]-j.chunks[b-1],g=Math.ceil(a*c/j.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1),c=1;g-1>c;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=new THREE.Object3D,THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=new THREE.Camera,THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.fov=void 0!==a?a:50,this.aspect=void 0!==b?b:1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=new THREE.Camera,THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((void 0!==b?b:24)/(2*a))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=new THREE.Object3D,THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.supr=THREE.Object3D.prototype,THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=new THREE.Light,THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=new THREE.Light,THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.PointLight=function(a,b,c){THREE.Light.call(this,a),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0},THREE.PointLight.prototype=new THREE.Light,THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/2,this.exponent=void 0!==e?e:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=new THREE.Light,THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.Material=function(a){a=a||{},this.id=THREE.MaterialCount++,this.name="",this.opacity=void 0!==a.opacity?a.opacity:1,this.transparent=void 0!==a.transparent?a.transparent:!1,this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending,this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation,this.depthTest=void 0!==a.depthTest?a.depthTest:!0,this.depthWrite=void 0!==a.depthWrite?a.depthWrite:!0,this.polygonOffset=void 0!==a.polygonOffset?a.polygonOffset:!1,this.polygonOffsetFactor=void 0!==a.polygonOffsetFactor?a.polygonOffsetFactor:0,this.polygonOffsetUnits=void 0!==a.polygonOffsetUnits?a.polygonOffsetUnits:0,this.alphaTest=void 0!==a.alphaTest?a.alphaTest:0,this.overdraw=void 0!==a.overdraw?a.overdraw:!1,this.needsUpdate=this.visible=!0},THREE.MaterialCount=0,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.AdditiveAlphaBlending=5,THREE.CustomBlending=6,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215),this.linewidth=void 0!==a.linewidth?a.linewidth:1,this.linecap=void 0!==a.linecap?a.linecap:"round",this.linejoin=void 0!==a.linejoin?a.linejoin:"round",this.vertexColors=a.vertexColors?a.vertexColors:!1,this.fog=void 0!==a.fog?a.fog:!0},THREE.LineBasicMaterial.prototype=new THREE.Material,THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215),this.map=void 0!==a.map?a.map:null,this.lightMap=void 0!==a.lightMap?a.lightMap:null,this.envMap=void 0!==a.envMap?a.envMap:null,this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1,this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:.98,this.fog=void 0!==a.fog?a.fog:!0,this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading,this.wireframe=void 0!==a.wireframe?a.wireframe:!1,this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1,this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round",this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors,this.skinning=void 0!==a.skinning?a.skinning:!1,this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1},THREE.MeshBasicMaterial.prototype=new THREE.Material,THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215),this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215),this.emissive=void 0!==a.emissive?new THREE.Color(a.emissive):new THREE.Color(0),this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=void 0!==a.map?a.map:null,this.lightMap=void 0!==a.lightMap?a.lightMap:null,this.envMap=void 0!==a.envMap?a.envMap:null,this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1,this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:.98,this.fog=void 0!==a.fog?a.fog:!0,this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading,this.wireframe=void 0!==a.wireframe?a.wireframe:!1,this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1,this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round",this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors,this.skinning=void 0!==a.skinning?a.skinning:!1,this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1,this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1},THREE.MeshLambertMaterial.prototype=new THREE.Material,THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215),this.ambient=void 0!==a.ambient?new THREE.Color(a.ambient):new THREE.Color(16777215),this.emissive=void 0!==a.emissive?new THREE.Color(a.emissive):new THREE.Color(0),this.specular=void 0!==a.specular?new THREE.Color(a.specular):new THREE.Color(1118481),this.shininess=void 0!==a.shininess?a.shininess:30,this.metal=void 0!==a.metal?a.metal:!1,this.perPixel=void 0!==a.perPixel?a.perPixel:!1,this.wrapAround=void 0!==a.wrapAround?a.wrapAround:!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=void 0!==a.map?a.map:null,this.lightMap=void 0!==a.lightMap?a.lightMap:null,this.envMap=void 0!==a.envMap?a.envMap:null,this.combine=void 0!==a.combine?a.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==a.reflectivity?a.reflectivity:1,this.refractionRatio=void 0!==a.refractionRatio?a.refractionRatio:.98,this.fog=void 0!==a.fog?a.fog:!0,this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading,this.wireframe=void 0!==a.wireframe?a.wireframe:!1,this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1,this.wireframeLinecap=void 0!==a.wireframeLinecap?a.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==a.wireframeLinejoin?a.wireframeLinejoin:"round",this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors,this.skinning=void 0!==a.skinning?a.skinning:!1,this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1,this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1},THREE.MeshPhongMaterial.prototype=new THREE.Material,THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading,this.wireframe=void 0!==a.wireframe?a.wireframe:!1,this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1},THREE.MeshDepthMaterial.prototype=new THREE.Material,THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.shading=a.shading?a.shading:THREE.FlatShading,this.wireframe=a.wireframe?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1},THREE.MeshNormalMaterial.prototype=new THREE.Material,THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshFaceMaterial=function(){},THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215),this.map=void 0!==a.map?a.map:null,this.size=void 0!==a.size?a.size:1,this.sizeAttenuation=void 0!==a.sizeAttenuation?a.sizeAttenuation:!0,this.vertexColors=void 0!==a.vertexColors?a.vertexColors:!1,this.fog=void 0!==a.fog?a.fog:!0},THREE.ParticleBasicMaterial.prototype=new THREE.Material,THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial,THREE.ShaderMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.fragmentShader=void 0!==a.fragmentShader?a.fragmentShader:"void main() {}",this.vertexShader=void 0!==a.vertexShader?a.vertexShader:"void main() {}",this.uniforms=void 0!==a.uniforms?a.uniforms:{},this.attributes=a.attributes,this.shading=void 0!==a.shading?a.shading:THREE.SmoothShading,this.wireframe=void 0!==a.wireframe?a.wireframe:!1,this.wireframeLinewidth=void 0!==a.wireframeLinewidth?a.wireframeLinewidth:1,this.fog=void 0!==a.fog?a.fog:!1,this.lights=void 0!==a.lights?a.lights:!1,this.vertexColors=void 0!==a.vertexColors?a.vertexColors:THREE.NoColors,this.skinning=void 0!==a.skinning?a.skinning:!1,this.morphTargets=void 0!==a.morphTargets?a.morphTargets:!1,this.morphNormals=void 0!==a.morphNormals?a.morphNormals:!1},THREE.ShaderMaterial.prototype=new THREE.Material,THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.Texture=function(a,b,c,d,e,f,g,h){this.id=THREE.TextureCount++,this.image=a,this.mapping=void 0!==b?b:new THREE.UVMapping,this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==e?e:THREE.LinearFilter,this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter,this.format=void 0!==g?g:THREE.RGBAFormat,this.type=void 0!==h?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.needsUpdate=this.premultiplyAlpha=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);return a.offset.copy(this.offset),a.repeat.copy(this.repeat),a}},THREE.TextureCount=0,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=0,THREE.ClampToEdgeWrapping=1,THREE.MirroredRepeatWrapping=2,THREE.NearestFilter=3,THREE.NearestMipMapNearestFilter=4,THREE.NearestMipMapLinearFilter=5,THREE.LinearFilter=6,THREE.LinearMipMapNearestFilter=7,THREE.LinearMipMapLinearFilter=8,THREE.ByteType=9,THREE.UnsignedByteType=10,THREE.ShortType=11,THREE.UnsignedShortType=12,THREE.IntType=13,THREE.UnsignedIntType=14,THREE.FloatType=15,THREE.AlphaFormat=16,THREE.RGBFormat=17,THREE.RGBAFormat=18,THREE.LuminanceFormat=19,THREE.LuminanceAlphaFormat=20,THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j){THREE.Texture.call(this,null,f,g,h,i,j,d,e),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=new THREE.Texture,THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);return a.offset.copy(this.offset),a.repeat.copy(this.repeat),a},THREE.Particle=function(a){THREE.Object3D.call(this),this.material=a},THREE.Particle.prototype=new THREE.Object3D,THREE.Particle.prototype.constructor=THREE.Particle,THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=new THREE.Object3D,THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem,THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.geometry=a,this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==c?c:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=new THREE.Object3D,THREE.Line.prototype.constructor=THREE.Line,THREE.Mesh=function(a,b){if(THREE.Object3D.call(this),this.geometry=a,this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}},THREE.Mesh.prototype=new THREE.Object3D,THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.supr=THREE.Object3D.prototype,THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Ribbon=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b},THREE.Ribbon.prototype=new THREE.Object3D,THREE.Ribbon.prototype.constructor=THREE.Ribbon,THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=new THREE.Object3D,THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.supr=THREE.Object3D.prototype,THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a}),this.add(a)},THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld),a=a.matrixWorldInverse,a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]),this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length&&a>=this.LODs[b].visibleAtDistance;b++)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}},THREE.Sprite=function(a){THREE.Object3D.call(this),this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215),this.map=void 0!==a.map?a.map:new THREE.Texture,this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending,this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation,this.useScreenCoordinates=void 0!==a.useScreenCoordinates?a.useScreenCoordinates:!0,this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates,this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates,this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance,this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center,this.rotation3d=this.rotation,this.rotation=0,this.opacity=1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=new THREE.Object3D,THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)),this.matrixWorldNeedsUpdate=!0},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=new THREE.Object3D,THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a);else if(!(a instanceof THREE.Camera)&&-1===this.__objects.indexOf(a)){this.__objects.push(a),this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])},THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])},THREE.Fog=function(a,b,c){this.color=new THREE.Color(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3},THREE.FogExp2=function(a,b){this.color=new THREE.Color(a),this.density=void 0!==b?b:25e-5},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)e[c]=d[c]}return e},clone:function(a){var b,c,d,e={};for(b in a){e[b]={};for(c in a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d}return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=F.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function c(a,b){return!a.material||a.material instanceof THREE.MeshFaceMaterial?b.materialIndex>=0?a.geometry.materials[b.materialIndex]:void 0:a.material}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var i=a.colors,j=i.length,k=a.__vertexArray,l=a.__colorArray,m=a.__sortArray,n=a.verticesNeedUpdate,o=a.colorsNeedUpdate,p=a.__webglCustomAttributesList;if(c.sortParticles){for(ga.copy(fa),ga.multiplySelf(c.matrixWorld),d=0;g>d;d++)e=h[d],ha.copy(e),ga.multiplyVector3(ha),m[d]=[ha.z,d];for(m.sort(function(a,b){return b[0]-a[0]}),d=0;g>d;d++)e=h[m[d][1]],f=3*d,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;for(d=0;j>d;d++)f=3*d,e=i[m[d][1]],l[f]=e.r,l[f+1]=e.g,l[f+2]=e.b;if(p)for(i=0,j=p.length;j>i;i++)if(h=p[i],void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=0;e>d;d++)g=m[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;e>d;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;e>d;d++)g=m[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;e>d;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;e>d;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}else{if(n)for(d=0;g>d;d++)e=h[d],f=3*d,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;if(o)for(d=0;j>d;d++)e=i[d],f=3*d,l[f]=e.r,l[f+1]=e.g,l[f+2]=e.b;if(p)for(i=0,j=p.length;j>i;i++)if(h=p[i],h.needsUpdate&&(void 0===h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;e>d;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;e>d;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;e>d;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;e>d;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;e>d;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}if((n||c.sortParticles)&&(F.bindBuffer(F.ARRAY_BUFFER,a.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,k,b)),(o||c.sortParticles)&&(F.bindBuffer(F.ARRAY_BUFFER,a.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,l,b)),p)for(i=0,j=p.length;j>i;i++)h=p[i],(h.needsUpdate||c.sortParticles)&&(F.bindBuffer(F.ARRAY_BUFFER,h.buffer),F.bufferData(F.ARRAY_BUFFER,h.array,b))}function g(a,b){return b.z-a.z}function h(a,b,c){if(a.length)for(var d=0,e=a.length;e>d;d++)M=I=null,K=L=P=O=V=U=Q=-1,ja=!0,a[d].render(b,c,ca,da),M=I=null,K=L=P=O=V=U=Q=-1,ja=!0}function i(a,b,c,d,e,f,g,h){var i,j,k,l;b?(j=a.length-1,l=b=-1):(j=0,b=a.length,l=1);for(var m=j;m!==b;m+=l)if(i=a[m],i.render){if(j=i.object,k=i.buffer,h)i=h;else{if(i=i[c],!i)continue;g&&G.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),G.setDepthTest(i.depthTest),G.setDepthWrite(i.depthWrite),p(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}G.setObjectFaces(j),k instanceof THREE.BufferGeometry?G.renderBufferDirect(d,e,f,i,k,j):G.renderBuffer(d,e,f,i,k,j)}}function j(a,b,c,d,e,f,g){for(var h,i,j=0,k=a.length;k>j;j++)if(h=a[j],i=h.object,i.visible){if(g)h=g;else{if(h=h[b],!h)continue;f&&G.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),G.setDepthTest(h.depthTest),G.setDepthWrite(h.depthWrite),p(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}G.renderImmediateObject(c,d,e,h,i)}}function k(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function l(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function m(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function n(a,b,c,d,e){if((!d.program||d.needsUpdate)&&(G.initMaterial(d,b,c,e),d.needsUpdate=!1),d.morphTargets&&!e.__webglMorphTargetInfluences){e.__webglMorphTargetInfluences=new Float32Array(G.maxMorphTargets);for(var f=0,g=G.maxMorphTargets;g>f;f++)e.__webglMorphTargetInfluences[f]=0}var h=!1,f=d.program,g=f.uniforms,i=d.uniforms;if(f!==I&&(F.useProgram(f),I=f,h=!0),d.id!==K&&(K=d.id,h=!0),(h||a!==M)&&(F.uniformMatrix4fv(g.projectionMatrix,!1,a._projectionMatrixArray),a!==M&&(M=a)),h){if(c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density)),d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(ja){for(var j,k,l,m,n=0,o=0,p=0,q=ka,s=q.directional.colors,t=q.directional.positions,w=q.point.colors,x=q.point.positions,y=q.point.distances,z=q.spot.colors,A=q.spot.positions,B=q.spot.distances,C=q.spot.directions,D=q.spot.angles,E=q.spot.exponents,H=0,J=0,L=0,N=m=0,c=N=0,h=b.length;h>c;c++)j=b[c],j.onlyShadow||(k=j.color,l=j.intensity,m=j.distance,j instanceof THREE.AmbientLight?G.gammaInput?(n+=k.r*k.r,o+=k.g*k.g,p+=k.b*k.b):(n+=k.r,o+=k.g,p+=k.b):j instanceof THREE.DirectionalLight?(m=3*H,G.gammaInput?(s[m]=k.r*k.r*l*l,s[m+1]=k.g*k.g*l*l,s[m+2]=k.b*k.b*l*l):(s[m]=k.r*l,s[m+1]=k.g*l,s[m+2]=k.b*l),ia.copy(j.matrixWorld.getPosition()),ia.subSelf(j.target.matrixWorld.getPosition()),ia.normalize(),t[m]=ia.x,t[m+1]=ia.y,t[m+2]=ia.z,H+=1):j instanceof THREE.PointLight?(N=3*J,G.gammaInput?(w[N]=k.r*k.r*l*l,w[N+1]=k.g*k.g*l*l,w[N+2]=k.b*k.b*l*l):(w[N]=k.r*l,w[N+1]=k.g*l,w[N+2]=k.b*l),k=j.matrixWorld.getPosition(),x[N]=k.x,x[N+1]=k.y,x[N+2]=k.z,y[J]=m,J+=1):j instanceof THREE.SpotLight&&(N=3*L,G.gammaInput?(z[N]=k.r*k.r*l*l,z[N+1]=k.g*k.g*l*l,z[N+2]=k.b*k.b*l*l):(z[N]=k.r*l,z[N+1]=k.g*l,z[N+2]=k.b*l),k=j.matrixWorld.getPosition(),A[N]=k.x,A[N+1]=k.y,A[N+2]=k.z,B[L]=m,ia.copy(k),ia.subSelf(j.target.matrixWorld.getPosition()),ia.normalize(),C[N]=ia.x,C[N+1]=ia.y,C[N+2]=ia.z,D[L]=Math.cos(j.angle),E[L]=j.exponent,L+=1));for(c=3*H,h=s.length;h>c;c++)s[c]=0;for(c=3*J,h=w.length;h>c;c++)w[c]=0;for(c=3*L,h=z.length;h>c;c++)z[c]=0;q.directional.length=H,q.point.length=J,q.spot.length=L,q.ambient[0]=n,q.ambient[1]=o,q.ambient[2]=p,ja=!1}c=ka,i.ambientLightColor.value=c.ambient,i.directionalLightColor.value=c.directional.colors,i.directionalLightDirection.value=c.directional.positions,i.pointLightColor.value=c.point.colors,i.pointLightPosition.value=c.point.positions,
i.pointLightDistance.value=c.point.distances,i.spotLightColor.value=c.spot.colors,i.spotLightPosition.value=c.spot.positions,i.spotLightDistance.value=c.spot.distances,i.spotLightDirection.value=c.spot.directions,i.spotLightAngle.value=c.spot.angles,i.spotLightExponent.value=c.spot.exponents}if((d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&(i.opacity.value=d.opacity,G.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color,(i.map.texture=d.map)&&i.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),i.lightMap.texture=d.lightMap,i.envMap.texture=d.envMap,i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.reflectivity.value=d.reflectivity,i.refractionRatio.value=d.refractionRatio,i.combine.value=d.combine,i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping),d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=v.height/2,i.map.texture=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,G.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(G.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&i.shadowMatrix)for(h=c=0,j=b.length;j>h;h++)n=b[h],n.castShadow&&(n instanceof THREE.SpotLight||n instanceof THREE.DirectionalLight&&!n.shadowCascade)&&(i.shadowMap.texture[c]=n.shadowMap,i.shadowMapSize.value[c]=n.shadowMapSize,i.shadowMatrix.value[c]=n.shadowMatrix,i.shadowDarkness.value[c]=n.shadowDarkness,i.shadowBias.value[c]=n.shadowBias,c++);for(b=d.uniformsList,i=0,c=b.length;c>i;i++)if(n=f.uniforms[b[i][1]])switch(h=b[i][0],o=h.type,j=h.value,o){case"i":F.uniform1i(n,j);break;case"f":F.uniform1f(n,j);break;case"v2":F.uniform2f(n,j.x,j.y);break;case"v3":F.uniform3f(n,j.x,j.y,j.z);break;case"v4":F.uniform4f(n,j.x,j.y,j.z,j.w);break;case"c":F.uniform3f(n,j.r,j.g,j.b);break;case"fv1":F.uniform1fv(n,j);break;case"fv":F.uniform3fv(n,j);break;case"v2v":for(h._array||(h._array=new Float32Array(2*j.length)),o=0,p=j.length;p>o;o++)q=2*o,h._array[q]=j[o].x,h._array[q+1]=j[o].y;F.uniform2fv(n,h._array);break;case"v3v":for(h._array||(h._array=new Float32Array(3*j.length)),o=0,p=j.length;p>o;o++)q=3*o,h._array[q]=j[o].x,h._array[q+1]=j[o].y,h._array[q+2]=j[o].z;F.uniform3fv(n,h._array);break;case"v4v":for(h._array||(h._array=new Float32Array(4*j.length)),o=0,p=j.length;p>o;o++)q=4*o,h._array[q]=j[o].x,h._array[q+1]=j[o].y,h._array[q+2]=j[o].z,h._array[q+3]=j[o].w;F.uniform4fv(n,h._array);break;case"m4":h._array||(h._array=new Float32Array(16)),j.flattenToArray(h._array),F.uniformMatrix4fv(n,!1,h._array);break;case"m4v":for(h._array||(h._array=new Float32Array(16*j.length)),o=0,p=j.length;p>o;o++)j[o].flattenToArrayOffset(h._array,16*o);F.uniformMatrix4fv(n,!1,h._array);break;case"t":if(F.uniform1i(n,j),n=h.texture,!n)continue;if(n.image instanceof Array&&6===n.image.length){if(h=n,6===h.image.length)if(h.needsUpdate){for(h.image.__webglTextureCube||(h.image.__webglTextureCube=F.createTexture()),F.activeTexture(F.TEXTURE0+j),F.bindTexture(F.TEXTURE_CUBE_MAP,h.image.__webglTextureCube),j=[],n=0;6>n;n++)o=j,p=n,G.autoScaleCubemaps?(q=h.image[n],t=ma,q.width<=t&&q.height<=t||(w=Math.max(q.width,q.height),s=Math.floor(q.width*t/w),t=Math.floor(q.height*t/w),w=document.createElement("canvas"),w.width=s,w.height=t,w.getContext("2d").drawImage(q,0,0,q.width,q.height,0,0,s,t),q=w)):q=h.image[n],o[p]=q;for(n=j[0],o=0===(n.width&n.width-1)&&0===(n.height&n.height-1),p=u(h.format),q=u(h.type),r(F.TEXTURE_CUBE_MAP,h,o),n=0;6>n;n++)F.texImage2D(F.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,p,p,q,j[n]);h.generateMipmaps&&o&&F.generateMipmap(F.TEXTURE_CUBE_MAP),h.needsUpdate=!1,h.onUpdate&&h.onUpdate()}else F.activeTexture(F.TEXTURE0+j),F.bindTexture(F.TEXTURE_CUBE_MAP,h.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(h=n,F.activeTexture(F.TEXTURE0+j),F.bindTexture(F.TEXTURE_CUBE_MAP,h.__webglTexture)):G.setTexture(n,j);break;case"tv":if(!h._array)for(h._array=[],o=0,p=h.texture.length;p>o;o++)h._array[o]=j+o;for(F.uniform1iv(n,h._array),o=0,p=h.texture.length;p>o;o++)(n=h.texture[o])&&G.setTexture(n,h._array[o])}(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==g.cameraPosition&&(b=a.matrixWorld.getPosition(),F.uniform3f(g.cameraPosition,b.x,b.y,b.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==g.viewMatrix&&F.uniformMatrix4fv(g.viewMatrix,!1,a._viewMatrixArray),d.skinning&&F.uniformMatrix4fv(g.boneGlobalMatrices,!1,e.boneMatrices)}return F.uniformMatrix4fv(g.modelViewMatrix,!1,e._modelViewMatrix.elements),g.normalMatrix&&F.uniformMatrix3fv(g.normalMatrix,!1,e._normalMatrix.elements),null!==g.objectMatrix&&F.uniformMatrix4fv(g.objectMatrix,!1,e.matrixWorld.elements),f}function o(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getInverse(a._modelViewMatrix),a._normalMatrix.transpose()}function p(a,b,c){W!==a&&(a?F.enable(F.POLYGON_OFFSET_FILL):F.disable(F.POLYGON_OFFSET_FILL),W=a),!a||X===b&&Y===c||(F.polygonOffset(b,c),X=b,Y=c)}function q(a,b){var c;return"fragment"===a?c=F.createShader(F.FRAGMENT_SHADER):"vertex"===a&&(c=F.createShader(F.VERTEX_SHADER)),F.shaderSource(c,b),F.compileShader(c),F.getShaderParameter(c,F.COMPILE_STATUS)?c:(console.error(F.getShaderInfoLog(c)),console.error(b),null)}function r(a,b,c){c?(F.texParameteri(a,F.TEXTURE_WRAP_S,u(b.wrapS)),F.texParameteri(a,F.TEXTURE_WRAP_T,u(b.wrapT)),F.texParameteri(a,F.TEXTURE_MAG_FILTER,u(b.magFilter)),F.texParameteri(a,F.TEXTURE_MIN_FILTER,u(b.minFilter))):(F.texParameteri(a,F.TEXTURE_WRAP_S,F.CLAMP_TO_EDGE),F.texParameteri(a,F.TEXTURE_WRAP_T,F.CLAMP_TO_EDGE),F.texParameteri(a,F.TEXTURE_MAG_FILTER,t(b.magFilter)),F.texParameteri(a,F.TEXTURE_MIN_FILTER,t(b.minFilter)))}function s(a,b){F.bindRenderbuffer(F.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(F.renderbufferStorage(F.RENDERBUFFER,F.DEPTH_COMPONENT16,b.width,b.height),F.framebufferRenderbuffer(F.FRAMEBUFFER,F.DEPTH_ATTACHMENT,F.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(F.renderbufferStorage(F.RENDERBUFFER,F.DEPTH_STENCIL,b.width,b.height),F.framebufferRenderbuffer(F.FRAMEBUFFER,F.DEPTH_STENCIL_ATTACHMENT,F.RENDERBUFFER,a)):F.renderbufferStorage(F.RENDERBUFFER,F.RGBA4,b.width,b.height)}function t(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return F.NEAREST;default:return F.LINEAR}}function u(a){switch(a){case THREE.RepeatWrapping:return F.REPEAT;case THREE.ClampToEdgeWrapping:return F.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return F.MIRRORED_REPEAT;case THREE.NearestFilter:return F.NEAREST;case THREE.NearestMipMapNearestFilter:return F.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return F.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return F.LINEAR;case THREE.LinearMipMapNearestFilter:return F.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return F.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return F.BYTE;case THREE.UnsignedByteType:return F.UNSIGNED_BYTE;case THREE.ShortType:return F.SHORT;case THREE.UnsignedShortType:return F.UNSIGNED_SHORT;case THREE.IntType:return F.INT;case THREE.UnsignedIntType:return F.UNSIGNED_INT;case THREE.FloatType:return F.FLOAT;case THREE.AlphaFormat:return F.ALPHA;case THREE.RGBFormat:return F.RGB;case THREE.RGBAFormat:return F.RGBA;case THREE.LuminanceFormat:return F.LUMINANCE;case THREE.LuminanceAlphaFormat:return F.LUMINANCE_ALPHA;case THREE.AddEquation:return F.FUNC_ADD;case THREE.SubtractEquation:return F.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return F.FUNC_REVERSE_SUBTRACT;case THREE.ZeroFactor:return F.ZERO;case THREE.OneFactor:return F.ONE;case THREE.SrcColorFactor:return F.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return F.ONE_MINUS_SRC_COLOR;case THREE.SrcAlphaFactor:return F.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return F.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return F.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return F.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return F.DST_COLOR;case THREE.OneMinusDstColorFactor:return F.ONE_MINUS_DST_COLOR;case THREE.SrcAlphaSaturateFactor:return F.SRC_ALPHA_SATURATE}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},v=void 0!==a.canvas?a.canvas:document.createElement("canvas"),w=void 0!==a.precision?a.precision:"highp",x=void 0!==a.alpha?a.alpha:!0,y=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,z=void 0!==a.antialias?a.antialias:!1,A=void 0!==a.stencil?a.stencil:!0,B=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,C=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),D=void 0!==a.clearAlpha?a.clearAlpha:0,E=void 0!==a.maxLights?a.maxLights:4;this.domElement=v,this.context=null,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var F,G=this,H=[],I=null,J=null,K=-1,L=null,M=null,N=0,O=-1,P=-1,Q=-1,R=-1,S=-1,T=-1,U=-1,V=-1,W=null,X=null,Y=null,Z=null,$=0,_=0,aa=0,ba=0,ca=0,da=0,ea=new THREE.Frustum,fa=new THREE.Matrix4,ga=new THREE.Matrix4,ha=new THREE.Vector4,ia=new THREE.Vector3,ja=!0,ka={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]}};F=function(){var a;try{if(!(a=v.getContext("experimental-webgl",{alpha:x,premultipliedAlpha:y,antialias:z,stencil:A,preserveDrawingBuffer:B})))throw"Error creating WebGL context."}catch(b){console.error(b)}return a.getExtension("OES_texture_float")||console.log("THREE.WebGLRenderer: Float textures not supported."),a}(),F.clearColor(0,0,0,1),F.clearDepth(1),F.clearStencil(0),F.enable(F.DEPTH_TEST),F.depthFunc(F.LEQUAL),F.frontFace(F.CCW),F.cullFace(F.BACK),F.enable(F.CULL_FACE),F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.SRC_ALPHA,F.ONE_MINUS_SRC_ALPHA),F.clearColor(C.r,C.g,C.b,D),this.context=F;var la=F.getParameter(F.MAX_VERTEX_TEXTURE_IMAGE_UNITS);F.getParameter(F.MAX_TEXTURE_SIZE);var ma=F.getParameter(F.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return F},this.supportsVertexTextures=function(){return la>0},this.setSize=function(a,b){v.width=a,v.height=b,this.setViewport(0,0,v.width,v.height)},this.setViewport=function(a,b,c,d){$=a,_=b,aa=c,ba=d,F.viewport($,_,aa,ba)},this.setScissor=function(a,b,c,d){F.scissor(a,b,c,d)},this.enableScissorTest=function(a){a?F.enable(F.SCISSOR_TEST):F.disable(F.SCISSOR_TEST)},this.setClearColorHex=function(a,b){C.setHex(a),D=b,F.clearColor(C.r,C.g,C.b,D)},this.setClearColor=function(a,b){C.copy(a),D=b,F.clearColor(C.r,C.g,C.b,D)},this.getClearColor=function(){return C},this.getClearAlpha=function(){return D},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=F.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=F.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=F.STENCIL_BUFFER_BIT),F.clear(d)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},this.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];F.deleteBuffer(c.__webglVertexBuffer),F.deleteBuffer(c.__webglNormalBuffer),F.deleteBuffer(c.__webglTangentBuffer),F.deleteBuffer(c.__webglColorBuffer),F.deleteBuffer(c.__webglUVBuffer),F.deleteBuffer(c.__webglUV2Buffer),F.deleteBuffer(c.__webglSkinVertexABuffer),F.deleteBuffer(c.__webglSkinVertexBBuffer),F.deleteBuffer(c.__webglSkinIndicesBuffer),F.deleteBuffer(c.__webglSkinWeightsBuffer),F.deleteBuffer(c.__webglFaceBuffer),F.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets)for(d=0,e=c.numMorphTargets;e>d;d++)F.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(c.numMorphNormals)for(d=0,e=c.numMorphNormals;e>d;d++)F.deleteBuffer(c.__webglMorphNormalsBuffers[d]);if(c.__webglCustomAttributesList){d=void 0;for(d in c.__webglCustomAttributesList)F.deleteBuffer(c.__webglCustomAttributesList[d].buffer)}G.info.memory.geometries--}else a instanceof THREE.Line&&(a=a.geometry,F.deleteBuffer(a.__webglVertexBuffer),F.deleteBuffer(a.__webglColorBuffer),G.info.memory.geometries--)},this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,F.deleteTexture(a.__webglTexture),G.info.memory.textures--)},this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(F.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)F.deleteFramebuffer(a.__webglFramebuffer[b]),F.deleteRenderbuffer(a.__webglRenderbuffer[b]);else F.deleteFramebuffer(a.__webglFramebuffer),F.deleteRenderbuffer(a.__webglRenderbuffer)},this.updateShadowMap=function(a,b){I=null,K=L=V=U=Q=-1,ja=!0,P=O=-1,this.shadowMapPlugin.update(a,b)},this.renderBufferImmediate=function(a,b,c){if(a.__webglVertexBuffer||(a.__webglVertexBuffer=F.createBuffer()),a.__webglNormalBuffer||(a.__webglNormalBuffer=F.createBuffer()),a.hasPos&&(F.bindBuffer(F.ARRAY_BUFFER,a.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,a.positionArray,F.DYNAMIC_DRAW),F.enableVertexAttribArray(b.attributes.position),F.vertexAttribPointer(b.attributes.position,3,F.FLOAT,!1,0,0)),a.hasNormal){if(F.bindBuffer(F.ARRAY_BUFFER,a.__webglNormalBuffer),c===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,n=3*a.count;for(m=0;n>m;m+=9)c=a.normalArray,d=c[m],e=c[m+1],f=c[m+2],g=c[m+3],i=c[m+4],k=c[m+5],h=c[m+6],j=c[m+7],l=c[m+8],d=(d+g+h)/3,e=(e+i+j)/3,f=(f+k+l)/3,c[m]=d,c[m+1]=e,c[m+2]=f,c[m+3]=d,c[m+4]=e,c[m+5]=f,c[m+6]=d,c[m+7]=e,c[m+8]=f}F.bufferData(F.ARRAY_BUFFER,a.normalArray,F.DYNAMIC_DRAW),F.enableVertexAttribArray(b.attributes.normal),F.vertexAttribPointer(b.attributes.normal,3,F.FLOAT,!1,0,0)}F.drawArrays(F.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==!1&&(c=n(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==L&&(L=d,b=!0),f instanceof THREE.Mesh))for(f=e.offsets,d=0,c=f.length;c>d;++d)b&&(F.bindBuffer(F.ARRAY_BUFFER,e.vertexPositionBuffer),F.vertexAttribPointer(a.position,e.vertexPositionBuffer.itemSize,F.FLOAT,!1,0,12*f[d].index),a.normal>=0&&e.vertexNormalBuffer&&(F.bindBuffer(F.ARRAY_BUFFER,e.vertexNormalBuffer),F.vertexAttribPointer(a.normal,e.vertexNormalBuffer.itemSize,F.FLOAT,!1,0,12*f[d].index)),a.uv>=0&&e.vertexUvBuffer&&(e.vertexUvBuffer?(F.bindBuffer(F.ARRAY_BUFFER,e.vertexUvBuffer),F.vertexAttribPointer(a.uv,e.vertexUvBuffer.itemSize,F.FLOAT,!1,0,8*f[d].index),F.enableVertexAttribArray(a.uv)):F.disableVertexAttribArray(a.uv)),a.color>=0&&e.vertexColorBuffer&&(F.bindBuffer(F.ARRAY_BUFFER,e.vertexColorBuffer),F.vertexAttribPointer(a.color,e.vertexColorBuffer.itemSize,F.FLOAT,!1,0,16*f[d].index)),F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,e.vertexIndexBuffer)),F.drawElements(F.TRIANGLES,f[d].count,F.UNSIGNED_SHORT,2*f[d].start),G.info.render.calls++,G.info.render.vertices=G.info.render.vertices+f[d].count,G.info.render.faces=G.info.render.faces+f[d].count/3},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,c=n(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);if(c!==L&&(L=c,a=!0),!d.morphTargets&&b.position>=0)a&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglVertexBuffer),F.vertexAttribPointer(b.position,3,F.FLOAT,!1,0,0));else if(f.morphTargetBase){if(c=d.program.attributes,-1!==f.morphTargetBase?(F.bindBuffer(F.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),F.vertexAttribPointer(c.position,3,F.FLOAT,!1,0,0)):c.position>=0&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglVertexBuffer),F.vertexAttribPointer(c.position,3,F.FLOAT,!1,0,0)),f.morphTargetForcedOrder.length){g=0;var i=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;g<d.numSupportedMorphTargets&&g<i.length;)F.bindBuffer(F.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i[g]]),F.vertexAttribPointer(c["morphTarget"+g],3,F.FLOAT,!1,0,0),d.morphNormals&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[i[g]]),F.vertexAttribPointer(c["morphNormal"+g],3,F.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[g]=h[i[g]],g++}else{var i=[],j=-1,k=0;h=f.morphTargetInfluences;var l,m=h.length;for(g=0,-1!==f.morphTargetBase&&(i[f.morphTargetBase]=!0);g<d.numSupportedMorphTargets;){for(l=0;m>l;l++)!i[l]&&h[l]>j&&(k=l,j=h[k]);F.bindBuffer(F.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k]),F.vertexAttribPointer(c["morphTarget"+g],3,F.FLOAT,!1,0,0),d.morphNormals&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k]),F.vertexAttribPointer(c["morphNormal"+g],3,F.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[g]=j,i[k]=1,j=-1,g++}}null!==d.program.uniforms.morphTargetInfluences&&F.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(g=0,h=e.__webglCustomAttributesList.length;h>g;g++)c=e.__webglCustomAttributesList[g],b[c.buffer.belongsToAttribute]>=0&&(F.bindBuffer(F.ARRAY_BUFFER,c.buffer),F.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,F.FLOAT,!1,0,0));b.color>=0&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglColorBuffer),F.vertexAttribPointer(b.color,3,F.FLOAT,!1,0,0)),b.normal>=0&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglNormalBuffer),F.vertexAttribPointer(b.normal,3,F.FLOAT,!1,0,0)),b.tangent>=0&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglTangentBuffer),F.vertexAttribPointer(b.tangent,4,F.FLOAT,!1,0,0)),b.uv>=0&&(e.__webglUVBuffer?(F.bindBuffer(F.ARRAY_BUFFER,e.__webglUVBuffer),F.vertexAttribPointer(b.uv,2,F.FLOAT,!1,0,0),F.enableVertexAttribArray(b.uv)):F.disableVertexAttribArray(b.uv)),b.uv2>=0&&(e.__webglUV2Buffer?(F.bindBuffer(F.ARRAY_BUFFER,e.__webglUV2Buffer),F.vertexAttribPointer(b.uv2,2,F.FLOAT,!1,0,0),F.enableVertexAttribArray(b.uv2)):F.disableVertexAttribArray(b.uv2)),d.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglSkinVertexABuffer),F.vertexAttribPointer(b.skinVertexA,4,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,e.__webglSkinVertexBBuffer),F.vertexAttribPointer(b.skinVertexB,4,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),F.vertexAttribPointer(b.skinIndex,4,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),F.vertexAttribPointer(b.skinWeight,4,F.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Z&&(F.lineWidth(d),Z=d),a&&F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),F.drawElements(F.LINES,e.__webglLineCount,F.UNSIGNED_SHORT,0)):(a&&F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),F.drawElements(F.TRIANGLES,e.__webglFaceCount,F.UNSIGNED_SHORT,0)),G.info.render.calls++,G.info.render.vertices=G.info.render.vertices+e.__webglFaceCount,G.info.render.faces=G.info.render.faces+e.__webglFaceCount/3):f instanceof THREE.Line&&(f=f.type===THREE.LineStrip?F.LINE_STRIP:F.LINES,d=d.linewidth,d!==Z&&(F.lineWidth(d),Z=d),F.drawArrays(f,0,e.__webglLineCount),G.info.render.calls++)}},this.render=function(a,b,c,d){var e,f,k,l,m=a.__lights,n=a.fog;for(K=-1,ja=!0,void 0===b.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b)),this.autoUpdateScene&&a.updateMatrixWorld(),b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16)),b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16)),b.matrixWorldInverse.getInverse(b.matrixWorld),b.matrixWorldInverse.flattenToArray(b._viewMatrixArray),b.projectionMatrix.flattenToArray(b._projectionMatrixArray),fa.multiply(b.projectionMatrix,b.matrixWorldInverse),ea.setFromMatrix(fa),this.autoUpdateObjects&&this.initWebGLObjects(a),h(this.renderPluginsPre,a,b),G.info.render.calls=0,G.info.render.vertices=0,G.info.render.faces=0,G.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=a.__webglObjects,d=0,e=l.length;e>d;d++)if(f=l[d],k=f.object,f.render=!1,k.visible&&(!(k instanceof THREE.Mesh||k instanceof THREE.ParticleSystem)||!k.frustumCulled||ea.contains(k))){o(k,b);var q=f,r=q.object,s=q.buffer,t=void 0,t=t=void 0,t=r.material;t instanceof THREE.MeshFaceMaterial?(t=s.materialIndex,t>=0&&(t=r.geometry.materials[t],t.transparent?(q.transparent=t,q.opaque=null):(q.opaque=t,q.transparent=null))):t&&(t.transparent?(q.transparent=t,q.opaque=null):(q.opaque=t,q.transparent=null)),f.render=!0,this.sortObjects&&(k.renderDepth?f.z=k.renderDepth:(ha.copy(k.matrixWorld.getPosition()),fa.multiplyVector3(ha),f.z=ha.z))}for(this.sortObjects&&l.sort(g),l=a.__webglObjectsImmediate,d=0,e=l.length;e>d;d++)f=l[d],k=f.object,k.visible&&(o(k,b),k=f.object.material,k.transparent?(f.transparent=k,f.opaque=null):(f.opaque=k,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),p(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),i(a.__webglObjects,!1,"",b,m,n,!0,d),j(a.__webglObjectsImmediate,"",b,m,n,!1,d)):(this.setBlending(THREE.NormalBlending),i(a.__webglObjects,!0,"opaque",b,m,n,!1),j(a.__webglObjectsImmediate,"opaque",b,m,n,!1),i(a.__webglObjects,!1,"transparent",b,m,n,!0),j(a.__webglObjectsImmediate,"transparent",b,m,n,!0)),h(this.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(F.bindTexture(F.TEXTURE_CUBE_MAP,c.__webglTexture),F.generateMipmap(F.TEXTURE_CUBE_MAP),F.bindTexture(F.TEXTURE_CUBE_MAP,null)):(F.bindTexture(F.TEXTURE_2D,c.__webglTexture),F.generateMipmap(F.TEXTURE_2D),F.bindTexture(F.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=n(a,b,c,d,e);L=-1,G.setObjectFaces(e),e.immediateRenderCallback?e.immediateRenderCallback(f,F,ea):e.render(function(a){G.renderBufferImmediate(a,f,d.shading)})},this.initWebGLObjects=function(a){for(a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);a.__objectsAdded.length;){var g=a.__objectsAdded[0],h=a,i=void 0,j=void 0,n=void 0;if(!g.__webglInit)if(g.__webglInit=!0,g._modelViewMatrix=new THREE.Matrix4,g._normalMatrix=new THREE.Matrix3,g instanceof THREE.Mesh){if(j=g.geometry,j instanceof THREE.Geometry){if(void 0===j.geometryGroups){var o=j,p=void 0,q=void 0,r=void 0,s=void 0,t=void 0,u=void 0,v=void 0,w={},x=o.morphTargets.length,y=o.morphNormals.length;for(o.geometryGroups={},p=0,q=o.faces.length;q>p;p++)r=o.faces[p],s=r.materialIndex,u=void 0!==s?s:-1,void 0===w[u]&&(w[u]={hash:u,counter:0}),v=w[u].hash+"_"+w[u].counter,void 0===o.geometryGroups[v]&&(o.geometryGroups[v]={faces3:[],faces4:[],materialIndex:s,vertices:0,numMorphTargets:x,numMorphNormals:y}),t=r instanceof THREE.Face3?3:4,o.geometryGroups[v].vertices+t>65535&&(w[u].counter=w[u].counter+1,v=w[u].hash+"_"+w[u].counter,void 0===o.geometryGroups[v]&&(o.geometryGroups[v]={faces3:[],faces4:[],materialIndex:s,vertices:0,numMorphTargets:x,numMorphNormals:y})),r instanceof THREE.Face3?o.geometryGroups[v].faces3.push(p):o.geometryGroups[v].faces4.push(p),o.geometryGroups[v].vertices=o.geometryGroups[v].vertices+t;o.geometryGroupsList=[];var z=void 0;for(z in o.geometryGroups)o.geometryGroups[z].id=N++,o.geometryGroupsList.push(o.geometryGroups[z])}for(i in j.geometryGroups)if(n=j.geometryGroups[i],!n.__webglVertexBuffer){var A=n;A.__webglVertexBuffer=F.createBuffer(),A.__webglNormalBuffer=F.createBuffer(),A.__webglTangentBuffer=F.createBuffer(),A.__webglColorBuffer=F.createBuffer(),A.__webglUVBuffer=F.createBuffer(),A.__webglUV2Buffer=F.createBuffer(),A.__webglSkinVertexABuffer=F.createBuffer(),A.__webglSkinVertexBBuffer=F.createBuffer(),A.__webglSkinIndicesBuffer=F.createBuffer(),A.__webglSkinWeightsBuffer=F.createBuffer(),A.__webglFaceBuffer=F.createBuffer(),A.__webglLineBuffer=F.createBuffer();var B=void 0,C=void 0;if(A.numMorphTargets)for(A.__webglMorphTargetsBuffers=[],B=0,C=A.numMorphTargets;C>B;B++)A.__webglMorphTargetsBuffers.push(F.createBuffer());if(A.numMorphNormals)for(A.__webglMorphNormalsBuffers=[],B=0,C=A.numMorphNormals;C>B;B++)A.__webglMorphNormalsBuffers.push(F.createBuffer());G.info.memory.geometries++;var D=n,E=g,H=E.geometry,I=D.faces3,J=D.faces4,K=3*I.length+4*J.length,L=1*I.length+2*J.length,M=3*I.length+4*J.length,O=c(E,D),P=e(O),Q=d(O),R=O.vertexColors?O.vertexColors:!1;D.__vertexArray=new Float32Array(3*K),Q&&(D.__normalArray=new Float32Array(3*K)),H.hasTangents&&(D.__tangentArray=new Float32Array(4*K)),R&&(D.__colorArray=new Float32Array(3*K)),P&&((H.faceUvs.length>0||H.faceVertexUvs.length>0)&&(D.__uvArray=new Float32Array(2*K)),(H.faceUvs.length>1||H.faceVertexUvs.length>1)&&(D.__uv2Array=new Float32Array(2*K))),E.geometry.skinWeights.length&&E.geometry.skinIndices.length&&(D.__skinVertexAArray=new Float32Array(4*K),D.__skinVertexBArray=new Float32Array(4*K),D.__skinIndexArray=new Float32Array(4*K),D.__skinWeightArray=new Float32Array(4*K)),D.__faceArray=new Uint16Array(3*L),D.__lineArray=new Uint16Array(2*M);var S=void 0,T=void 0;if(D.numMorphTargets)for(D.__morphTargetsArrays=[],S=0,T=D.numMorphTargets;T>S;S++)D.__morphTargetsArrays.push(new Float32Array(3*K));if(D.numMorphNormals)for(D.__morphNormalsArrays=[],S=0,T=D.numMorphNormals;T>S;S++)D.__morphNormalsArrays.push(new Float32Array(3*K));if(D.__webglFaceCount=3*L,D.__webglLineCount=2*M,O.attributes){void 0===D.__webglCustomAttributesList&&(D.__webglCustomAttributesList=[]);var U=void 0;for(U in O.attributes){var V,W=O.attributes[U],X={};for(V in W)X[V]=W[V];if(!X.__webglInitialized||X.createUniqueBuffers){X.__webglInitialized=!0;var Y=1;"v2"===X.type?Y=2:"v3"===X.type?Y=3:"v4"===X.type?Y=4:"c"===X.type&&(Y=3),X.size=Y,X.array=new Float32Array(K*Y),X.buffer=F.createBuffer(),X.buffer.belongsToAttribute=U,W.needsUpdate=!0,X.__original=W}D.__webglCustomAttributesList.push(X)}}D.__inittedArrays=!0,j.verticesNeedUpdate=!0,j.morphTargetsNeedUpdate=!0,j.elementsNeedUpdate=!0,j.uvsNeedUpdate=!0,j.normalsNeedUpdate=!0,j.tangetsNeedUpdate=!0,j.colorsNeedUpdate=!0}}}else if(g instanceof THREE.Line){if(j=g.geometry,!j.__webglVertexBuffer){var Z=j;Z.__webglVertexBuffer=F.createBuffer(),Z.__webglColorBuffer=F.createBuffer(),G.info.memory.geometries++;var $=j,_=g,aa=$.vertices.length;$.__vertexArray=new Float32Array(3*aa),$.__colorArray=new Float32Array(3*aa),$.__webglLineCount=aa,b($,_),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0}}else if(g instanceof THREE.ParticleSystem&&(j=g.geometry,!j.__webglVertexBuffer)){var ba=j;ba.__webglVertexBuffer=F.createBuffer(),ba.__webglColorBuffer=F.createBuffer(),G.info.geometries++;var ca=j,da=g,ea=ca.vertices.length;ca.__vertexArray=new Float32Array(3*ea),ca.__colorArray=new Float32Array(3*ea),ca.__sortArray=[],ca.__webglParticleCount=ea,b(ca,da),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0}if(!g.__webglActive){if(g instanceof THREE.Mesh)if(j=g.geometry,j instanceof THREE.BufferGeometry)k(h.__webglObjects,j,g);else for(i in j.geometryGroups)n=j.geometryGroups[i],k(h.__webglObjects,n,g);else g instanceof THREE.Line&&(j=g.geometry,k(h.__webglObjects,j,g));g.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var fa=a.__objectsRemoved[0];if(fa instanceof THREE.Mesh||fa instanceof THREE.Line)for(var ga=a.__webglObjects,ha=fa,ia=ga.length-1;ia>=0;ia--)ga[ia].object===ha&&ga.splice(ia,1);fa.__webglActive=!1,a.__objectsRemoved.splice(0,1)}for(var ja=0,ka=a.__webglObjects.length;ka>ja;ja++){var la=a.__webglObjects[ja].object,ma=la.geometry,na=void 0,oa=void 0,pa=void 0;if(la instanceof THREE.Mesh)if(ma instanceof THREE.BufferGeometry)ma.verticesNeedUpdate=!1,ma.elementsNeedUpdate=!1,ma.uvsNeedUpdate=!1,ma.normalsNeedUpdate=!1,ma.colorsNeedUpdate=!1;else{for(var qa=0,ra=ma.geometryGroupsList.length;ra>qa;qa++)if(na=ma.geometryGroupsList[qa],pa=c(la,na),oa=pa.attributes&&l(pa),ma.verticesNeedUpdate||ma.morphTargetsNeedUpdate||ma.elementsNeedUpdate||ma.uvsNeedUpdate||ma.normalsNeedUpdate||ma.colorsNeedUpdate||ma.tangetsNeedUpdate||oa){var sa=na,ta=la,ua=F.DYNAMIC_DRAW,va=!ma.dynamic,wa=pa;if(sa.__inittedArrays){var xa=d(wa),ya=wa.vertexColors?wa.vertexColors:!1,za=e(wa),Aa=xa===THREE.SmoothShading,Ba=void 0,Ca=void 0,Da=void 0,Ea=void 0,Fa=void 0,Ga=void 0,Ha=void 0,Ia=void 0,Ja=void 0,Ka=void 0,La=void 0,Ma=void 0,Na=void 0,Oa=void 0,Pa=void 0,Qa=void 0,Ra=void 0,Sa=void 0,Ta=void 0,Ua=void 0,Va=void 0,Wa=void 0,Xa=void 0,Ya=void 0,Za=void 0,$a=void 0,_a=void 0,ab=void 0,bb=void 0,cb=void 0,db=void 0,eb=void 0,fb=void 0,gb=void 0,hb=void 0,ib=void 0,jb=void 0,kb=void 0,lb=void 0,mb=void 0,nb=void 0,ob=void 0,pb=void 0,qb=void 0,rb=void 0,sb=void 0,tb=void 0,ub=void 0,vb=void 0,wb=void 0,xb=void 0,yb=void 0,zb=void 0,Ab=void 0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=void 0,Ob=sa.__vertexArray,Pb=sa.__uvArray,Qb=sa.__uv2Array,Rb=sa.__normalArray,Sb=sa.__tangentArray,Tb=sa.__colorArray,Ub=sa.__skinVertexAArray,Vb=sa.__skinVertexBArray,Wb=sa.__skinIndexArray,Xb=sa.__skinWeightArray,Yb=sa.__morphTargetsArrays,Zb=sa.__morphNormalsArrays,$b=sa.__webglCustomAttributesList,_b=void 0,ac=sa.__faceArray,bc=sa.__lineArray,cc=ta.geometry,dc=cc.elementsNeedUpdate,ec=cc.uvsNeedUpdate,fc=cc.normalsNeedUpdate,gc=cc.tangetsNeedUpdate,hc=cc.colorsNeedUpdate,ic=cc.morphTargetsNeedUpdate,jc=cc.vertices,kc=sa.faces3,lc=sa.faces4,mc=cc.faces,nc=cc.faceVertexUvs[0],oc=cc.faceVertexUvs[1],pc=cc.skinVerticesA,qc=cc.skinVerticesB,rc=cc.skinIndices,sc=cc.skinWeights,tc=cc.morphTargets,uc=cc.morphNormals;if(cc.verticesNeedUpdate){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],Ma=jc[Ea.a],Na=jc[Ea.b],Oa=jc[Ea.c],Ob[Cb]=Ma.x,Ob[Cb+1]=Ma.y,Ob[Cb+2]=Ma.z,Ob[Cb+3]=Na.x,Ob[Cb+4]=Na.y,Ob[Cb+5]=Na.z,Ob[Cb+6]=Oa.x,Ob[Cb+7]=Oa.y,Ob[Cb+8]=Oa.z,Cb+=9;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],Ma=jc[Ea.a],Na=jc[Ea.b],Oa=jc[Ea.c],Pa=jc[Ea.d],Ob[Cb]=Ma.x,Ob[Cb+1]=Ma.y,Ob[Cb+2]=Ma.z,Ob[Cb+3]=Na.x,Ob[Cb+4]=Na.y,Ob[Cb+5]=Na.z,Ob[Cb+6]=Oa.x,Ob[Cb+7]=Oa.y,Ob[Cb+8]=Oa.z,Ob[Cb+9]=Pa.x,Ob[Cb+10]=Pa.y,Ob[Cb+11]=Pa.z,Cb+=12;F.bindBuffer(F.ARRAY_BUFFER,sa.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,Ob,ua)}if(ic)for(vb=0,wb=tc.length;wb>vb;vb++){for(Ba=Lb=0,Ca=kc.length;Ca>Ba;Ba++)zb=kc[Ba],Ea=mc[zb],Ma=tc[vb].vertices[Ea.a],Na=tc[vb].vertices[Ea.b],Oa=tc[vb].vertices[Ea.c],xb=Yb[vb],xb[Lb]=Ma.x,xb[Lb+1]=Ma.y,xb[Lb+2]=Ma.z,xb[Lb+3]=Na.x,xb[Lb+4]=Na.y,xb[Lb+5]=Na.z,xb[Lb+6]=Oa.x,xb[Lb+7]=Oa.y,xb[Lb+8]=Oa.z,wa.morphNormals&&(Aa?(Ab=uc[vb].vertexNormals[zb],
Ua=Ab.a,Va=Ab.b,Wa=Ab.c):Wa=Va=Ua=uc[vb].faceNormals[zb],yb=Zb[vb],yb[Lb]=Ua.x,yb[Lb+1]=Ua.y,yb[Lb+2]=Ua.z,yb[Lb+3]=Va.x,yb[Lb+4]=Va.y,yb[Lb+5]=Va.z,yb[Lb+6]=Wa.x,yb[Lb+7]=Wa.y,yb[Lb+8]=Wa.z),Lb+=9;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)zb=lc[Ba],Ea=mc[zb],Ma=tc[vb].vertices[Ea.a],Na=tc[vb].vertices[Ea.b],Oa=tc[vb].vertices[Ea.c],Pa=tc[vb].vertices[Ea.d],xb=Yb[vb],xb[Lb]=Ma.x,xb[Lb+1]=Ma.y,xb[Lb+2]=Ma.z,xb[Lb+3]=Na.x,xb[Lb+4]=Na.y,xb[Lb+5]=Na.z,xb[Lb+6]=Oa.x,xb[Lb+7]=Oa.y,xb[Lb+8]=Oa.z,xb[Lb+9]=Pa.x,xb[Lb+10]=Pa.y,xb[Lb+11]=Pa.z,wa.morphNormals&&(Aa?(Ab=uc[vb].vertexNormals[zb],Ua=Ab.a,Va=Ab.b,Wa=Ab.c,Xa=Ab.d):Xa=Wa=Va=Ua=uc[vb].faceNormals[zb],yb=Zb[vb],yb[Lb]=Ua.x,yb[Lb+1]=Ua.y,yb[Lb+2]=Ua.z,yb[Lb+3]=Va.x,yb[Lb+4]=Va.y,yb[Lb+5]=Va.z,yb[Lb+6]=Wa.x,yb[Lb+7]=Wa.y,yb[Lb+8]=Wa.z,yb[Lb+9]=Xa.x,yb[Lb+10]=Xa.y,yb[Lb+11]=Xa.z),Lb+=12;F.bindBuffer(F.ARRAY_BUFFER,sa.__webglMorphTargetsBuffers[vb]),F.bufferData(F.ARRAY_BUFFER,Yb[vb],ua),wa.morphNormals&&(F.bindBuffer(F.ARRAY_BUFFER,sa.__webglMorphNormalsBuffers[vb]),F.bufferData(F.ARRAY_BUFFER,Zb[vb],ua))}if(sc.length){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],ab=sc[Ea.a],bb=sc[Ea.b],cb=sc[Ea.c],Xb[Kb]=ab.x,Xb[Kb+1]=ab.y,Xb[Kb+2]=ab.z,Xb[Kb+3]=ab.w,Xb[Kb+4]=bb.x,Xb[Kb+5]=bb.y,Xb[Kb+6]=bb.z,Xb[Kb+7]=bb.w,Xb[Kb+8]=cb.x,Xb[Kb+9]=cb.y,Xb[Kb+10]=cb.z,Xb[Kb+11]=cb.w,eb=rc[Ea.a],fb=rc[Ea.b],gb=rc[Ea.c],Wb[Kb]=eb.x,Wb[Kb+1]=eb.y,Wb[Kb+2]=eb.z,Wb[Kb+3]=eb.w,Wb[Kb+4]=fb.x,Wb[Kb+5]=fb.y,Wb[Kb+6]=fb.z,Wb[Kb+7]=fb.w,Wb[Kb+8]=gb.x,Wb[Kb+9]=gb.y,Wb[Kb+10]=gb.z,Wb[Kb+11]=gb.w,ib=pc[Ea.a],jb=pc[Ea.b],kb=pc[Ea.c],Ub[Kb]=ib.x,Ub[Kb+1]=ib.y,Ub[Kb+2]=ib.z,Ub[Kb+3]=1,Ub[Kb+4]=jb.x,Ub[Kb+5]=jb.y,Ub[Kb+6]=jb.z,Ub[Kb+7]=1,Ub[Kb+8]=kb.x,Ub[Kb+9]=kb.y,Ub[Kb+10]=kb.z,Ub[Kb+11]=1,mb=qc[Ea.a],nb=qc[Ea.b],ob=qc[Ea.c],Vb[Kb]=mb.x,Vb[Kb+1]=mb.y,Vb[Kb+2]=mb.z,Vb[Kb+3]=1,Vb[Kb+4]=nb.x,Vb[Kb+5]=nb.y,Vb[Kb+6]=nb.z,Vb[Kb+7]=1,Vb[Kb+8]=ob.x,Vb[Kb+9]=ob.y,Vb[Kb+10]=ob.z,Vb[Kb+11]=1,Kb+=12;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],ab=sc[Ea.a],bb=sc[Ea.b],cb=sc[Ea.c],db=sc[Ea.d],Xb[Kb]=ab.x,Xb[Kb+1]=ab.y,Xb[Kb+2]=ab.z,Xb[Kb+3]=ab.w,Xb[Kb+4]=bb.x,Xb[Kb+5]=bb.y,Xb[Kb+6]=bb.z,Xb[Kb+7]=bb.w,Xb[Kb+8]=cb.x,Xb[Kb+9]=cb.y,Xb[Kb+10]=cb.z,Xb[Kb+11]=cb.w,Xb[Kb+12]=db.x,Xb[Kb+13]=db.y,Xb[Kb+14]=db.z,Xb[Kb+15]=db.w,eb=rc[Ea.a],fb=rc[Ea.b],gb=rc[Ea.c],hb=rc[Ea.d],Wb[Kb]=eb.x,Wb[Kb+1]=eb.y,Wb[Kb+2]=eb.z,Wb[Kb+3]=eb.w,Wb[Kb+4]=fb.x,Wb[Kb+5]=fb.y,Wb[Kb+6]=fb.z,Wb[Kb+7]=fb.w,Wb[Kb+8]=gb.x,Wb[Kb+9]=gb.y,Wb[Kb+10]=gb.z,Wb[Kb+11]=gb.w,Wb[Kb+12]=hb.x,Wb[Kb+13]=hb.y,Wb[Kb+14]=hb.z,Wb[Kb+15]=hb.w,ib=pc[Ea.a],jb=pc[Ea.b],kb=pc[Ea.c],lb=pc[Ea.d],Ub[Kb]=ib.x,Ub[Kb+1]=ib.y,Ub[Kb+2]=ib.z,Ub[Kb+3]=1,Ub[Kb+4]=jb.x,Ub[Kb+5]=jb.y,Ub[Kb+6]=jb.z,Ub[Kb+7]=1,Ub[Kb+8]=kb.x,Ub[Kb+9]=kb.y,Ub[Kb+10]=kb.z,Ub[Kb+11]=1,Ub[Kb+12]=lb.x,Ub[Kb+13]=lb.y,Ub[Kb+14]=lb.z,Ub[Kb+15]=1,mb=qc[Ea.a],nb=qc[Ea.b],ob=qc[Ea.c],pb=qc[Ea.d],Vb[Kb]=mb.x,Vb[Kb+1]=mb.y,Vb[Kb+2]=mb.z,Vb[Kb+3]=1,Vb[Kb+4]=nb.x,Vb[Kb+5]=nb.y,Vb[Kb+6]=nb.z,Vb[Kb+7]=1,Vb[Kb+8]=ob.x,Vb[Kb+9]=ob.y,Vb[Kb+10]=ob.z,Vb[Kb+11]=1,Vb[Kb+12]=pb.x,Vb[Kb+13]=pb.y,Vb[Kb+14]=pb.z,Vb[Kb+15]=1,Kb+=16;Kb>0&&(F.bindBuffer(F.ARRAY_BUFFER,sa.__webglSkinVertexABuffer),F.bufferData(F.ARRAY_BUFFER,Ub,ua),F.bindBuffer(F.ARRAY_BUFFER,sa.__webglSkinVertexBBuffer),F.bufferData(F.ARRAY_BUFFER,Vb,ua),F.bindBuffer(F.ARRAY_BUFFER,sa.__webglSkinIndicesBuffer),F.bufferData(F.ARRAY_BUFFER,Wb,ua),F.bindBuffer(F.ARRAY_BUFFER,sa.__webglSkinWeightsBuffer),F.bufferData(F.ARRAY_BUFFER,Xb,ua))}if(hc&&ya){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],Ha=Ea.vertexColors,Ia=Ea.color,3===Ha.length&&ya===THREE.VertexColors?(Ya=Ha[0],Za=Ha[1],$a=Ha[2]):$a=Za=Ya=Ia,Tb[Jb]=Ya.r,Tb[Jb+1]=Ya.g,Tb[Jb+2]=Ya.b,Tb[Jb+3]=Za.r,Tb[Jb+4]=Za.g,Tb[Jb+5]=Za.b,Tb[Jb+6]=$a.r,Tb[Jb+7]=$a.g,Tb[Jb+8]=$a.b,Jb+=9;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],Ha=Ea.vertexColors,Ia=Ea.color,4===Ha.length&&ya===THREE.VertexColors?(Ya=Ha[0],Za=Ha[1],$a=Ha[2],_a=Ha[3]):_a=$a=Za=Ya=Ia,Tb[Jb]=Ya.r,Tb[Jb+1]=Ya.g,Tb[Jb+2]=Ya.b,Tb[Jb+3]=Za.r,Tb[Jb+4]=Za.g,Tb[Jb+5]=Za.b,Tb[Jb+6]=$a.r,Tb[Jb+7]=$a.g,Tb[Jb+8]=$a.b,Tb[Jb+9]=_a.r,Tb[Jb+10]=_a.g,Tb[Jb+11]=_a.b,Jb+=12;Jb>0&&(F.bindBuffer(F.ARRAY_BUFFER,sa.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,Tb,ua))}if(gc&&cc.hasTangents){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],Ja=Ea.vertexTangents,Qa=Ja[0],Ra=Ja[1],Sa=Ja[2],Sb[Hb]=Qa.x,Sb[Hb+1]=Qa.y,Sb[Hb+2]=Qa.z,Sb[Hb+3]=Qa.w,Sb[Hb+4]=Ra.x,Sb[Hb+5]=Ra.y,Sb[Hb+6]=Ra.z,Sb[Hb+7]=Ra.w,Sb[Hb+8]=Sa.x,Sb[Hb+9]=Sa.y,Sb[Hb+10]=Sa.z,Sb[Hb+11]=Sa.w,Hb+=12;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],Ja=Ea.vertexTangents,Qa=Ja[0],Ra=Ja[1],Sa=Ja[2],Ta=Ja[3],Sb[Hb]=Qa.x,Sb[Hb+1]=Qa.y,Sb[Hb+2]=Qa.z,Sb[Hb+3]=Qa.w,Sb[Hb+4]=Ra.x,Sb[Hb+5]=Ra.y,Sb[Hb+6]=Ra.z,Sb[Hb+7]=Ra.w,Sb[Hb+8]=Sa.x,Sb[Hb+9]=Sa.y,Sb[Hb+10]=Sa.z,Sb[Hb+11]=Sa.w,Sb[Hb+12]=Ta.x,Sb[Hb+13]=Ta.y,Sb[Hb+14]=Ta.z,Sb[Hb+15]=Ta.w,Hb+=16;F.bindBuffer(F.ARRAY_BUFFER,sa.__webglTangentBuffer),F.bufferData(F.ARRAY_BUFFER,Sb,ua)}if(fc&&xa){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)if(Ea=mc[kc[Ba]],Fa=Ea.vertexNormals,Ga=Ea.normal,3===Fa.length&&Aa)for(qb=0;3>qb;qb++)sb=Fa[qb],Rb[Gb]=sb.x,Rb[Gb+1]=sb.y,Rb[Gb+2]=sb.z,Gb+=3;else for(qb=0;3>qb;qb++)Rb[Gb]=Ga.x,Rb[Gb+1]=Ga.y,Rb[Gb+2]=Ga.z,Gb+=3;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)if(Ea=mc[lc[Ba]],Fa=Ea.vertexNormals,Ga=Ea.normal,4===Fa.length&&Aa)for(qb=0;4>qb;qb++)sb=Fa[qb],Rb[Gb]=sb.x,Rb[Gb+1]=sb.y,Rb[Gb+2]=sb.z,Gb+=3;else for(qb=0;4>qb;qb++)Rb[Gb]=Ga.x,Rb[Gb+1]=Ga.y,Rb[Gb+2]=Ga.z,Gb+=3;F.bindBuffer(F.ARRAY_BUFFER,sa.__webglNormalBuffer),F.bufferData(F.ARRAY_BUFFER,Rb,ua)}if(ec&&nc&&za){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)if(Da=kc[Ba],Ea=mc[Da],Ka=nc[Da],void 0!==Ka)for(qb=0;3>qb;qb++)tb=Ka[qb],Pb[Db]=tb.u,Pb[Db+1]=tb.v,Db+=2;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)if(Da=lc[Ba],Ea=mc[Da],Ka=nc[Da],void 0!==Ka)for(qb=0;4>qb;qb++)tb=Ka[qb],Pb[Db]=tb.u,Pb[Db+1]=tb.v,Db+=2;Db>0&&(F.bindBuffer(F.ARRAY_BUFFER,sa.__webglUVBuffer),F.bufferData(F.ARRAY_BUFFER,Pb,ua))}if(ec&&oc&&za){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)if(Da=kc[Ba],Ea=mc[Da],La=oc[Da],void 0!==La)for(qb=0;3>qb;qb++)ub=La[qb],Qb[Eb]=ub.u,Qb[Eb+1]=ub.v,Eb+=2;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)if(Da=lc[Ba],Ea=mc[Da],La=oc[Da],void 0!==La)for(qb=0;4>qb;qb++)ub=La[qb],Qb[Eb]=ub.u,Qb[Eb+1]=ub.v,Eb+=2;Eb>0&&(F.bindBuffer(F.ARRAY_BUFFER,sa.__webglUV2Buffer),F.bufferData(F.ARRAY_BUFFER,Qb,ua))}if(dc){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],ac[Fb]=Bb,ac[Fb+1]=Bb+1,ac[Fb+2]=Bb+2,Fb+=3,bc[Ib]=Bb,bc[Ib+1]=Bb+1,bc[Ib+2]=Bb,bc[Ib+3]=Bb+2,bc[Ib+4]=Bb+1,bc[Ib+5]=Bb+2,Ib+=6,Bb+=3;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],ac[Fb]=Bb,ac[Fb+1]=Bb+1,ac[Fb+2]=Bb+3,ac[Fb+3]=Bb+1,ac[Fb+4]=Bb+2,ac[Fb+5]=Bb+3,Fb+=6,bc[Ib]=Bb,bc[Ib+1]=Bb+1,bc[Ib+2]=Bb,bc[Ib+3]=Bb+3,bc[Ib+4]=Bb+1,bc[Ib+5]=Bb+2,bc[Ib+6]=Bb+2,bc[Ib+7]=Bb+3,Ib+=8,Bb+=4;F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,sa.__webglFaceBuffer),F.bufferData(F.ELEMENT_ARRAY_BUFFER,ac,ua),F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,sa.__webglLineBuffer),F.bufferData(F.ELEMENT_ARRAY_BUFFER,bc,ua)}if($b)for(qb=0,rb=$b.length;rb>qb;qb++)if(_b=$b[qb],_b.__original.needsUpdate){if(Mb=0,1===_b.size){if(void 0===_b.boundTo||"vertices"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],_b.array[Mb]=_b.value[Ea.a],_b.array[Mb+1]=_b.value[Ea.b],_b.array[Mb+2]=_b.value[Ea.c],Mb+=3;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],_b.array[Mb]=_b.value[Ea.a],_b.array[Mb+1]=_b.value[Ea.b],_b.array[Mb+2]=_b.value[Ea.c],_b.array[Mb+3]=_b.value[Ea.d],Mb+=4}else if("faces"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Nb=_b.value[kc[Ba]],_b.array[Mb]=Nb,_b.array[Mb+1]=Nb,_b.array[Mb+2]=Nb,Mb+=3;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Nb=_b.value[lc[Ba]],_b.array[Mb]=Nb,_b.array[Mb+1]=Nb,_b.array[Mb+2]=Nb,_b.array[Mb+3]=Nb,Mb+=4}}else if(2===_b.size){if(void 0===_b.boundTo||"vertices"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],Ma=_b.value[Ea.a],Na=_b.value[Ea.b],Oa=_b.value[Ea.c],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Na.x,_b.array[Mb+3]=Na.y,_b.array[Mb+4]=Oa.x,_b.array[Mb+5]=Oa.y,Mb+=6;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],Ma=_b.value[Ea.a],Na=_b.value[Ea.b],Oa=_b.value[Ea.c],Pa=_b.value[Ea.d],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Na.x,_b.array[Mb+3]=Na.y,_b.array[Mb+4]=Oa.x,_b.array[Mb+5]=Oa.y,_b.array[Mb+6]=Pa.x,_b.array[Mb+7]=Pa.y,Mb+=8}else if("faces"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Oa=Na=Ma=Nb=_b.value[kc[Ba]],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Na.x,_b.array[Mb+3]=Na.y,_b.array[Mb+4]=Oa.x,_b.array[Mb+5]=Oa.y,Mb+=6;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Pa=Oa=Na=Ma=Nb=_b.value[lc[Ba]],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Na.x,_b.array[Mb+3]=Na.y,_b.array[Mb+4]=Oa.x,_b.array[Mb+5]=Oa.y,_b.array[Mb+6]=Pa.x,_b.array[Mb+7]=Pa.y,Mb+=8}}else if(3===_b.size){var vc;if(vc="c"===_b.type?["r","g","b"]:["x","y","z"],void 0===_b.boundTo||"vertices"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],Ma=_b.value[Ea.a],Na=_b.value[Ea.b],Oa=_b.value[Ea.c],_b.array[Mb]=Ma[vc[0]],_b.array[Mb+1]=Ma[vc[1]],_b.array[Mb+2]=Ma[vc[2]],_b.array[Mb+3]=Na[vc[0]],_b.array[Mb+4]=Na[vc[1]],_b.array[Mb+5]=Na[vc[2]],_b.array[Mb+6]=Oa[vc[0]],_b.array[Mb+7]=Oa[vc[1]],_b.array[Mb+8]=Oa[vc[2]],Mb+=9;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],Ma=_b.value[Ea.a],Na=_b.value[Ea.b],Oa=_b.value[Ea.c],Pa=_b.value[Ea.d],_b.array[Mb]=Ma[vc[0]],_b.array[Mb+1]=Ma[vc[1]],_b.array[Mb+2]=Ma[vc[2]],_b.array[Mb+3]=Na[vc[0]],_b.array[Mb+4]=Na[vc[1]],_b.array[Mb+5]=Na[vc[2]],_b.array[Mb+6]=Oa[vc[0]],_b.array[Mb+7]=Oa[vc[1]],_b.array[Mb+8]=Oa[vc[2]],_b.array[Mb+9]=Pa[vc[0]],_b.array[Mb+10]=Pa[vc[1]],_b.array[Mb+11]=Pa[vc[2]],Mb+=12}else if("faces"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Oa=Na=Ma=Nb=_b.value[kc[Ba]],_b.array[Mb]=Ma[vc[0]],_b.array[Mb+1]=Ma[vc[1]],_b.array[Mb+2]=Ma[vc[2]],_b.array[Mb+3]=Na[vc[0]],_b.array[Mb+4]=Na[vc[1]],_b.array[Mb+5]=Na[vc[2]],_b.array[Mb+6]=Oa[vc[0]],_b.array[Mb+7]=Oa[vc[1]],_b.array[Mb+8]=Oa[vc[2]],Mb+=9;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Pa=Oa=Na=Ma=Nb=_b.value[lc[Ba]],_b.array[Mb]=Ma[vc[0]],_b.array[Mb+1]=Ma[vc[1]],_b.array[Mb+2]=Ma[vc[2]],_b.array[Mb+3]=Na[vc[0]],_b.array[Mb+4]=Na[vc[1]],_b.array[Mb+5]=Na[vc[2]],_b.array[Mb+6]=Oa[vc[0]],_b.array[Mb+7]=Oa[vc[1]],_b.array[Mb+8]=Oa[vc[2]],_b.array[Mb+9]=Pa[vc[0]],_b.array[Mb+10]=Pa[vc[1]],_b.array[Mb+11]=Pa[vc[2]],Mb+=12}}else if(4===_b.size)if(void 0===_b.boundTo||"vertices"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Ea=mc[kc[Ba]],Ma=_b.value[Ea.a],Na=_b.value[Ea.b],Oa=_b.value[Ea.c],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Ma.z,_b.array[Mb+3]=Ma.w,_b.array[Mb+4]=Na.x,_b.array[Mb+5]=Na.y,_b.array[Mb+6]=Na.z,_b.array[Mb+7]=Na.w,_b.array[Mb+8]=Oa.x,_b.array[Mb+9]=Oa.y,_b.array[Mb+10]=Oa.z,_b.array[Mb+11]=Oa.w,Mb+=12;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Ea=mc[lc[Ba]],Ma=_b.value[Ea.a],Na=_b.value[Ea.b],Oa=_b.value[Ea.c],Pa=_b.value[Ea.d],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Ma.z,_b.array[Mb+3]=Ma.w,_b.array[Mb+4]=Na.x,_b.array[Mb+5]=Na.y,_b.array[Mb+6]=Na.z,_b.array[Mb+7]=Na.w,_b.array[Mb+8]=Oa.x,_b.array[Mb+9]=Oa.y,_b.array[Mb+10]=Oa.z,_b.array[Mb+11]=Oa.w,_b.array[Mb+12]=Pa.x,_b.array[Mb+13]=Pa.y,_b.array[Mb+14]=Pa.z,_b.array[Mb+15]=Pa.w,Mb+=16}else if("faces"===_b.boundTo){for(Ba=0,Ca=kc.length;Ca>Ba;Ba++)Oa=Na=Ma=Nb=_b.value[kc[Ba]],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Ma.z,_b.array[Mb+3]=Ma.w,_b.array[Mb+4]=Na.x,_b.array[Mb+5]=Na.y,_b.array[Mb+6]=Na.z,_b.array[Mb+7]=Na.w,_b.array[Mb+8]=Oa.x,_b.array[Mb+9]=Oa.y,_b.array[Mb+10]=Oa.z,_b.array[Mb+11]=Oa.w,Mb+=12;for(Ba=0,Ca=lc.length;Ca>Ba;Ba++)Pa=Oa=Na=Ma=Nb=_b.value[lc[Ba]],_b.array[Mb]=Ma.x,_b.array[Mb+1]=Ma.y,_b.array[Mb+2]=Ma.z,_b.array[Mb+3]=Ma.w,_b.array[Mb+4]=Na.x,_b.array[Mb+5]=Na.y,_b.array[Mb+6]=Na.z,_b.array[Mb+7]=Na.w,_b.array[Mb+8]=Oa.x,_b.array[Mb+9]=Oa.y,_b.array[Mb+10]=Oa.z,_b.array[Mb+11]=Oa.w,_b.array[Mb+12]=Pa.x,_b.array[Mb+13]=Pa.y,_b.array[Mb+14]=Pa.z,_b.array[Mb+15]=Pa.w,Mb+=16}F.bindBuffer(F.ARRAY_BUFFER,_b.buffer),F.bufferData(F.ARRAY_BUFFER,_b.array,ua)}va&&(delete sa.__inittedArrays,delete sa.__colorArray,delete sa.__normalArray,delete sa.__tangentArray,delete sa.__uvArray,delete sa.__uv2Array,delete sa.__faceArray,delete sa.__vertexArray,delete sa.__lineArray,delete sa.__skinVertexAArray,delete sa.__skinVertexBArray,delete sa.__skinIndexArray,delete sa.__skinWeightArray)}}ma.verticesNeedUpdate=!1,ma.morphTargetsNeedUpdate=!1,ma.elementsNeedUpdate=!1,ma.uvsNeedUpdate=!1,ma.normalsNeedUpdate=!1,ma.colorsNeedUpdate=!1,ma.tangetsNeedUpdate=!1,pa.attributes&&m(pa)}else if(la instanceof THREE.Line){if(pa=c(la,na),oa=pa.attributes&&l(pa),ma.verticesNeedUpdate||ma.colorsNeedUpdate||oa){var wc=ma,xc=F.DYNAMIC_DRAW,yc=void 0,zc=void 0,Ac=void 0,Bc=void 0,Cc=void 0,Dc=wc.vertices,Ec=wc.colors,Fc=Dc.length,Gc=Ec.length,Hc=wc.__vertexArray,Ic=wc.__colorArray,Jc=wc.colorsNeedUpdate,Kc=wc.__webglCustomAttributesList,Lc=void 0,Mc=void 0,Nc=void 0,Oc=void 0,Pc=void 0,Qc=void 0;if(wc.verticesNeedUpdate){for(yc=0;Fc>yc;yc++)Ac=Dc[yc],Bc=3*yc,Hc[Bc]=Ac.x,Hc[Bc+1]=Ac.y,Hc[Bc+2]=Ac.z;F.bindBuffer(F.ARRAY_BUFFER,wc.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,Hc,xc)}if(Jc){for(zc=0;Gc>zc;zc++)Cc=Ec[zc],Bc=3*zc,Ic[Bc]=Cc.r,Ic[Bc+1]=Cc.g,Ic[Bc+2]=Cc.b;F.bindBuffer(F.ARRAY_BUFFER,wc.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,Ic,xc)}if(Kc)for(Lc=0,Mc=Kc.length;Mc>Lc;Lc++)if(Qc=Kc[Lc],Qc.needsUpdate&&(void 0===Qc.boundTo||"vertices"===Qc.boundTo)){if(Bc=0,Oc=Qc.value.length,1===Qc.size)for(Nc=0;Oc>Nc;Nc++)Qc.array[Nc]=Qc.value[Nc];else if(2===Qc.size)for(Nc=0;Oc>Nc;Nc++)Pc=Qc.value[Nc],Qc.array[Bc]=Pc.x,Qc.array[Bc+1]=Pc.y,Bc+=2;else if(3===Qc.size)if("c"===Qc.type)for(Nc=0;Oc>Nc;Nc++)Pc=Qc.value[Nc],Qc.array[Bc]=Pc.r,Qc.array[Bc+1]=Pc.g,Qc.array[Bc+2]=Pc.b,Bc+=3;else for(Nc=0;Oc>Nc;Nc++)Pc=Qc.value[Nc],Qc.array[Bc]=Pc.x,Qc.array[Bc+1]=Pc.y,Qc.array[Bc+2]=Pc.z,Bc+=3;else if(4===Qc.size)for(Nc=0;Oc>Nc;Nc++)Pc=Qc.value[Nc],Qc.array[Bc]=Pc.x,Qc.array[Bc+1]=Pc.y,Qc.array[Bc+2]=Pc.z,Qc.array[Bc+3]=Pc.w,Bc+=4;F.bindBuffer(F.ARRAY_BUFFER,Qc.buffer),F.bufferData(F.ARRAY_BUFFER,Qc.array,xc)}}ma.verticesNeedUpdate=!1,ma.colorsNeedUpdate=!1,pa.attributes&&m(pa)}else la instanceof THREE.ParticleSystem&&(pa=c(la,na),oa=pa.attributes&&l(pa),(ma.verticesNeedUpdate||ma.colorsNeedUpdate||la.sortParticles||oa)&&f(ma,F.DYNAMIC_DRAW,la),ma.verticesNeedUpdate=!1,ma.colorsNeedUpdate=!1,pa.attributes&&m(pa))}},this.initMaterial=function(a,b,c,d){var e,f,g;if(a instanceof THREE.MeshDepthMaterial?g="depth":a instanceof THREE.MeshNormalMaterial?g="normal":a instanceof THREE.MeshBasicMaterial?g="basic":a instanceof THREE.MeshLambertMaterial?g="lambert":a instanceof THREE.MeshPhongMaterial?g="phong":a instanceof THREE.LineBasicMaterial?g="basic":a instanceof THREE.ParticleBasicMaterial&&(g="particle_basic"),g){var h=THREE.ShaderLib[g];a.uniforms=THREE.UniformsUtils.clone(h.uniforms),a.vertexShader=h.vertexShader,a.fragmentShader=h.fragmentShader}var i,j,k,l,m;for(i=l=m=h=0,j=b.length;j>i;i++)k=b[i],k.onlyShadow||(k instanceof THREE.DirectionalLight&&l++,k instanceof THREE.PointLight&&m++,k instanceof THREE.SpotLight&&h++);E>=m+h+l?(j=l,k=m,l=h):(j=Math.ceil(E*l/(m+l)),l=k=E-j);var n=0,h=0;for(m=b.length;m>h;h++)i=b[h],i.castShadow&&(i instanceof THREE.SpotLight&&n++,i instanceof THREE.DirectionalLight&&!i.shadowCascade&&n++);var o;a:{m=a.fragmentShader,i=a.vertexShader;var p,h=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:50,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:j,maxPointLights:k,maxSpotLights:l,maxShadows:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:d&&d.doubleSided},d=[];g?d.push(g):(d.push(m),d.push(i));for(p in c)d.push(p),d.push(c[p]);for(g=d.join(),p=0,d=H.length;d>p;p++)if(H[p].code===g){o=H[p].program;break a}p=F.createProgram(),d=["precision "+w+" float;",la>0?"#define VERTEX_TEXTURES":"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"",G.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),j=["precision "+w+" float;","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",G.gammaInput?"#define GAMMA_INPUT":"",G.gammaOutput?"#define GAMMA_OUTPUT":"",G.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),F.attachShader(p,q("fragment",j+m)),F.attachShader(p,q("vertex",d+i)),F.linkProgram(p),F.getProgramParameter(p,F.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+F.getProgramParameter(p,F.VALIDATE_STATUS)+", gl error ["+F.getError()+"]"),p.uniforms={},p.attributes={};var r,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","boneGlobalMatrices","morphTargetInfluences"];for(r in h)d.push(r);for(r=d,d=0,h=r.length;h>d;d++)m=r[d],p.uniforms[m]=F.getUniformLocation(p,m);for(d=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"],r=0;r<c.maxMorphTargets;r++)d.push("morphTarget"+r);for(r=0;r<c.maxMorphNormals;r++)d.push("morphNormal"+r);for(o in b)d.push(o);for(o=d,r=0,b=o.length;b>r;r++)c=o[r],p.attributes[c]=F.getAttribLocation(p,c);p.id=H.length,H.push({program:p,code:g}),G.info.memory.programs=H.length,o=p}if(a.program=o,o=a.program.attributes,o.position>=0&&F.enableVertexAttribArray(o.position),o.color>=0&&F.enableVertexAttribArray(o.color),o.normal>=0&&F.enableVertexAttribArray(o.normal),o.tangent>=0&&F.enableVertexAttribArray(o.tangent),a.skinning&&o.skinVertexA>=0&&o.skinVertexB>=0&&o.skinIndex>=0&&o.skinWeight>=0&&(F.enableVertexAttribArray(o.skinVertexA),F.enableVertexAttribArray(o.skinVertexB),F.enableVertexAttribArray(o.skinIndex),F.enableVertexAttribArray(o.skinWeight)),a.attributes)for(f in a.attributes)void 0!==o[f]&&o[f]>=0&&F.enableVertexAttribArray(o[f]);if(a.morphTargets)for(a.numSupportedMorphTargets=0,p="morphTarget",f=0;f<this.maxMorphTargets;f++)r=p+f,o[r]>=0&&(F.enableVertexAttribArray(o[r]),a.numSupportedMorphTargets++);if(a.morphNormals)for(a.numSupportedMorphNormals=0,p="morphNormal",f=0;f<this.maxMorphNormals;f++)r=p+f,o[r]>=0&&(F.enableVertexAttribArray(o[r]),a.numSupportedMorphNormals++);a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])},this.setFaceCulling=function(a,b){a?(b&&"ccw"!==b?F.frontFace(F.CW):F.frontFace(F.CCW),"back"===a?F.cullFace(F.BACK):"front"===a?F.cullFace(F.FRONT):F.cullFace(F.FRONT_AND_BACK),F.enable(F.CULL_FACE)):F.disable(F.CULL_FACE)},this.setObjectFaces=function(a){O!==a.doubleSided&&(a.doubleSided?F.disable(F.CULL_FACE):F.enable(F.CULL_FACE),O=a.doubleSided),P!==a.flipSided&&(a.flipSided?F.frontFace(F.CW):F.frontFace(F.CCW),P=a.flipSided)},this.setDepthTest=function(a){U!==a&&(a?F.enable(F.DEPTH_TEST):F.disable(F.DEPTH_TEST),U=a)},this.setDepthWrite=function(a){V!==a&&(F.depthMask(a),V=a)},this.setBlending=function(a,b,c,d){if(a!==Q){switch(a){case THREE.NoBlending:F.disable(F.BLEND);break;case THREE.AdditiveBlending:F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.SRC_ALPHA,F.ONE);break;case THREE.SubtractiveBlending:F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.ZERO,F.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.ZERO,F.SRC_COLOR);break;case THREE.CustomBlending:F.enable(F.BLEND);break;default:F.enable(F.BLEND),F.blendEquationSeparate(F.FUNC_ADD,F.FUNC_ADD),F.blendFuncSeparate(F.SRC_ALPHA,F.ONE_MINUS_SRC_ALPHA,F.ONE,F.ONE_MINUS_SRC_ALPHA)}Q=a}a===THREE.CustomBlending?(b!==R&&(F.blendEquation(u(b)),R=b),(c!==S||d!==T)&&(F.blendFunc(u(c),u(d)),S=c,T=d)):T=S=R=null},this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=F.createTexture(),G.info.memory.textures++),F.activeTexture(F.TEXTURE0+b),F.bindTexture(F.TEXTURE_2D,a.__webglTexture),F.pixelStorei(F.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=u(a.format),f=u(a.type);r(F.TEXTURE_2D,a,d),a instanceof THREE.DataTexture?F.texImage2D(F.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):F.texImage2D(F.TEXTURE_2D,0,e,e,f,a.image),a.generateMipmaps&&d&&F.generateMipmap(F.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else F.activeTexture(F.TEXTURE0+b),F.bindTexture(F.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0),void 0===a.stencilBuffer&&(a.stencilBuffer=!0),a.__webglTexture=F.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=u(a.format),e=u(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],F.bindTexture(F.TEXTURE_CUBE_MAP,a.__webglTexture),r(F.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=F.createFramebuffer(),a.__webglRenderbuffer[f]=F.createRenderbuffer(),F.texImage2D(F.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=F.TEXTURE_CUBE_MAP_POSITIVE_X+f;F.bindFramebuffer(F.FRAMEBUFFER,a.__webglFramebuffer[f]),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,h,g.__webglTexture,0),s(a.__webglRenderbuffer[f],a)}c&&F.generateMipmap(F.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=F.createFramebuffer(),a.__webglRenderbuffer=F.createRenderbuffer(),F.bindTexture(F.TEXTURE_2D,a.__webglTexture),r(F.TEXTURE_2D,a,c),F.texImage2D(F.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=F.TEXTURE_2D,F.bindFramebuffer(F.FRAMEBUFFER,a.__webglFramebuffer),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,d,a.__webglTexture,0),s(a.__webglRenderbuffer,a),c&&F.generateMipmap(F.TEXTURE_2D);b?F.bindTexture(F.TEXTURE_CUBE_MAP,null):F.bindTexture(F.TEXTURE_2D,null),F.bindRenderbuffer(F.RENDERBUFFER,null),F.bindFramebuffer(F.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=aa,a=ba,d=$,e=_),b!==J&&(F.bindFramebuffer(F.FRAMEBUFFER,b),F.viewport(d,e,c,a),J=b),ca=c,da=a}},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==c.format?c.format:THREE.RGBAFormat,this.type=void 0!==c.type?c.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0,this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a},THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget,THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,j=f.faces,k=a.faceVertexUvs[0],l=f.faceVertexUvs[0],m={},n=0;n<a.materials.length;n++)m[a.materials[n].id]=n;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var n=0,o=h.length;o>n;n++){var p=h[n].clone();c&&c.multiplyVector3(p),g.push(p)}for(n=0,o=j.length;o>n;n++){var q,r,g=j[n],s=g.vertexNormals,t=g.vertexColors;for(g instanceof THREE.Face3?q=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(q=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e)),q.normal.copy(g.normal),d&&d.multiplyVector3(q.normal),h=0,p=s.length;p>h;h++)r=s[h].clone(),d&&d.multiplyVector3(r),q.vertexNormals.push(r);for(q.color.copy(g.color),h=0,p=t.length;p>h;h++)r=t[h],q.vertexColors.push(r.clone());void 0!==g.materialIndex&&(h=f.materials[g.materialIndex],p=h.id,t=m[p],void 0===t&&(t=a.materials.length,m[p]=t,a.materials.push(h)),q.materialIndex=t),q.centroid.copy(g.centroid),c&&c.multiplyVector3(q.centroid),i.push(q)}for(n=0,o=l.length;o>n;n++){for(c=l[n],d=[],h=0,p=c.length;p>h;h++)d.push(new THREE.UV(c[h].u,c[h].v));k.push(d)}},clone:function(a){var b,c=new THREE.Geometry,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];for(a.materials&&(c.materials=a.materials.slice()),a=0,b=d.length;b>a;a++)c.vertices.push(d[a].clone());for(a=0,b=e.length;b>a;a++)c.faces.push(e[a].clone());for(a=0,b=f.length;b>a;a++){for(var d=f[a],e=[],g=0,h=d.length;h>g;g++)e.push(new THREE.UV(d[g].u,d[g].v));c.faceVertexUvs[0].push(e)}return c},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;return d=THREE.GeometryUtils.random(),e=THREE.GeometryUtils.random(),d+e>1&&(d=1-d,e=1-e),f=1-d-e,g.copy(a),g.multiplyScalar(d),h.copy(b),h.multiplyScalar(e),g.addSelf(h),h.copy(c),h.multiplyScalar(f),g.addSelf(h),g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c];var g,b=b.vertices[a.d];return c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b)),THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(c>d)return c;var e=c+Math.floor((d-c)/2);return n[e]>a?b(c,e-1):n[e]<a?b(e+1,d):e}return b(0,n.length-1)}var d,e,f,g,h,i,j=a.faces,k=a.vertices,l=j.length,m=0,n=[];for(e=0;l>e;e++)d=j[e],d instanceof THREE.Face3?(f=k[d.a],g=k[d.b],h=k[d.c],d._area=THREE.GeometryUtils.triangleArea(f,g,h)):d instanceof THREE.Face4&&(f=k[d.a],g=k[d.b],h=k[d.c],i=k[d.d],d._area1=THREE.GeometryUtils.triangleArea(f,g,i),d._area2=THREE.GeometryUtils.triangleArea(g,h,i),d._area=d._area1+d._area2),m+=d._area,n[e]=m;for(d=[],e=0;b>e;e++)k=THREE.GeometryUtils.random()*m,k=c(k),d[e]=THREE.GeometryUtils.randomPointInFace(j[k],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;return e.sub(a,b),d=e.length(),e.sub(a,c),a=e.length(),e.sub(b,c),c=e.length(),b=.5*(d+a+c),Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.add(b.min,b.max),c.multiplyScalar(-.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;c>b;b++)for(var d=a[b],e=0,f=d.length;f>e;e++)1!==d[e].u&&(d[e].u=d[e].u-Math.floor(d[e].u)),1!==d[e].v&&(d[e].v=d[e].v-Math.floor(d[e].v))},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];for(b=0,c=a.faceUvs.length;c>b;b++)g[b]=[];for(b=0,c=a.faceVertexUvs.length;c>b;b++)h[b]=[];for(b=0,c=a.faces.length;c>b;b++)if(d=a.faces[b],d instanceof THREE.Face4){e=d.a;var i=d.b,j=d.c,k=d.d,l=new THREE.Face3,m=new THREE.Face3;for(l.color.copy(d.color),m.color.copy(d.color),l.materialIndex=d.materialIndex,m.materialIndex=d.materialIndex,l.a=e,l.b=i,l.c=k,m.a=i,m.b=j,m.c=k,4===d.vertexColors.length&&(l.vertexColors[0]=d.vertexColors[0].clone(),l.vertexColors[1]=d.vertexColors[1].clone(),l.vertexColors[2]=d.vertexColors[3].clone(),m.vertexColors[0]=d.vertexColors[1].clone(),m.vertexColors[1]=d.vertexColors[2].clone(),m.vertexColors[2]=d.vertexColors[3].clone()),f.push(l,m),d=0,e=a.faceVertexUvs.length;e>d;d++)a.faceVertexUvs[d].length&&(l=a.faceVertexUvs[d][b],
i=l[1],j=l[2],k=l[3],l=[l[0].clone(),i.clone(),k.clone()],i=[i.clone(),j.clone(),k.clone()],h[d].push(l,i));for(d=0,e=a.faceUvs.length;e>d;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{for(f.push(d),d=0,e=a.faceUvs.length;e>d;d++)g[d].push(a.faceUvs[d]);for(d=0,e=a.faceVertexUvs.length;e>d;d++)h[d].push(a.faceVertexUvs[d])}a.faces=f,a.faceUvs=g,a.faceVertexUvs=h,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;d>c;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],j=a.vertices[f.d];b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),b.push(j.clone()),f.a=e,f.b=e+1,f.c=e+2,f.d=e+3}else g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b,delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=[],w=[];for(c=0,d=a.faceVertexUvs.length;d>c;c++)w[c]=[];for(c=0,d=a.faces.length;d>c;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,j=a.vertices[f],k=a.vertices[g],l=a.vertices[h],n=j.distanceTo(k),o=k.distanceTo(l),m=j.distanceTo(l),n>b||o>b||m>b)for(i=a.vertices.length,t=e.clone(),u=e.clone(),n>=o&&n>=m?(j=j.clone(),j.lerpSelf(k,.5),t.a=f,t.b=i,t.c=h,u.a=i,u.b=g,u.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],.5),t.vertexNormals[1].copy(f),u.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],.5),t.vertexColors[1].copy(f),u.vertexColors[0].copy(f)),e=0):o>=n&&o>=m?(j=k.clone(),j.lerpSelf(l,.5),t.a=f,t.b=g,t.c=i,u.a=i,u.b=h,u.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],.5),t.vertexNormals[2].copy(f),u.vertexNormals[0].copy(f),u.vertexNormals[1].copy(e.vertexNormals[2]),u.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],.5),t.vertexColors[2].copy(f),u.vertexColors[0].copy(f),u.vertexColors[1].copy(e.vertexColors[2]),u.vertexColors[2].copy(e.vertexColors[0])),e=1):(j=j.clone(),j.lerpSelf(l,.5),t.a=f,t.b=g,t.c=i,u.a=i,u.b=g,u.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],.5),t.vertexNormals[2].copy(f),u.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],.5),t.vertexColors[2].copy(f),u.vertexColors[0].copy(f)),e=2),v.push(t,u),a.vertices.push(j),f=0,g=a.faceVertexUvs.length;g>f;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],u=j[0],h=j[1],t=j[2],0===e?(k=u.clone(),k.lerpSelf(h,.5),j=[u.clone(),k.clone(),t.clone()],h=[k.clone(),h.clone(),t.clone()]):1===e?(k=h.clone(),k.lerpSelf(t,.5),j=[u.clone(),h.clone(),k.clone()],h=[k.clone(),t.clone(),u.clone()]):(k=u.clone(),k.lerpSelf(t,.5),j=[u.clone(),h.clone(),k.clone()],h=[k.clone(),h.clone(),t.clone()]),w[f].push(j,h));else for(v.push(e),f=0,g=a.faceVertexUvs.length;g>f;f++)w[f].push(a.faceVertexUvs[f][c]);else if(f=e.a,g=e.b,h=e.c,i=e.d,j=a.vertices[f],k=a.vertices[g],l=a.vertices[h],m=a.vertices[i],n=j.distanceTo(k),o=k.distanceTo(l),p=l.distanceTo(m),q=j.distanceTo(m),n>b||o>b||p>b||q>b)for(r=a.vertices.length,s=a.vertices.length+1,t=e.clone(),u=e.clone(),n>=o&&n>=p&&n>=q||p>=o&&p>=n&&p>=q?(n=j.clone(),n.lerpSelf(k,.5),k=l.clone(),k.lerpSelf(m,.5),t.a=f,t.b=r,t.c=s,t.d=i,u.a=r,u.b=g,u.c=h,u.d=s,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],.5),t.vertexNormals[1].copy(f),t.vertexNormals[2].copy(g),u.vertexNormals[0].copy(f),u.vertexNormals[3].copy(g)),4===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],.5),t.vertexColors[1].copy(f),t.vertexColors[2].copy(g),u.vertexColors[0].copy(f),u.vertexColors[3].copy(g)),e=0):(n=k.clone(),n.lerpSelf(l,.5),k=m.clone(),k.lerpSelf(j,.5),t.a=f,t.b=g,t.c=r,t.d=s,u.a=s,u.b=r,u.c=h,u.d=i,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],.5),t.vertexNormals[2].copy(f),t.vertexNormals[3].copy(g),u.vertexNormals[0].copy(g),u.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],.5),t.vertexColors[2].copy(f),t.vertexColors[3].copy(g),u.vertexColors[0].copy(g),u.vertexColors[1].copy(f)),e=1),v.push(t,u),a.vertices.push(n,k),f=0,g=a.faceVertexUvs.length;g>f;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],u=j[0],h=j[1],t=j[2],j=j[3],0===e?(k=u.clone(),k.lerpSelf(h,.5),l=t.clone(),l.lerpSelf(j,.5),u=[u.clone(),k.clone(),l.clone(),j.clone()],h=[k.clone(),h.clone(),t.clone(),l.clone()]):(k=h.clone(),k.lerpSelf(t,.5),l=j.clone(),l.lerpSelf(u,.5),u=[u.clone(),h.clone(),k.clone(),l.clone()],h=[l.clone(),k.clone(),t.clone(),j.clone()]),w[f].push(u,h));else for(v.push(e),f=0,g=a.faceVertexUvs.length;g>f;f++)w[f].push(a.faceVertexUvs[f][c]);a.faces=v,a.faceVertexUvs=w}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);return d.onload=function(){e.needsUpdate=!0,c&&c(this)},d.crossOrigin=this.crossOrigin,d.src=a,e},loadTextureCube:function(a,b,c){var d,e=[],f=new THREE.Texture(e,b),b=e.loadCount=0;for(d=a.length;d>b;++b)e[b]=new Image,e[b].onload=function(){e.loadCount=e.loadCount+1,6===e.loadCount&&(f.needsUpdate=!0),c&&c(this)},e[b].crossOrigin=this.crossOrigin,e[b].src=a[b];return f},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=1|b,d=a.width,e=a.height,f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,i=g.createImageData(d,e),j=i.data,k=0;d>k;k++)for(var l=0;e>l;l++){var m=0>l-1?0:l-1,n=l+1>e-1?e-1:l+1,o=0>k-1?0:k-1,p=k+1>d-1?d-1:k+1,q=[],r=[0,0,h[4*(l*d+k)]/255*b];for(q.push([-1,0,h[4*(l*d+o)]/255*b]),q.push([-1,-1,h[4*(m*d+o)]/255*b]),q.push([0,-1,h[4*(m*d+k)]/255*b]),q.push([1,-1,h[4*(m*d+p)]/255*b]),q.push([1,0,h[4*(l*d+p)]/255*b]),q.push([1,1,h[4*(n*d+p)]/255*b]),q.push([0,1,h[4*(n*d+k)]/255*b]),q.push([-1,1,h[4*(n*d+o)]/255*b]),m=[],o=q.length,n=0;o>n;n++){var p=q[n],s=q[(n+1)%o],p=[p[0]-r[0],p[1]-r[1],p[2]-r[2]],s=[s[0]-r[0],s[1]-r[1],s[2]-r[2]];m.push(c([p[1]*s[2]-p[2]*s[1],p[2]*s[0]-p[0]*s[2],p[0]*s[1]-p[1]*s[0]]))}for(q=[0,0,0],n=0;n<m.length;n++)q[0]=q[0]+m[n][0],q[1]=q[1]+m[n][1],q[2]=q[2]+m[n][2];q[0]=q[0]/m.length,q[1]=q[1]/m.length,q[2]=q[2]/m.length,r=4*(l*d+k),j[r]=(q[0]+1)/2*255|0,j[r+1]=255*(q[1]+.5)|0,j[r+2]=255*q[2]|0,j[r+3]=255}return g.putImageData(i,0,0),f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),c=Math.floor(255*c.b),h=0;d>h;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;return a=new THREE.DataTexture(e,a,b,THREE.RGBFormat),a.needsUpdate=!0,a}},THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,e=a.children.length;for(d=0;e>d;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;d>c;c++){var f=new THREE.Mesh(a,b[c]);e.add(f)}return e},cloneObject:function(a){var b;a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.Object3D&&(b=new THREE.Object3D),b.name=a.name,b.parent=a.parent,b.up.copy(a.up),b.position.copy(a.position),b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation),b.eulerOrder=a.eulerOrder,b.scale.copy(a.scale),b.dynamic=a.dynamic,b.doubleSided=a.doubleSided,b.flipSided=a.flipSided,b.renderDepth=a.renderDepth,b.rotationAutoUpdate=a.rotationAutoUpdate,b.matrix.copy(a.matrix),b.matrixWorld.copy(a.matrixWorld),b.matrixRotationWorld.copy(a.matrixRotationWorld),b.matrixAutoUpdate=a.matrixAutoUpdate,b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,b.quaternion.copy(a.quaternion),b.useQuaternion=a.useQuaternion,b.boundRadius=a.boundRadius,b.boundRadiusScale=a.boundRadiusScale,b.visible=a.visible,b.castShadow=a.castShadow,b.receiveShadow=a.receiveShadow,b.frustumCulled=a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d,d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}}),THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++,this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null,this.dynamic=!1,this.boundingSphere=this.boundingBox=null,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}},THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function i(a,b,c,g,h,i,j,k){var l,m=d||1,n=e||1,o=h/2,q=i/2,r=p.vertices.length;"x"===a&&"y"===b||"y"===a&&"x"===b?l="z":"x"===a&&"z"===b||"z"===a&&"x"===b?(l="y",n=f||1):("z"===a&&"y"===b||"y"===a&&"z"===b)&&(l="x",m=f||1);var s=m+1,t=n+1,u=h/m,v=i/n,w=new THREE.Vector3;for(w[l]=j>0?1:-1,h=0;t>h;h++)for(i=0;s>i;i++){var x=new THREE.Vector3;x[a]=(i*u-o)*c,x[b]=(h*v-q)*g,x[l]=j,p.vertices.push(x)}for(h=0;n>h;h++)for(i=0;m>i;i++)a=new THREE.Face4(i+s*h+r,i+s*(h+1)+r,i+1+s*(h+1)+r,i+1+s*h+r),a.normal.copy(w),a.vertexNormals.push(w.clone(),w.clone(),w.clone(),w.clone()),a.materialIndex=k,p.faces.push(a),p.faceVertexUvs[0].push([new THREE.UV(i/m,h/n),new THREE.UV(i/m,(h+1)/n),new THREE.UV((i+1)/m,(h+1)/n),new THREE.UV((i+1)/m,h/n)])}THREE.Geometry.call(this);var j,k,l,m,n,o,p=this,q=a/2,r=b/2,s=c/2;if(void 0!==g){if(g instanceof Array)this.materials=g;else for(this.materials=[],j=0;6>j;j++)this.materials.push(g);j=0,m=1,k=2,n=3,l=4,o=5}else this.materials=[];if(this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0},void 0!=h)for(var t in h)void 0!==this.sides[t]&&(this.sides[t]=h[t]);this.sides.px&&i("z","y",-1,-1,c,b,q,j),this.sides.nx&&i("z","y",1,-1,c,b,-q,m),this.sides.py&&i("x","z",1,1,a,c,r,k),this.sides.ny&&i("x","z",1,-1,a,c,-r,n),this.sides.pz&&i("x","y",1,-1,a,b,s,l),this.sides.nz&&i("x","y",-1,-1,a,b,-s,o),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=new THREE.Geometry,THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry,THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var g,h,a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,i=c/2,d=d||8,e=e||1,j=[],k=[];for(h=0;e>=h;h++){var l=[],m=[],n=h/e,o=n*(b-a)+a;for(g=0;d>=g;g++){var p=g/d,q=new THREE.Vector3;q.x=o*Math.sin(p*Math.PI*2),q.y=-n*c+i,q.z=o*Math.cos(p*Math.PI*2),this.vertices.push(q),l.push(this.vertices.length-1),m.push(new THREE.UV(p,n))}j.push(l),k.push(m)}for(c=(b-a)/c,g=0;d>g;g++)for(0!==a?(l=this.vertices[j[0][g]].clone(),m=this.vertices[j[0][g+1]].clone()):(l=this.vertices[j[1][g]].clone(),m=this.vertices[j[1][g+1]].clone()),l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*c).normalize(),m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize(),h=0;e>h;h++){var n=j[h][g],o=j[h+1][g],p=j[h+1][g+1],q=j[h][g+1],r=l.clone(),s=l.clone(),t=m.clone(),u=m.clone(),v=k[h][g].clone(),w=k[h+1][g].clone(),x=k[h+1][g+1].clone(),y=k[h][g+1].clone();this.faces.push(new THREE.Face4(n,o,p,q,[r,s,t,u])),this.faceVertexUvs[0].push([v,w,x,y])}if(!f&&a>0)for(this.vertices.push(new THREE.Vector3(0,i,0)),g=0;d>g;g++)n=j[0][g],o=j[0][g+1],p=this.vertices.length-1,r=new THREE.Vector3(0,1,0),s=new THREE.Vector3(0,1,0),t=new THREE.Vector3(0,1,0),v=k[0][g].clone(),w=k[0][g+1].clone(),x=new THREE.UV(w.u,0),this.faces.push(new THREE.Face3(n,o,p,[r,s,t])),this.faceVertexUvs[0].push([v,w,x]);if(!f&&b>0)for(this.vertices.push(new THREE.Vector3(0,-i,0)),g=0;d>g;g++)n=j[h][g+1],o=j[h][g],p=this.vertices.length-1,r=new THREE.Vector3(0,-1,0),s=new THREE.Vector3(0,-1,0),t=new THREE.Vector3(0,-1,0),v=k[h][g+1].clone(),w=k[h][g].clone(),x=new THREE.UV(w.u,1),this.faces.push(new THREE.Face3(n,o,p,[r,s,t])),this.faceVertexUvs[0].push([v,w,x]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=new THREE.Geometry,THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var e=a/2,f=b/2,c=c||1,d=d||1,g=c+1,h=d+1,i=a/c,j=b/d,k=new THREE.Vector3(0,1,0),a=0;h>a;a++)for(b=0;g>b;b++)this.vertices.push(new THREE.Vector3(b*i-e,0,a*j-f));for(a=0;d>a;a++)for(b=0;c>b;b++)e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),e.normal.copy(k),e.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/c,(a+1)/d),new THREE.UV((b+1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=new THREE.Geometry,THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);var h,i,a=a||50,d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,f=void 0!==f?f:0,g=void 0!==g?g:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),j=[],k=[];for(i=0;c>=i;i++){var l=[],m=[];for(h=0;b>=h;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.UV(n,o))}j.push(l),k.push(m)}for(i=0;c>i;i++)for(h=0;b>h;h++){var d=j[i][h+1],e=j[i][h],f=j[i+1][h],g=j[i+1][h+1],l=this.vertices[d].clone().normalize(),m=this.vertices[e].clone().normalize(),n=this.vertices[f].clone().normalize(),o=this.vertices[g].clone().normalize(),p=k[i][h+1].clone(),q=k[i][h].clone(),r=k[i+1][h].clone(),s=k[i+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,f,g,[l,n,o])),this.faceVertexUvs[0].push([p,r,s])):Math.abs(this.vertices[f].y)==a?(this.faces.push(new THREE.Face3(d,e,f,[l,m,n])),this.faceVertexUvs[0].push([p,q,r])):(this.faces.push(new THREE.Face4(d,e,f,g,[l,m,n,o])),this.faceVertexUvs[0].push([p,q,r,s]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:a}},THREE.SphereGeometry.prototype=new THREE.Geometry,THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;return b.uv=new THREE.UV(c,a),b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),i.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){l[a.index]||(l[a.index]=[]),l[b.index]||(l[b.index]=[]);var c=l[a.index][b.index];return void 0===c&&(l[a.index][b.index]=l[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2))),c}function h(a,b,c){return 0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v)),0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+.5,a.v)),a}THREE.Geometry.call(this);for(var c=c||1,d=d||0,i=this,j=0,k=a.length;k>j;j++)e(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var l=[],a=this.vertices,j=0,k=b.length;k>j;j++)f(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);for(this.mergeVertices(),j=0,k=this.vertices.length;k>j;j++)this.vertices[j].multiplyScalar(c);this.computeCentroids(),this.boundingSphere={radius:c}},THREE.PolyhedronGeometry.prototype=new THREE.Geometry,THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)},THREE.IcosahedronGeometry.prototype=new THREE.Geometry,THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.ShaderLib.lambert.fragmentShader=THREE.ShaderLib.lambert.fragmentShader.replace("gl_FrontFacing","true"),THREE.ShaderLib.lambert.vertexShader=THREE.ShaderLib.lambert.vertexShader.replace(/\}$/,"#ifdef DOUBLE_SIDED\n if (transformedNormal.z < 0.0) vLightFront = vLightBack;\n #endif\n }");var TV3=THREE.Vector3,TF3=THREE.Face3,TCo=THREE.Color;THREE.Geometry.prototype.colorAll=function(a){for(var b=0;b<this.faces.length;b++)this.faces[b].color=a},THREE.Matrix4.prototype.isIdentity=function(){for(var a=0;4>a;a++)for(var b=0;4>b;b++)if(this.elements[4*a+b]!=(a==b)?1:0)return!1;return!0};var GLmol=function(){function a(a,b,c){return a&&this.create(a,b,c),!0}function b(a,b,c,d){d.vertices.push(new THREE.Vector3(a,b,c))}function c(a,b,c,d){d.faces.push(new THREE.Face3(a,b,c))}function d(a,b){for(var c=0,d=0,e=0,f=0;f<a.length-6;f+=6)c+=a[f],d+=a[f+1],e+=a[f+2];return[c/b,d/b,e/b]}return a.prototype.create=function(a,b,c){this.Nucleotides=["  G","  A","  T","  C","  U"," DG"," DA"," DT"," DC"," DU"],this.ElementColors={H:13421772,C:11184810,O:13369344,N:204,S:13421568,P:6693580,F:52224,CL:52224,BR:8921600,I:6684842,FE:13395456,CA:8947882},this.vdwRadii={H:1.2,Li:1.82,Na:2.27,K:2.75,C:1.7,N:1.55,O:1.52,F:1.47,P:1.8,S:1.8,CL:1.75,BR:1.85,SE:1.9,ZN:1.39,CU:1.4,NI:1.63},this.id=a,this.cavans_id=c,this.aaScale=1,this.atoms={},this.proteins={},this.centroids={},this.container=$("#"+c),this.WIDTH=this.container.width()*this.aaScale,this.HEIGHT=this.container.height()*this.aaScale,this.ASPECT=this.WIDTH/this.HEIGHT,this.NEAR=1,this.FAR=800,this.CAMERA_Z=-150,this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.sortObjects=!1,this.renderer.domElement.style.width="100%",this.renderer.domElement.style.height="100%",this.container.append(this.renderer.domElement),this.renderer.setSize(this.WIDTH,this.HEIGHT),this.camera=new THREE.PerspectiveCamera(20,this.ASPECT,1,800),this.camera.position=new TV3(0,0,this.CAMERA_Z),this.camera.lookAt(new TV3(0,0,0)),this.perspectiveCamera=this.camera,this.orthoscopicCamera=new THREE.OrthographicCamera,this.orthoscopicCamera.position.z=this.CAMERA_Z,this.orthoscopicCamera.lookAt(new TV3(0,0,0));var d=this;$(window).resize(function(){d.WIDTH=d.container.width()*d.aaScale,d.HEIGHT=d.container.height()*d.aaScale,d.ASPECT=d.WIDTH/d.HEIGHT,d.renderer.setSize(d.WIDTH,d.HEIGHT),d.camera.aspect=d.ASPECT,d.camera.updateProjectionMatrix(),d.show()}),this.scene=null,this.rotationGroup=null,this.modelGroup=null,this.surfGroup=null,this.bgColor=0,this.fov=20,this.fogStart=.4,this.slabNear=-50,this.slabFar=50,this.sphereRadius=1.5,this.cylinderRadius=.4,this.lineWidth=1.5*this.aaScale,this.curveWidth=3*this.aaScale,this.defaultColor=13421772,this.sphereQuality=16,this.cylinderQuality=16,this.axisDIV=5,this.strandDIV=6,this.nucleicAcidStrandDIV=4,this.tubeDIV=8,this.coilWidth=.3,this.helixSheetWidth=1.3,this.nucleicAcidWidth=.8,this.thickness=.4,this.cq=new THREE.Quaternion(1,0,0,0),this.dq=new THREE.Quaternion(1,0,0,0),this.isDragging=!1,this.mouseStartX=0,this.mouseStartY=0,this.currentModelPos=0,this.cz=0,this.enableMouse(),b},a.prototype.init=function(){new Date,this.getView();this.initializeScene()},a.prototype.addPDB=function(a,b){this.mainCentroid||(this.mainCentroid=b.centroid),this.proteins[a]=b.protein,this.protein=b.protein,this.atoms[a]=b.atoms,this.centroids[a]=this.mainCentroid,this.rebuildScene(a)},a.prototype.addPDBRaw=function(a,b,c){var d=this.parsePDBToStructure(b);this.addPDB(a,d,c);
},a.prototype.addSurf=function(a,e,f){var g=this.parseSurf(e),h=new THREE.Geometry,i=g.coordinates,j=g.faces;this.mainCentroid||(this.mainCentroid=d(i,g.numGeometry));for(var k=0;k<i.length;k+=6)b(i[k],i[k+1],i[k+2],h);for(var l=0;l<j.length;l+=3)c(j[l],j[l+1],j[l+2],h);h.computeFaceNormals(),h.computeVertexNormals();var m=new THREE.Mesh(h,new THREE.MeshLambertMaterial({color:f,wireframe:!1}));return m.position.set(-this.mainCentroid[0],-this.mainCentroid[1],-this.mainCentroid[2]),m.name=a,this.surfGroup.add(m),this.show(),this.show(),m},a.prototype.parseSurf=function(a){var b,c,d,e=[],f=[],g=0,h=0,i=30;b=a.split("\n");for(var j=0;i>j;j++)if("G"==b[j].charAt(0)){g=j;break}c=parseInt(b[g].replace("GEOMETRY: ",""));var k=[];for(j=0;c>j;j++)k[j]=b[j+g+1].split(" ");for(var l=0,m=0;m<k.length;m++)for(var n=0;n<k[0].length;n++)e[l]=parseFloat(k[m][n]),l++;for(m=c-1+g;c-1+g+i>m;m++)if("T"==b[m].charAt(0)){h=m;break}for(d=parseInt(b[h].replace("TOPOLOGY: ","")),k=[],j=0;d>j;j++)k[j]=b[j+h+1].split(" ");for(l=0,m=0;m<k.length;m++)for(n=0;n<k[0].length;n++)f[l]=parseFloat(k[m][n]),l++;var a={coordinates:e,faces:f,numGeometry:c,numTopology:d,startGeometry:g,startTopology:h};return a},a.prototype.parsePDBToStructure=function(a){console.log("PARSEDB@");for(var b=[],c={sheet:[],helix:[],biomtChains:"",biomtMatrices:[],symMat:[],pdbID:"",title:""},d=a.split("\n"),e=0;e<d.length;e++){var f=d[e].replace(/^\s*/,""),g=f.substr(0,6);if("ATOM  "==g||"HETATM"==g){var h,i,j,k,l,m,n,o,p,q,r,s;if(r=f.substr(16,1)," "!=r&&"A"!=r)continue;q=parseInt(f.substr(6,5)),h=f.substr(12,4).replace(/ /g,""),i=f.substr(17,3),j=f.substr(21,1),k=parseInt(f.substr(22,5)),l=parseFloat(f.substr(30,8)),m=parseFloat(f.substr(38,8)),n=parseFloat(f.substr(46,8)),s=parseFloat(f.substr(60,8)),p=f.substr(76,2).replace(/ /g,""),""==p&&(p=f.substr(12,4).replace(/ /g,"")),o="H"==f[0]?!0:!1,b[q]={resn:i,x:l,y:m,z:n,elem:p,hetflag:o,chain:j,resi:k,serial:q,atom:h,bonds:[],ss:"c",color:16777215,bondOrder:[],b:s}}else if("SHEET "==g){var t=f.substr(21,1),u=parseInt(f.substr(22,4)),v=f.substr(32,1),w=parseInt(f.substr(33,4));c.sheet.push([t,u,v,w])}else if("CONECT"==g)for(var x=parseInt(f.substr(6,5)),y=0;4>y;y++){var z=parseInt(f.substr([11,16,21,26][y],5));isNaN(z)||void 0!=b[x]&&(b[x].bonds.push(z),b[x].bondOrder.push(1))}else if("HELIX "==g){var t=f.substr(19,1),u=parseInt(f.substr(21,4)),v=f.substr(31,1),w=parseInt(f.substr(33,4));c.helix.push([t,u,v,w])}else if("CRYST1"==g)c.a=parseFloat(f.substr(6,9)),c.b=parseFloat(f.substr(15,9)),c.c=parseFloat(f.substr(24,9)),c.alpha=parseFloat(f.substr(33,7)),c.beta=parseFloat(f.substr(40,7)),c.gamma=parseFloat(f.substr(47,7)),c.spacegroup=f.substr(55,11);else if("REMARK"==g){var A=parseInt(f.substr(7,3));if(290==A&&"SMTRY"==f.substr(13,5)){var B=parseInt(f[18])-1,C=parseInt(f.substr(21,2));void 0==c.symMat[C]&&(c.symMat[C]=(new THREE.Matrix4).identity()),c.symMat[C].elements[B]=parseFloat(f.substr(24,9)),c.symMat[C].elements[B+4]=parseFloat(f.substr(34,9)),c.symMat[C].elements[B+8]=parseFloat(f.substr(44,9)),c.symMat[C].elements[B+12]=parseFloat(f.substr(54,10))}else if(350==A&&"BIOMT"==f.substr(13,5)){var B=parseInt(f[18])-1,C=parseInt(f.substr(21,2));void 0==c.biomtMatrices[C]&&(c.biomtMatrices[C]=(new THREE.Matrix4).identity()),c.biomtMatrices[C].elements[B]=parseFloat(f.substr(24,9)),c.biomtMatrices[C].elements[B+4]=parseFloat(f.substr(34,9)),c.biomtMatrices[C].elements[B+8]=parseFloat(f.substr(44,9)),c.biomtMatrices[C].elements[B+12]=parseFloat(f.substr(54,10))}else 350==A&&"BIOMOLECULE"==f.substr(11,11)?(c.biomtMatrices=[],c.biomtChains=""):350==A&&"CHAINS"==f.substr(34,6)&&(c.biomtChains+=f.substr(41,40))}else"HEADER"==g?c.pdbID=f.substr(62,4):"TITLE "==g&&(void 0==c.title&&(c.title=""),c.title+=f.substr(10,70)+"\n")}var D=0,E=0,F=0;for(e=0;e<b.length;e++)if(h=b[e],void 0!=h){D+=h.x,E+=h.y,F+=h.z;for(y=0;y<c.sheet.length;y++)h.chain==c.sheet[y][0]&&(h.resi<c.sheet[y][1]||h.resi>c.sheet[y][3]||(h.ss="s",h.resi==c.sheet[y][1]&&(h.ssbegin=!0),h.resi==c.sheet[y][3]&&(h.ssend=!0)));for(y=0;y<c.helix.length;y++)h.chain==c.helix[y][0]&&(h.resi<c.helix[y][1]||h.resi>c.helix[y][3]||(h.ss="h",h.resi==c.helix[y][1]?h.ssbegin=!0:h.resi==c.helix[y][3]&&(h.ssend=!0)))}b=_.compact(b);var G=b.length;return c.smallMolecule=!1,{atoms:b,protein:c,centroid:[D/G,E/G,F/G]}},a.prototype.getNewColor=function(){this.hasOwnProperty("currentColorH")?this.currentColorH+=60:this.currentColorH=0;var a=new TCo(0);return a.setHSV(this.currentColorH/360,1,1),("000000"+a.getHex().toString(16)).slice(-6)},a.prototype.getCurrentColor=function(){var a;a=this.hasOwnProperty("currentColorH")?this.currentColorH+60:0;var b=new TCo(0);return b.setHSV(a/360,1,1),("000000"+b.getHex().toString(16)).slice(-6)},a.prototype.setupLights=function(a){var b=new THREE.DirectionalLight(16777215);b.position=new TV3(.2,.2,-1).normalize(),b.intensity=1.2,a.add(b);var c=new THREE.AmbientLight(2105376);a.add(c)},a.prototype.pdbToggle=function(a){var b=_.where(this.modelGroup.children,{name:a})[0];b.visible=!b.visible,b.children.forEach(function(a){console.log(a),a.visible=!a.visible}),this.show()},a.prototype.surfToggle=function(a){console.log(this.surfGroup);var b=_.where(this.surfGroup.children,{name:a})[0];b.visible=!b.visible,b.children.forEach(function(a){console.log(a),a.visible=!a.visible}),this.show()},a.prototype.parseSDF=function(a){var b=this.atoms,c=this.protein,d=a.split("\n");if(!(d.length<4)){var e=parseInt(d[3].substr(0,3));if(!(isNaN(e)||0>=e)){var f=parseInt(d[3].substr(3,3)),g=4;if(!(d.length<4+e+f)){for(var h=1;e>=h;h++){var i=d[g];g++;var j={};j.serial=h,j.x=parseFloat(i.substr(0,10)),j.y=parseFloat(i.substr(10,10)),j.z=parseFloat(i.substr(20,10)),j.hetflag=!0,j.atom=j.elem=i.substr(31,3).replace(/ /g,""),j.bonds=[],j.bondOrder=[],b[h]=j}for(h=1;f>=h;h++){var i=d[g];g++;var k=parseInt(i.substr(0,3)),l=parseInt(i.substr(3,3)),m=parseInt(i.substr(6,3));b[k].bonds.push(l),b[k].bondOrder.push(m),b[l].bonds.push(k),b[l].bondOrder.push(m)}return c.smallMolecule=!0,!0}}}},a.prototype.parseXYZ=function(a){var b=this.atoms,c=this.protein,d=a.split("\n");if(!(d.length<3)){var e=parseInt(d[0].substr(0,3));if(!(isNaN(e)||0>=e||d.length<e+2)){for(var f=2,g=1;e>=g;g++){var h=d[f++],i=h.replace(/^\s+/,"").replace(/\s+/g," ").split(" ");console.log(i);var j={};j.serial=g,j.atom=j.elem=i[0],j.x=parseFloat(i[1]),j.y=parseFloat(i[2]),j.z=parseFloat(i[3]),j.hetflag=!0,j.bonds=[],j.bondOrder=[],b[g]=j}for(var g=1;e>g;g++)for(var k=g+1;e>=k;k++)this.isConnected(b[g],b[k])&&(b[g].bonds.push(k),b[g].bondOrder.push(1),b[k].bonds.push(g),b[k].bondOrder.push(1));return c.smallMolecule=!0,!0}}},a.prototype.parsePDB2=function(a){for(var b=this.atoms,c=this.protein,d=a.split("\n"),e=0;e<d.length;e++){var f=d[e].replace(/^\s*/,""),g=f.substr(0,6);if("ATOM  "==g||"HETATM"==g){var h,i,j,k,l,m,n,o,p,q,r,s;if(r=f.substr(16,1)," "!=r&&"A"!=r)continue;q=parseInt(f.substr(6,5)),h=f.substr(12,4).replace(/ /g,""),i=f.substr(17,3),j=f.substr(21,1),k=parseInt(f.substr(22,5)),l=parseFloat(f.substr(30,8)),m=parseFloat(f.substr(38,8)),n=parseFloat(f.substr(46,8)),s=parseFloat(f.substr(60,8)),p=f.substr(76,2).replace(/ /g,""),""==p&&(p=f.substr(12,4).replace(/ /g,"")),o="H"==f[0]?!0:!1,b[q]={resn:i,x:l,y:m,z:n,elem:p,hetflag:o,chain:j,resi:k,serial:q,atom:h,bonds:[],ss:"c",color:16777215,bondOrder:[],b:s}}else if("SHEET "==g){var t=f.substr(21,1),u=parseInt(f.substr(22,4)),v=f.substr(32,1),w=parseInt(f.substr(33,4));c.sheet.push([t,u,v,w])}else if("CONECT"==g)for(var x=parseInt(f.substr(6,5)),y=0;4>y;y++){var z=parseInt(f.substr([11,16,21,26][y],5));isNaN(z)||void 0!=b[x]&&(b[x].bonds.push(z),b[x].bondOrder.push(1))}else if("HELIX "==g){var t=f.substr(19,1),u=parseInt(f.substr(21,4)),v=f.substr(31,1),w=parseInt(f.substr(33,4));c.helix.push([t,u,v,w])}else if("CRYST1"==g)c.a=parseFloat(f.substr(6,9)),c.b=parseFloat(f.substr(15,9)),c.c=parseFloat(f.substr(24,9)),c.alpha=parseFloat(f.substr(33,7)),c.beta=parseFloat(f.substr(40,7)),c.gamma=parseFloat(f.substr(47,7)),c.spacegroup=f.substr(55,11),this.defineCell();else if("REMARK"==g){var A=parseInt(f.substr(7,3));if(290==A&&"SMTRY"==f.substr(13,5)){var B=parseInt(f[18])-1,C=parseInt(f.substr(21,2));void 0==c.symMat[C]&&(c.symMat[C]=(new THREE.Matrix4).identity()),c.symMat[C].elements[B]=parseFloat(f.substr(24,9)),c.symMat[C].elements[B+4]=parseFloat(f.substr(34,9)),c.symMat[C].elements[B+8]=parseFloat(f.substr(44,9)),c.symMat[C].elements[B+12]=parseFloat(f.substr(54,10))}else if(350==A&&"BIOMT"==f.substr(13,5)){var B=parseInt(f[18])-1,C=parseInt(f.substr(21,2));void 0==c.biomtMatrices[C]&&(c.biomtMatrices[C]=(new THREE.Matrix4).identity()),c.biomtMatrices[C].elements[B]=parseFloat(f.substr(24,9)),c.biomtMatrices[C].elements[B+4]=parseFloat(f.substr(34,9)),c.biomtMatrices[C].elements[B+8]=parseFloat(f.substr(44,9)),c.biomtMatrices[C].elements[B+12]=parseFloat(f.substr(54,10))}else 350==A&&"BIOMOLECULE"==f.substr(11,11)?(c.biomtMatrices=[],c.biomtChains=""):350==A&&"CHAINS"==f.substr(34,6)&&(c.biomtChains+=f.substr(41,40))}else"HEADER"==g?c.pdbID=f.substr(62,4):"TITLE "==g&&(void 0==c.title&&(c.title=""),c.title+=f.substr(10,70)+"\n")}for(e=0;e<b.length;e++)if(h=b[e],void 0!=h){for(y=0;y<c.sheet.length;y++)h.chain==c.sheet[y][0]&&(h.resi<c.sheet[y][1]||h.resi>c.sheet[y][3]||(h.ss="s",h.resi==c.sheet[y][1]&&(h.ssbegin=!0),h.resi==c.sheet[y][3]&&(h.ssend=!0)));for(y=0;y<c.helix.length;y++)h.chain==c.helix[y][0]&&(h.resi<c.helix[y][1]||h.resi>c.helix[y][3]||(h.ss="h",h.resi==c.helix[y][1]?h.ssbegin=!0:h.resi==c.helix[y][3]&&(h.ssend=!0)))}return c.smallMolecule=!1,!0},a.prototype.subdivide=function(a,b){var c=[],d=a;d=new Array,d.push(a[0]);for(var e=1,f=a.length-1;f>e;e++){var g=a[e],h=a[e+1];g.smoothen?d.push(new TV3((g.x+h.x)/2,(g.y+h.y)/2,(g.z+h.z)/2)):d.push(g)}d.push(a[a.length-1]);for(var e=-1,i=d.length;i-3>=e;e++)for(var j=d[-1==e?0:e],g=d[e+1],h=d[e+2],k=d[e==i-3?i-1:e+3],l=(new TV3).subVectors(h,j).multiplyScalar(.5),m=(new TV3).subVectors(k,g).multiplyScalar(.5),n=0;b>n;n++){var o=1/b*n,p=g.x+o*l.x+o*o*(-3*g.x+3*h.x-2*l.x-m.x)+o*o*o*(2*g.x-2*h.x+l.x+m.x),q=g.y+o*l.y+o*o*(-3*g.y+3*h.y-2*l.y-m.y)+o*o*o*(2*g.y-2*h.y+l.y+m.y),r=g.z+o*l.z+o*o*(-3*g.z+3*h.z-2*l.z-m.z)+o*o*o*(2*g.z-2*h.z+l.z+m.z);c.push(new TV3(p,q,r))}return c.push(d[d.length-1]),c},a.prototype.drawAtomsAsSphere=function(a,b,c,d,e,f){console.log("Drawing Atom As Sphere");for(var g=new THREE.SphereGeometry(1,this.sphereQuality,this.sphereQuality),h=this.atoms[b],i=0;i<c.length;i++){var j=h[c[i]];if(void 0!=j){var k=new THREE.MeshLambertMaterial({color:j.color}),l=new THREE.Mesh(g,k);a.add(l);var m=e||void 0==this.vdwRadii[j.elem]?d:this.vdwRadii[j.elem];!e&&f&&(m*=f),l.scale.x=l.scale.y=l.scale.z=m,l.position.x=j.x,l.position.y=j.y,l.position.z=j.z}}},a.prototype.drawAtomsAsIcosahedron=function(a,b,c,d){for(var e=this.IcosahedronGeometry(),f=0;f<b.length;f++){var g=this.atoms[b[f]];if(void 0!=g){var h=new THREE.MeshLambertMaterial({color:g.color}),i=new THREE.Mesh(e,h);i.scale.x=i.scale.y=i.scale.z=d||void 0==this.vdwRadii[g.elem]?c:this.vdwRadii[g.elem],a.add(i),i.position.x=g.x,i.position.y=g.y,i.position.z=g.z}}},a.prototype.isConnected=function(a,b){var c=a.bonds.indexOf(b.serial);if(-1!=c)return a.bondOrder[c];if(this.protein.smallMolecule&&(a.hetflag||b.hetflag))return 0;var d=(a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z);return isNaN(d)?0:.5>d?0:d>1.3&&("H"==a.elem||"H"==b.elem||"D"==a.elem||"D"==b.elem)?0:3.42>d&&("S"==a.elem||"S"==b.elem)?1:d>2.78?0:1},a.prototype.drawBondAsStickSub=function(a,b,c,d,e){var f,g;e>1&&(f=this.calcBondDelta(b,c,2.3*d));var h=new TV3(b.x,b.y,b.z),i=new TV3(c.x,c.y,c.z),j=h.clone().addSelf(i).multiplyScalar(.5);new TCo(b.color),new TCo(c.color);(1==e||3==e)&&(this.drawCylinder(a,h,j,d,b.color),this.drawCylinder(a,i,j,d,c.color)),e>1&&(g=j.clone().addSelf(f),this.drawCylinder(a,h.clone().addSelf(f),g,d,b.color),this.drawCylinder(a,i.clone().addSelf(f),g,d,c.color),g=j.clone().subSelf(f),this.drawCylinder(a,h.clone().subSelf(f),g,d,b.color),this.drawCylinder(a,i.clone().subSelf(f),g,d,c.color))},a.prototype.drawBondsAsStick=function(a,b,c,d,e,f,g){var h=(new THREE.SphereGeometry(1,this.sphereQuality,this.sphereQuality),b.length),i=[];f&&(c/=2.5);for(var j=0;h>j;j++){var k=b[j],l=this.atoms[k];if(void 0!=l){for(var m=j+1;j+30>m&&h>m;m++){var n=b[m],o=this.atoms[n];if(void 0!=o){var p=this.isConnected(l,o);0!=p&&(l.connected=o.connected=!0,this.drawBondAsStickSub(a,l,o,c,f?p:1))}}for(var m=0;m<l.bonds.length;m++){var n=l.bonds[m];if(!(k+30>n)&&-1!=b.indexOf(n)){var o=this.atoms[n];void 0!=o&&(l.connected=o.connected=!0,this.drawBondAsStickSub(a,l,o,c,f?l.bondOrder[m]:1))}}l.connected&&i.push(k)}}this.drawAtomsAsSphere(a,i,d,!g,g)},a.prototype.defineCell=function(){var a=this.protein;void 0!=a.a&&(a.ax=a.a,a.ay=0,a.az=0,a.bx=a.b*Math.cos(Math.PI/180*a.gamma),a.by=a.b*Math.sin(Math.PI/180*a.gamma),a.bz=0,a.cx=a.c*Math.cos(Math.PI/180*a.beta),a.cy=a.c*(Math.cos(Math.PI/180*a.alpha)-Math.cos(Math.PI/180*a.gamma)*Math.cos(Math.PI/180*a.beta)/Math.sin(Math.PI/180*a.gamma)),a.cz=Math.sqrt(a.c*a.c*Math.sin(Math.PI/180*a.beta)*Math.sin(Math.PI/180*a.beta)-a.cy*a.cy))},a.prototype.drawUnitcell=function(a){var b=this.protein;if(void 0!=b.a){for(var c=[[0,0,0],[b.ax,b.ay,b.az],[b.bx,b.by,b.bz],[b.ax+b.bx,b.ay+b.by,b.az+b.bz],[b.cx,b.cy,b.cz],[b.cx+b.ax,b.cy+b.ay,b.cz+b.az],[b.cx+b.bx,b.cy+b.by,b.cz+b.bz],[b.cx+b.ax+b.bx,b.cy+b.ay+b.by,b.cz+b.az+b.bz]],d=[0,1,0,2,1,3,2,3,4,5,4,6,5,7,6,7,0,4,1,5,2,6,3,7],e=new THREE.Geometry,f=0;f<d.length;f++)e.vertices.push(new TV3(c[d[f]][0],c[d[f]][1],c[d[f]][2]));var g=new THREE.LineBasicMaterial({linewidth:1,color:13421772}),h=new THREE.Line(e,g);h.type=THREE.LinePieces,a.add(h)}},a.prototype.calcBondDelta=function(a,b,c){for(var d,e=new TV3(a.x-b.x,a.y-b.y,a.z-b.z).normalize(),f=null,g=0;g<a.bonds.length&&!f;g++){var h=this.atoms[a.bonds[g]];h&&h.serial!=b.serial&&"H"!=h.elem&&(f=h)}for(var g=0;g<b.bonds.length&&!f;g++){var h=this.atoms[b.bonds[g]];h&&h.serial!=a.serial&&"H"!=h.elem&&(f=h)}if(f){var i=new TV3(a.x-f.x,a.y-f.y,a.z-f.z).normalize();d=i.dot(e);var j=new TV3(i.x-e.x*d,i.y-e.y*d,i.z-e.z*d)}return(!f||Math.abs(d-1)<.001||Math.abs(d+1)<.001)&&(j=e.x<.01&&e.y<.01?new TV3(0,-e.z,e.y):new TV3(-e.y,e.x,0)),j.normalize().multiplyScalar(c),j},a.prototype.drawBondsAsLineSub=function(a,b,c,d){var e,f,g=a.vertices,h=a.colors;d>1&&(e=this.calcBondDelta(b,c,.15));var i=new TV3(b.x,b.y,b.z),j=new TV3(c.x,c.y,c.z),k=i.clone().addSelf(j).multiplyScalar(.5),l=new TCo(b.color),m=new TCo(c.color);(1==d||3==d)&&(g.push(i),h.push(l),g.push(k),h.push(l),g.push(j),h.push(m),g.push(k),h.push(m)),d>1&&(g.push(i.clone().addSelf(e)),h.push(l),g.push(f=k.clone().addSelf(e)),h.push(l),g.push(j.clone().addSelf(e)),h.push(m),g.push(f),h.push(m),g.push(i.clone().subSelf(e)),h.push(l),g.push(f=k.clone().subSelf(e)),h.push(l),g.push(j.clone().subSelf(e)),h.push(m),g.push(f),h.push(m))},a.prototype.drawBondsAsLine=function(a,b,c){for(var d=new THREE.Geometry,e=b.length,f=0;e>f;f++){var g=b[f],h=this.atoms[g];if(void 0!=h){for(var i=f+1;f+30>i&&e>i;i++){var j=b[i],k=this.atoms[j];if(void 0!=k){var l=this.isConnected(h,k);0!=l&&this.drawBondsAsLineSub(d,h,k,l)}}for(var i=0;i<h.bonds.length;i++){var j=h.bonds[i];if(!(g+30>j)&&-1!=b.indexOf(j)){var k=this.atoms[j];void 0!=k&&this.drawBondsAsLineSub(d,h,k,h.bondOrder[i])}}}}var m=new THREE.LineBasicMaterial({linewidth:c});m.vertexColors=!0;var n=new THREE.Line(d,m);n.type=THREE.LinePieces,a.add(n)},a.prototype.drawSmoothCurve=function(a,b,c,d,e){if(console.log("drawSmoothCurve"),0!=b.length){e=void 0==e?5:e;for(var f=new THREE.Geometry,g=this.subdivide(b,e),h=0;h<g.length;h++)f.vertices.push(g[h]),f.colors.push(new TCo(d[0==h?0:Math.round((h-1)/e)]));var i=new THREE.LineBasicMaterial({linewidth:c});i.vertexColors=!0;var j=new THREE.Line(f,i);j.type=THREE.LineStrip,a.add(j)}},a.prototype.drawAsCross=function(a,b,c){for(var d=new THREE.Geometry,e=[[c,0,0],[-c,0,0],[0,c,0],[0,-c,0],[0,0,c],[0,0,-c]],f=0,g=b.length;g>f;f++){var h=this.atoms[b[f]];if(void 0!=h)for(var i=new TCo(h.color),j=0;6>j;j++)d.vertices.push(new TV3(h.x+e[j][0],h.y+e[j][1],h.z+e[j][2])),d.colors.push(i)}var k=new THREE.LineBasicMaterial({linewidth:this.lineWidth});k.vertexColors=!0;var l=new THREE.Line(d,k,THREE.LinePieces);a.add(l)},a.prototype.drawSmoothTube=function(a,b,c,d){if(!(b.length<2)){for(var e,f=this.tubeDIV,g=this.axisDIV,h=new THREE.Geometry,i=this.subdivide(b,g),j=new TV3,k=0,l=i.length;l>k;k++){var m,n=(k-1)/g;if(0==k)m=d[0];else if(n%1==0)m=d[n];else{var o=Math.floor(n),p=n-o;m=d[o]*p+d[o+1]*(1-p)}var q,r,s;l-1>k?(q=(new TV3).subVectors(i[k],i[k+1]),r=new TV3(0,-q.z,q.y).normalize().multiplyScalar(m),s=(new TV3).cross(q,r).normalize().multiplyScalar(m),j.dot(r)<0&&(r.negate(),s.negate()),j=r,e=s):(r=j,s=e);for(var t=0;f>t;t++){var u=2*Math.PI/f*t,v=Math.cos(u),w=Math.sin(u);h.vertices.push(new TV3(i[k].x+v*r.x+w*s.x,i[k].y+v*r.y+w*s.y,i[k].z+v*r.z+w*s.z))}}for(var x=0,k=0,l=i.length-1;l>k;k++){var v=new TCo(c[Math.round((k-1)/g)]),y=0,z=(new TV3).subVectors(h.vertices[x],h.vertices[x+f]).lengthSq(),A=(new TV3).subVectors(h.vertices[x],h.vertices[x+f+1]).lengthSq();z>A&&(z=A,y=1);for(var t=0;f>t;t++)h.faces.push(new TF3(x+t,x+(t+y)%f+f,x+(t+1)%f)),h.faces.push(new TF3(x+(t+1)%f,x+(t+y)%f+f,x+(t+y+1)%f+f)),h.faces[h.faces.length-2].color=v,h.faces[h.faces.length-1].color=v;x+=f}h.computeFaceNormals(),h.computeVertexNormals(!1);var B=new THREE.MeshLambertMaterial;B.vertexColors=THREE.FaceColors;var C=new THREE.Mesh(h,B);C.doubleSided=!0,a.add(C)}},a.prototype.drawMainchainCurve=function(a,b,c,d,e){var f,g,h=[],i=[];void 0==e&&(e=5);for(var j in b){var k=this.atoms[b[j]];void 0!=k&&(k.atom!=d||k.hetflag||((f!=k.chain||g+1!=k.resi)&&(this.drawSmoothCurve(a,h,c,i,e),h=[],i=[]),h.push(new TV3(k.x,k.y,k.z)),i.push(k.color),f=k.chain,g=k.resi))}this.drawSmoothCurve(a,h,c,i,e)},a.prototype.drawMainchainTube=function(a,b,c,d){var e,f,g=[],h=[],i=[];for(var j in b){var k=this.atoms[b[j]];void 0!=k&&(k.atom!=c||k.hetflag||((e!=k.chain||f+1!=k.resi)&&(this.drawSmoothTube(a,g,h,i),g=[],h=[],i=[]),g.push(new TV3(k.x,k.y,k.z)),void 0==d?i.push(k.b>0?k.b/100:.3):i.push(d),h.push(k.color),e=k.chain,f=k.resi))}this.drawSmoothTube(a,g,h,i)},a.prototype.drawStrip=function(a,b,c,d,e,f){if(console.log("drawStrip"),!(b.length<2)){if(e=e||this.axisDIV,b=this.subdivide(b,e),c=this.subdivide(c,e),!f)return this.drawThinStrip(a,b,c,d,e);for(var g,h,i,j,k,l=new THREE.Geometry,m=l.vertices,n=l.faces,o=0,p=b.length;p>o;o++){if(m.push(h=b[o]),m.push(h),m.push(i=c[o]),m.push(i),p-1>o){var q=b[o+1].clone().subSelf(b[o]),r=c[o].clone().subSelf(b[o]);g=r.crossSelf(q).normalize().multiplyScalar(f)}m.push(j=b[o].clone().addSelf(g)),m.push(j),m.push(k=c[o].clone().addSelf(g)),m.push(k)}for(var s=[[0,2,-6,-8],[-4,-2,6,4],[7,3,-5,-1],[-3,-7,1,5]],o=1,p=b.length;p>o;o++)for(var t=8*o,u=new TCo(d[Math.round((o-1)/e)]),v=0;4>v;v++){var w=new THREE.Face4(t+s[v][0],t+s[v][1],t+s[v][2],t+s[v][3],void 0,u);n.push(w)}for(var x=m.length-8,o=0;4>o;o++)m.push(m[2*o]),m.push(m[x+2*o]);x+=8,n.push(new THREE.Face4(x,x+2,x+6,x+4,void 0,n[0].color)),n.push(new THREE.Face4(x+1,x+5,x+7,x+3,void 0,n[n.length-3].color)),l.computeFaceNormals(),l.computeVertexNormals(!1);var y=new THREE.MeshLambertMaterial;y.vertexColors=THREE.FaceColors;var z=new THREE.Mesh(l,y);z.doubleSided=!0,a.add(z)}},a.prototype.drawThinStrip=function(a,b,c,d,e){console.log("drawThinStrip");for(var f=new THREE.Geometry,g=0,h=b.length;h>g;g++)f.vertices.push(b[g]),f.vertices.push(c[g]);for(var g=1,h=b.length;h>g;g++){var i=new THREE.Face4(2*g,2*g+1,2*g-1,2*g-2);i.color=new TCo(d[Math.round((g-1)/e)]),f.faces.push(i)}f.computeFaceNormals(),f.computeVertexNormals(!1);var j=new THREE.MeshLambertMaterial;j.vertexColors=THREE.FaceColors;var k=new THREE.Mesh(f,j);k.doubleSided=!0,a.add(k)},a.prototype.IcosahedronGeometry=function(){return this.icosahedron||(this.icosahedron=new THREE.IcosahedronGeometry(1)),this.icosahedron},a.prototype.drawCylinder=function(a,b,c,d,e,f){if(b&&c){var g=(new TV3).add(b,c).multiplyScalar(.5),e=new TCo(e);this.cylinderGeometry||(this.cylinderGeometry=new THREE.CylinderGeometry(1,1,1,this.cylinderQuality,1,!f),this.cylinderGeometry.faceUvs=[],this.faceVertexUvs=[]);var h=new THREE.MeshLambertMaterial({color:e.getHex()}),i=new THREE.Mesh(this.cylinderGeometry,h);i.position=g,i.lookAt(b),i.updateMatrix(),i.matrixAutoUpdate=!1;var j=(new THREE.Matrix4).makeScale(d,d,b.distanceTo(c));j.rotateX(Math.PI/2),i.matrix.multiplySelf(j),a.add(i)}},a.prototype.drawHelixAsCylinder=function(a,b,c){var d,e,f=null,g=[],h=[];for(var i in b){var j=this.atoms[b[i]];void 0==j||j.hetflag||(("h"!=j.ss&&"s"!=j.ss||j.ssend||j.ssbegin)&&g.push(j.serial),"s"==j.ss&&h.push(j.serial),"CA"==j.atom&&("h"==j.ss&&j.ssend&&(null!=f&&this.drawCylinder(a,new TV3(f.x,f.y,f.z),new TV3(j.x,j.y,j.z),c,j.color,!0),f=null),d=j.chain,e=j.resi,null==f&&"h"==j.ss&&j.ssbegin&&(f=j)))}null!=f&&this.drawCylinder(a,new TV3(f.x,f.y,f.z),new TV3(j.x,j.y,j.z),c,j.color),this.drawMainchainTube(a,g,"CA",.3),this.drawStrand(a,h,void 0,void 0,!0,0,this.helixSheetWidth,!1,2*this.thickness)},a.prototype.drawCartoon=function(a,b,c,d,e){this.drawStrand(a,b,c,2,void 0,!0,void 0,void 0,d,e)},a.prototype.drawStrand=function(a,b,c,d,e,f,g,h,i,j){d=d||this.strandDIV,e=e||this.axisDIV,g=g||this.coilWidth,h=h||this.helixSheetWidth;for(var k=[],l=0;d>l;l++)k[l]=[];var m,n,o,p=[],q=null,r=null,s=!1,t=this.atoms[b];for(var u in c){var v=t[c[u]];if(void 0!=v&&("O"==v.atom||"CA"==v.atom)&&!v.hetflag)if("CA"==v.atom){if(m!=v.chain||n+1!=v.resi){for(var w=0;!j&&d>w;w++)this.drawSmoothCurve(a,k[w],1,p,e);f&&this.drawStrip(a,k[0],k[d-1],p,e,j);for(var k=[],l=0;d>l;l++)k[l]=[];p=[],q=null,r=null,s=!1}o=new TV3(v.x,v.y,v.z),m=v.chain,n=v.resi,r=v.ss,s=v.ssstart||v.ssend,p.push(v.color)}else{var x=new TV3(v.x,v.y,v.z);x.subSelf(o),x.normalize(),x.multiplyScalar("c"==r?g:h),void 0!=q&&x.dot(q)<0&&x.negate(),q=x;for(var w=0;d>w;w++){var y=-1+2/(d-1)*w,z=new TV3(o.x+q.x*y,o.y+q.y*y,o.z+q.z*y);i||"s"!=r||(z.smoothen=!0),k[w].push(z)}}}for(var w=0;!j&&d>w;w++)console.log(this.drawSmoothCurve),this.drawSmoothCurve(a,k[w],1,p,e);f&&this.drawStrip(a,k[0],k[d-1],p,e,j)},a.prototype.drawNucleicAcidLadderSub=function(a,b,c,d){if(void 0!=c[0]&&void 0!=c[1]&&void 0!=c[2]&&void 0!=c[3]&&void 0!=c[4]&&void 0!=c[5]){for(var e=a.vertices.length,f=0;5>=f;f++)a.vertices.push(c[f]);a.faces.push(new TF3(e,e+1,e+2)),a.faces.push(new TF3(e,e+2,e+3)),a.faces.push(new TF3(e,e+3,e+4)),a.faces.push(new TF3(e,e+4,e+5));for(var g=a.faces.length-4,h=a.faces.length;h>g;g++)a.faces[g].color=d}if(void 0!=c[4]&&void 0!=c[3]&&void 0!=c[6]&&void 0!=c[7]&&void 0!=c[8]){var e=a.vertices.length;a.vertices.push(c[4]),a.vertices.push(c[3]),a.vertices.push(c[6]),a.vertices.push(c[7]),a.vertices.push(c[8]);for(var f=0;4>=f;f++)a.colors.push(d);a.faces.push(new TF3(e,e+1,e+2)),a.faces.push(new TF3(e,e+2,e+3)),a.faces.push(new TF3(e,e+3,e+4));for(var g=a.faces.length-3,h=a.faces.length;h>g;g++)a.faces[g].color=d}},a.prototype.drawNucleicAcidLadder=function(a,b){var c,d,e=new THREE.Geometry,f=new THREE.Geometry,g=["N1","C2","N3","C4","C5","C6","N9","C8","N7"],h=new Array(g.length),i=new TCo(13369344);for(var j in b){var k=this.atoms[b[j]];if(void 0!=k&&!k.hetflag){(k.resi!=d||k.chain!=c)&&(this.drawNucleicAcidLadderSub(e,f,h,i),h=new Array(g.length));var l=g.indexOf(k.atom);-1!=l&&(h[l]=new TV3(k.x,k.y,k.z)),"O3'"==k.atom&&(i=new TCo(k.color)),d=k.resi,c=k.chain}}this.drawNucleicAcidLadderSub(e,f,h,i),e.computeFaceNormals();var m=new THREE.MeshLambertMaterial;m.vertexColors=THREE.VertexColors;var n=new THREE.Mesh(e,m);n.doubleSided=!0,a.add(n)},a.prototype.drawNucleicAcidStick=function(a,b){var c,d,e=null,f=null;for(var g in b){var h=this.atoms[b[g]];void 0==h||h.hetflag||((h.resi!=d||h.chain!=c)&&(null!=e&&null!=f&&this.drawCylinder(a,new TV3(e.x,e.y,e.z),new TV3(f.x,f.y,f.z),.3,e.color,!0),e=null,f=null),"O3'"==h.atom&&(e=h),"  A"==h.resn||"  G"==h.resn||" DA"==h.resn||" DG"==h.resn?"N1"==h.atom&&(f=h):"N3"==h.atom&&(f=h),d=h.resi,c=h.chain)}null!=e&&null!=f&&this.drawCylinder(a,new TV3(e.x,e.y,e.z),new TV3(f.x,f.y,f.z),.3,e.color,!0)},a.prototype.drawNucleicAcidLine=function(a,b){var c,d,e=null,f=null,g=new THREE.Geometry;for(var h in b){var i=this.atoms[b[h]];void 0==i||i.hetflag||((i.resi!=d||i.chain!=c)&&(null!=e&&null!=f&&(g.vertices.push(new TV3(e.x,e.y,e.z)),g.colors.push(new TCo(e.color)),g.vertices.push(new TV3(f.x,f.y,f.z)),g.colors.push(new TCo(e.color))),e=null,f=null),"O3'"==i.atom&&(e=i),"  A"==i.resn||"  G"==i.resn||" DA"==i.resn||" DG"==i.resn?"N1"==i.atom&&(f=i):"N3"==i.atom&&(f=i),d=i.resi,c=i.chain)}null!=e&&null!=f&&(g.vertices.push(new TV3(e.x,e.y,e.z)),g.colors.push(new TCo(e.color)),g.vertices.push(new TV3(f.x,f.y,f.z)),g.colors.push(new TCo(e.color)));var j=new THREE.LineBasicMaterial({linewidth:1,linejoin:!1});j.linewidth=1.5,j.vertexColors=!0;var k=new THREE.Line(g,j,THREE.LinePieces);a.add(k)},a.prototype.drawCartoonNucleicAcid=function(a,b,c,d,e){this.drawStrandNucleicAcid(a,b,c,2,d,!0,void 0,e)},a.prototype.drawStrandNucleicAcid=function(a,b,c,d,e,f,g,h){g=g||this.nucleicAcidWidth,e=e||this.axisDIV,d=d||this.nucleicAcidStrandDIV;for(var i=[],j=0;d>j;j++)i[j]=[];var k,l,m,n=[],o=null,p=this.atoms[b];for(var q in c){var r=p[c[q]];if(void 0!=r&&("O3'"==r.atom||"OP2"==r.atom)&&!r.hetflag)if("O3'"==r.atom){if(k!=r.chain||l+1!=r.resi){if(m)for(var s=0;d>s;s++){var t=-1+2/(d-1)*s;i[s].push(new TV3(m.x+o.x*t,m.y+o.y*t,m.z+o.z*t))}f&&this.drawStrip(a,i[0],i[1],n,e,h);for(var s=0;!h&&d>s;s++)this.drawSmoothCurve(a,i[s],1,n,e);for(var i=[],j=0;d>j;j++)i[j]=[];n=[],o=null}m=new TV3(r.x,r.y,r.z),k=r.chain,l=r.resi,n.push(r.color)}else{if(!m){o=null;continue}var u=new TV3(r.x,r.y,r.z);u.subSelf(m),u.normalize().multiplyScalar(g),void 0!=o&&u.dot(o)<0&&u.negate(),o=u;for(var s=0;d>s;s++){var t=-1+2/(d-1)*s;i[s].push(new TV3(m.x+o.x*t,m.y+o.y*t,m.z+o.z*t))}m=null}}if(m)for(var s=0;d>s;s++){var t=-1+2/(d-1)*s;i[s].push(new TV3(m.x+o.x*t,m.y+o.y*t,m.z+o.z*t))}f&&this.drawStrip(a,i[0],i[1],n,e,h);for(var s=0;!h&&d>s;s++)this.drawSmoothCurve(a,i[s],1,n,e)},a.prototype.drawDottedLines=function(a,b,c){for(var d=new THREE.Geometry,e=.3,f=0,g=Math.floor(b.length/2);g>f;f++){var h=b[2*f],i=b[2*f+1],j=i.clone().subSelf(h),k=j.length();j.normalize().multiplyScalar(e);for(var l=Math.floor(k/e),m=0;l>m;m++){var n=new TV3(h.x+j.x*m,h.y+j.y*m,h.z+j.z*m);d.vertices.push(n)}l%2==1&&d.vertices.push(i)}var o=new THREE.LineBasicMaterial({color:c.getHex()});o.linewidth=2;var p=new THREE.Line(d,o,THREE.LinePieces);a.add(p)},a.prototype.getAllAtoms=function(a){var b=[],c=this.atoms[a];for(var d in c)b.push(c[d].serial);return b},a.prototype.getHetatms=function(a,b){var c=[],d=this.atoms[b];for(var e in a){var f=d[a[e]];void 0!=f&&f.hetflag&&c.push(f.serial)}return c},a.prototype.removeSolvents=function(a,b){var c=[],d=this.atoms[b];for(var e in a){var f=d[a[e]];void 0!=f&&"HOH"!=f.resn&&c.push(f.serial)}return c},a.prototype.getProteins=function(a){var b=[];for(var c in a){var d=this.atoms[a[c]];void 0!=d&&(d.hetflag||b.push(d.serial))}return b},a.prototype.excludeAtoms=function(a,b){var c=[],d=new Object;for(var e in b)d[b[e]]=!0;for(var e in a){var f=a[e];d[f]||c.push(f)}return c},a.prototype.getSidechains=function(a){var b=[];for(var c in a){var d=this.atoms[a[c]];void 0!=d&&(d.hetflag||"C"==d.atom||"O"==d.atom||"N"==d.atom&&"PRO"!=d.resn||b.push(d.serial))}return b},a.prototype.getAtomsWithin=function(a,b){var c=[];for(var d in a){var e=this.atoms[a[d]];void 0!=e&&(e.x<b[0][0]||e.x>b[1][0]||e.y<b[0][1]||e.y>b[1][1]||e.z<b[0][2]||e.z>b[1][2]||c.push(e.serial))}return c},a.prototype.getExtent=function(a){var b=9999,c=9999,d=9999,e=-9999,f=-9999,g=-9999,h=0,i=0,j=0,k=0;for(var l in a){var m=this.atoms[a[l]];void 0!=m&&(k++,h+=m.x,i+=m.y,j+=m.z,b=b<m.x?b:m.x,c=c<m.y?c:m.y,d=d<m.z?d:m.z,e=e>m.x?e:m.x,f=f>m.y?f:m.y,g=g>m.z?g:m.z)}return[[b,c,d],[e,f,g],[h/k,i/k,j/k]]},a.prototype.getResiduesById=function(a,b){var c=[];for(var d in a){var e=this.atoms[a[d]];void 0!=e&&-1!=b.indexOf(e.resi)&&c.push(e.serial)}return c},a.prototype.getResidueBySS=function(a,b){var c=[];for(var d in a){var e=this.atoms[a[d]];void 0!=e&&-1!=b.indexOf(e.ss)&&c.push(e.serial)}return c},a.prototype.getChain=function(a,b){var c=[],d={};b=b.toString();for(var e=0,f=b.length;f>e;e++)d[b.substr(e,1)]=!0;for(var e in a){var g=this.atoms[a[e]];void 0!=g&&d[g.chain]&&c.push(g.serial)}return c},a.prototype.getNonbonded=function(a,b){var c=[];for(var d in a){var e=this.atoms[a[d]];void 0!=e&&e.hetflag&&0==e.bonds.length&&c.push(e.serial)}return c},a.prototype.colorByAtom=function(a,b,c){var d=this.atoms[b];for(var e in a){var f=d[a[e]];if(void 0!=f){var g=c[f.elem];void 0==g&&(g=this.ElementColors[f.elem]),void 0==g&&(g=this.defaultColor),f.color=g}}},a.prototype.colorByStructure=function(a,b,c,d){for(var e in a){var f=this.atoms[a[e]];void 0!=f&&(d||"CA"==f.atom&&!f.hetflag)&&("s"==f.ss[0]?f.color=c:"h"==f.ss[0]&&(f.color=b))}},a.prototype.colorByBFactor=function(a,b){var c=1e3,d=-1e3;for(var e in a){var f=this.atoms[a[e]];void 0!=f&&(f.hetflag||(b||"CA"==f.atom||"O3'"==f.atom)&&(c>f.b&&(c=f.b),d<f.b&&(d=f.b)))}var g=(d+c)/2,h=(d-c)/2;if(!(.01>h&&h>-.01))for(var e in a){var f=this.atoms[a[e]];if(void 0!=f&&!f.hetflag&&(b||"CA"==f.atom||"O3'"==f.atom)){var i=new TCo(0);f.b<g?i.setHSV(.667,(g-f.b)/h,1):i.setHSV(0,(f.b-g)/h,1),f.color=i.getHex()}}},a.prototype.colorByChain=function(a,b){for(var c in a){var d=this.atoms[a[c]];if(void 0!=d&&!d.hetflag&&(b||"CA"==d.atom||"O3'"==d.atom)){var e=new TCo(0);e.setHSV(5*d.chain.charCodeAt(0)%17/17,1,.9),d.color=e.getHex()}}},a.prototype.colorByResidue=function(a,b){for(var c in a){var d=this.atoms[a[c]];if(void 0!=d){var e=b[d.resn];void 0!=e&&(d.color=e)}}},a.prototype.colorAtoms=function(a,b){for(var c in a){var d=this.atoms[a[c]];void 0!=d&&(d.color=b)}},a.prototype.colorByPolarity=function(a,b,c){var d=["ARG","HIS","LYS","ASP","GLU","SER","THR","ASN","GLN","CYS"],e=["GLY","PRO","ALA","VAL","LEU","ILE","MET","PHE","TYR","TRP"],f={};for(var g in d)f[d[g]]=b;for(g in e)f[e[g]]=c;this.colorByResidue(a,f)},a.prototype.colorChainbow=function(a,b,c){var d,e,f=0,g=this.atoms[b];for(e in a)d=g[a[e]],void 0!=d&&(!c&&"CA"==d.atom&&"O3'"==d.atom||d.hetflag||f++);var h=f;f=0;for(e in a)if(d=g[a[e]],void 0!=d&&(c||"CA"!=d.atom||"O3'"!=d.atom)&&!d.hetflag){var i=new TCo(0);i.setHSV(240/360*(1-f/h),1,.9),d.color=i.getHex(),f++}},a.prototype.colorMono=function(a,b,c){this.hasOwnProperty("currentColorH")?this.currentColorH+=60:this.currentColorH=0;var d,e,f=this.atoms[b];for(e in a)if(d=f[a[e]],void 0!=d&&(c||"CA"!=d.atom||"O3'"!=d.atom)&&!d.hetflag){var g=new TCo(0);g.setHSV(this.currentColorH/360,1,1),d.color=g.getHex()}},a.prototype.drawSymmetryMates2=function(a,b,c){if(void 0!=c){b.matrixAutoUpdate=!1;var d=1;this.protein.appliedMatrix=new THREE.Matrix4;for(var e=0;e<c.length;e++){var f=c[e];if(void 0!=f&&!f.isIdentity()){console.log(f);var g=THREE.SceneUtils.cloneObject(b);g.matrix=f,a.add(g);for(var h=0;16>h;h++)this.protein.appliedMatrix.elements[h]+=f.elements[h];d++}}this.protein.appliedMatrix.multiplyScalar(d)}},a.prototype.drawSymmetryMatesWithTranslation2=function(a,b,c){if(void 0!=c){var d=this.protein;b.matrixAutoUpdate=!1;for(var e=0;e<c.length;e++){var f=c[e];if(void 0!=f)for(var g=-1;0>=g;g++)for(var h=-1;0>=h;h++)for(var i=-1;0>=i;i++){var j=(new THREE.Matrix4).makeTranslation(d.ax*g+d.bx*h+d.cx*i,d.ay*g+d.by*h+d.cy*i,d.az*g+d.bz*h+d.cz*i),k=f.clone().multiplySelf(j);if(!k.isIdentity()){var l=THREE.SceneUtils.cloneObject(b);l.matrix=k,a.add(l)}}}}},a.prototype.pivotCentroid=function(a,b){var c=this.centroids[b];a.position.set(-c[0],-c[1],-c[2])},a.prototype.defineRepresentation=function(a){var b=this.getAllAtoms(a),c=this.removeSolvents(this.getHetatms(b,a),a);this.colorByAtom(b,a,{}),this.colorMono(b,a);var d=new THREE.Object3D({transparent:!0,opacity:.5});this.drawAtomsAsSphere(d,a,c,this.sphereRadius),
this.drawCartoon(d,a,b,!1,this.thickness,a),this.drawCartoonNucleicAcid(d,a,b,null,this.thickness,a),this.pivotCentroid(d,a),d.name=a,this.modelGroup.add(d),this.show()},a.prototype.getView=function(){if(!this.modelGroup)return[0,0,0,0,0,0,0,1];var a=this.modelGroup.position,b=this.rotationGroup.quaternion;return[a.x,a.y,a.z,this.rotationGroup.position.z,b.x,b.y,b.z,b.w]},a.prototype.setView=function(a){this.modelGroup&&this.rotationGroup&&(this.modelGroup.position.x=a[0],this.modelGroup.position.y=a[1],this.modelGroup.position.z=a[2],this.rotationGroup.position.z=a[3],this.rotationGroup.quaternion.x=a[4],this.rotationGroup.quaternion.y=a[5],this.rotationGroup.quaternion.z=a[6],this.rotationGroup.quaternion.w=a[7],this.show())},a.prototype.setBackground=function(a,b){b=1|b,this.bgColor=a,this.renderer.setClearColorHex(a,b),this.scene.fog.color=new TCo(a)},a.prototype.initializeScene=function(){this.scene=new THREE.Scene,this.scene.fog=new THREE.Fog(16777215,1e3,2e3),this.modelGroup=new THREE.Object3D,this.surfGroup=new THREE.Object3D,this.rotationGroup=new THREE.Object3D,this.rotationGroup.useQuaternion=!0,this.rotationGroup.quaternion=new THREE.Quaternion(1,0,0,0),this.rotationGroup.add(this.modelGroup),this.rotationGroup.add(this.surfGroup),this.scene.add(this.rotationGroup),this.camera&&this.scene.add(this.camera),this.setupLights(this.scene)},a.prototype.zoomInto=function(a,b){var c=this.getExtent(a),d=new TV3(c[2][0],c[2][1],c[2][2]);this.protein.appliedMatrix&&(d=this.protein.appliedMatrix.multiplyVector3(d)),this.modelGroup.position=d.multiplyScalar(-1);var e=c[1][0]-c[0][0],f=c[1][1]-c[0][1],g=c[1][2]-c[0][2],h=Math.sqrt(e*e+f*f+g*g);25>h&&(h=25),b||(this.slabNear=-h/1.9,this.slabFar=h/3),this.rotationGroup.position.z=.35*h/Math.tan(Math.PI/180*this.camera.fov/2)-150,this.rotationGroup.quaternion=new THREE.Quaternion(1,0,0,0)},a.prototype.rebuildScene=function(a){var b=(new Date,this.getView());this.defineRepresentation(a),this.setView(b)},a.prototype.loadMolecule=function(a){this.loadMoleculeStr(a,$("#"+this.id+"_src").val())},a.prototype.loadMoleculeStr=function(a,b){new Date;this.rebuildScene(!0)},a.prototype.setSlabAndFog=function(){},a.prototype.enableMouse=function(){var a=this,b=$(this.renderer.domElement);b.bind("mousedown touchstart",function(b){if(b.preventDefault(),a.scene){var c=b.pageX,d=b.pageY;b.originalEvent.targetTouches&&b.originalEvent.targetTouches[0]&&(c=b.originalEvent.targetTouches[0].pageX,d=b.originalEvent.targetTouches[0].pageY),void 0!=c&&(a.isDragging=!0,a.mouseButton=b.which,a.mouseStartX=c,a.mouseStartY=d,a.cq=a.rotationGroup.quaternion,a.cz=a.rotationGroup.position.z,a.currentModelPos=a.modelGroup.position.clone(),a.cslabNear=a.slabNear,a.cslabFar=a.slabFar)}}),b.bind("DOMMouseScroll mousewheel",function(b){if(b.preventDefault(),a.scene){var c=.85*(a.rotationGroup.position.z-a.CAMERA_Z);b.originalEvent.detail?a.rotationGroup.position.z+=c*b.originalEvent.detail/10:b.originalEvent.wheelDelta&&(a.rotationGroup.position.z-=c*b.originalEvent.wheelDelta/400),console.log(b.originalEvent.wheelDelta,b.originalEvent.detail,a.rotationGroup.position.z),a.show()}}),b.bind("contextmenu",function(a){a.preventDefault()}),$("body").bind("mouseup touchend",function(b){a.isDragging=!1}),b.bind("mousemove touchmove",function(b){if(b.preventDefault(),a.scene&&a.isDragging){var c=0,d=$("input[name="+a.id+"_mouseMode]:checked");d.length>0&&(c=parseInt(d.val()));var e=b.pageX,f=b.pageY;if(b.originalEvent.targetTouches&&b.originalEvent.targetTouches[0]&&(e=b.originalEvent.targetTouches[0].pageX,f=b.originalEvent.targetTouches[0].pageY),void 0!=e){var g=(e-a.mouseStartX)/a.WIDTH,h=(f-a.mouseStartY)/a.HEIGHT,i=Math.sqrt(g*g+h*h);if(3==c||3==a.mouseButton&&b.ctrlKey)a.slabNear=a.cslabNear+100*g,a.slabFar=a.cslabFar+100*h;else if(2==c||3==a.mouseButton||b.shiftKey){var j=.85*(a.rotationGroup.position.z-a.CAMERA_Z);80>j&&(j=80),a.rotationGroup.position.z=a.cz-h*j}else if(1==c||2==a.mouseButton||b.ctrlKey){var j=.85*(a.rotationGroup.position.z-a.CAMERA_Z);20>j&&(j=20);var k=new TV3(-g*j,-h*j,0),l=a.rotationGroup.quaternion,m=new THREE.Quaternion(l.x,l.y,l.z,l.w).inverse().normalize(),n=m.multiplyVector3(k);a.modelGroup.position.x=a.currentModelPos.x+n.x,a.modelGroup.position.y=a.currentModelPos.y+n.y,a.modelGroup.position.z=a.currentModelPos.z+n.z}else if((0==c||1==a.mouseButton)&&0!=i){var o=Math.sin(i*Math.PI)/i;a.dq.x=Math.cos(i*Math.PI),a.dq.y=0,a.dq.z=o*g,a.dq.w=o*h,a.rotationGroup.quaternion=new THREE.Quaternion(1,0,0,0),a.rotationGroup.quaternion.multiplySelf(a.dq),a.rotationGroup.quaternion.multiplySelf(a.cq)}a.show()}}})},a.prototype.show=function(){if(this.scene){new Date;this.setSlabAndFog(),this.renderer.render(this.scene,this.camera)}},a.prototype.doFunc=function(a){a(this)},a}();angular.module("pclayApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngRoute","ngSanitize","ngTouch","ngMaterial"]).constant("config",{appName:"pClay",server:"http://localhost:8000/"}).config(["$routeProvider","$mdThemingProvider",function(a,b){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/"}),b.definePalette("amazingPaletteName",{50:"ffebee",100:"ffcdd2",200:"ef9a9a",300:"e57373",400:"ef5350",500:"f44336",600:"e53935",700:"d32f2f",800:"c62828",900:"b71c1c",A100:"ff8a80",A200:"ff5252",A400:"ff1744",A700:"d50000",contrastDefaultColor:"light",contrastDarkColors:["50","100","200","300","400","A100"],contrastLightColors:void 0}),b.theme("default").primaryPalette("amber").accentPalette("grey")}]),angular.module("pclayApp").controller("MainCtrl",["$scope","$http","config","AnimateIntro",function(a,b,c,d){function e(a){a.input={},a.show={dropzone:!0,surfaces:!1,structures:!1},a.pdbList=[],a.surfList=[],a.progress={},a.ops={surfgen:"pdb?op=surfgen&id=",pdb:"pdb?op=pdb&id="}}a.loadingBarVisible=!1,a.floatingClass="floating-blur",a.colors=["0xff0000","0x00ff00","0x0000ff","0xf0f0f0","0x0f0f0f"],a.colorsIndex=0,a.mouseFloating=function(){this.mouseover?(console.log(this),a.floatingClass="floating-blur",this.mouseover=!1):(console.log(this),a.floatingClass="floating-show",this.mouseover=!0)},a.pdb=function(a,b,c){return{id:a,toggled:!0,"class":b,style:c}},a.surf=function(a,b,c){return{id:a,toggled:!0,"class":b,style:c}},a.glmol=new GLmol("glmolX",!0,"canvas"),a.glmol.init();var f=c.server;e(a),a.handleError=function(a){console.log("Error:",a)},a.input.reset=function(){a.input.name=""},a.fetchPdb=function(c){c&&(c=c.toUpperCase(),a.findDuplicate(c,a.pdbList)?alert("PDB already rendered"):void 0===a.input.name||""===a.input.name?alert("Please enter PDB ID."):(a.input.reset(),b.get(f+a.ops.pdb+c).success(function(b){console.log("Fetching",c,"done."),a.glmol.addPDB(c,b.data),a.pdbList.push(new a.pdb(c,"md-primary"))}).error(function(b){a.handleError(b)})))},a.fetchSurf=function(c,d){c&&(c=c.toUpperCase(),a.findDuplicate(c,a.surfList)?alert("Surf already rendered"):void 0===a.input.name||""===a.input.name?alert("Please enter Surface ID."):(a.input.reset(),b.get(f+a.ops.surfgen+c).success(function(e){console.log("Fetching",c,"done."),b.get(e.url).success(function(b){console.log("fetchPdb success"),a.glmol.addSurf(c,b,d),a.surfList.push(new a.surf(c,"md-primary"))}).error(function(b){a.handleError(b)})}).error(function(b){a.handleError(b)})))},a.renderSurf=function(b,c,d){a.showLoadingBar(),b&&(b=b.toUpperCase(),a.findDuplicate(b,a.surfList)?alert("Surf already rendered"):(a.glmol.addSurf(b,c,d),a.$apply(function(){a.surfListVisible=!0,a.surfList.push(new a.surf(b,"md-primary",{"background-color":"#"+d.substring(2)})),console.log(a.surfList)})),a.hideLoadingBar())},a.renderPdb=function(b,c,d){a.showLoadingBar(),b&&(b=b.toUpperCase(),a.findDuplicate(b,a.pdbList)?alert("PDB already rendered"):(a.glmol.addPDBRaw(b,c,d),a.$apply(function(){a.pdbListVisible=!0,a.pdbList.push(new a.pdb(b,"md-primary",{"background-color":"#"+d.substring(2)}))})),a.hideLoadingBar())},a.pdbToggleGL=function(b){a.glmol.pdbToggle(b)},a.pdbToggle=function(b){a.pdbToggleGL(b.id),b.toggled?(b.toggled=!1,b.style.bg=b.style["background-color"],b.style["background-color"]="white"):(b.toggled=!0,b.style["background-color"]=b.style.bg)},a.surfToggleGL=function(b){a.glmol.surfToggle(b)},a.surfToggle=function(b){a.surfToggleGL(b.id),b.toggled?(b.toggled=!1,b.style.bg=b.style["background-color"],b.style["background-color"]="white"):(b.toggled=!0,b.style["background-color"]=b.style.bg)},a.findDuplicate=function(a,b){for(var c=0;c<b.length;c++)if(console.log(b[c]),b[c].id===a)return!0;return!1},a.showLoadingBar=function(){a.$apply(function(){a.loadingBarVisible=!0})},a.hideLoadingBar=function(){a.$apply(function(){a.loadingBarVisible=!1})},a.hideAnimatedIntro=function(){$(".cd-intro").fadeOut()},a.showDropNoti=function(){$("#dropnoti").fadeIn()},a.hideDropNoti=function(){$("#dropnoti").fadeOut()},a.getNewColor=function(b){return a.glmol?"pdb"===b?"0x"+a.glmol.getCurrentColor():"0x"+a.glmol.getNewColor():"0xff0000"};var g={readAsDefault:"Text",dragClass:"xdrag",on:{beforestart:function(b){if(a.hideDropNoti(),a.showLoadingBar(),b.extra){var c=b.extra.extension.toLowerCase();if("surf"!==c&&"pdb"!==c)return a.hideLoadingBar(),alert("Please only drop SURF or PDB files"),!1}},load:function(a,b){},loadend:function(b,c){if(a.hideAnimatedIntro(),c.extra){var d=c.extra.extension.toLowerCase(),e=b.target.result,f=c.extra.nameNoExtension,g=a.getNewColor(d);"surf"===d?a.renderSurf(f,e,g):"pdb"===d&&a.renderPdb(f,e,g)}a.hideLoadingBar()},error:function(a,b){console.log(a)},groupstart:function(a){},groupend:function(a){}}};$("#canvas").fileReaderJS(g),a.hideDropNoti(),$("#dropnoti").hide();var h;$("#canvas").on("dragover",function(b){var c=b.originalEvent.dataTransfer;null!=c.types&&(c.types.indexOf?-1!=c.types.indexOf("Files"):c.types.contains("application/x-moz-file"))&&(a.showDropNoti(),window.clearTimeout(h))}),$("#canvas").on("dragleave",function(b){h=window.setTimeout(function(){a.hideDropNoti()},25)})}]),angular.module("pclayApp").factory("AnimateIntro",function(){function a(){b($(".cd-headline.letters").find("b")),c($(".cd-headline"))}function b(a){a.each(function(){var a=$(this),b=a.text().split(""),c=a.hasClass("is-visible");for(i in b)a.parents(".rotate-2").length>0&&(b[i]="<em>"+b[i]+"</em>"),b[i]=c?'<i class="in">'+b[i]+"</i>":"<i>"+b[i]+"</i>";var d=b.join("");a.html(d).css("opacity",1)})}function c(a){var b=k;a.each(function(){var a=$(this);if(a.hasClass("loading-bar"))b=l,setTimeout(function(){a.find(".cd-words-wrapper").addClass("is-loading")},m);else if(a.hasClass("clip")){var c=a.find(".cd-words-wrapper"),e=c.width()+10;c.css("width",e)}else if(!a.hasClass("type")){var f=a.find(".cd-words-wrapper b"),g=0;f.each(function(){var a=$(this).width();a>g&&(g=a)}),a.find(".cd-words-wrapper").css("width",g)}setTimeout(function(){d(a.find(".is-visible").eq(0))},b)})}function d(a){var b=h(a);if(a.parents(".cd-headline").hasClass("type")){var c=a.parent(".cd-words-wrapper");c.addClass("selected").removeClass("waiting"),setTimeout(function(){c.removeClass("selected"),a.removeClass("is-visible").addClass("is-hidden").children("i").removeClass("in").addClass("out")},p),setTimeout(function(){e(b,o)},q)}else if(a.parents(".cd-headline").hasClass("letters")){var i=a.children("i").length>=b.children("i").length?!0:!1;f(a.find("i").eq(0),a,i,n),g(b.find("i").eq(0),b,i,n)}else a.parents(".cd-headline").hasClass("clip")?a.parents(".cd-words-wrapper").animate({width:"2px"},r,function(){j(a,b),e(b)}):a.parents(".cd-headline").hasClass("loading-bar")?(a.parents(".cd-words-wrapper").removeClass("is-loading"),j(a,b),setTimeout(function(){d(b)},l),setTimeout(function(){a.parents(".cd-words-wrapper").addClass("is-loading")},m)):(j(a,b),setTimeout(function(){d(b)},k))}function e(a,b){a.parents(".cd-headline").hasClass("type")?(g(a.find("i").eq(0),a,!1,b),a.addClass("is-visible").removeClass("is-hidden")):a.parents(".cd-headline").hasClass("clip")&&a.parents(".cd-words-wrapper").animate({width:a.width()+10},r,function(){setTimeout(function(){d(a)},s)})}function f(a,b,c,e){if(a.removeClass("in").addClass("out"),a.is(":last-child")?c&&setTimeout(function(){d(h(b))},k):setTimeout(function(){f(a.next(),b,c,e)},e),a.is(":last-child")&&$("html").hasClass("no-csstransitions")){var g=h(b);j(b,g)}}function g(a,b,c,e){a.addClass("in").removeClass("out"),a.is(":last-child")?(b.parents(".cd-headline").hasClass("type")&&setTimeout(function(){b.parents(".cd-words-wrapper").addClass("waiting")},200),c||setTimeout(function(){d(b)},k)):setTimeout(function(){g(a.next(),b,c,e)},e)}function h(a){return a.is(":last-child")?a.parent().children().eq(0):a.next()}function j(a,b){a.removeClass("is-visible").addClass("is-hidden"),b.removeClass("is-hidden").addClass("is-visible")}var k=2e3,l=3800,m=l-3e3,n=50,o=150,p=500,q=p+800,r=600,s=1500;return a(),null}),angular.module("pclayApp").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]);